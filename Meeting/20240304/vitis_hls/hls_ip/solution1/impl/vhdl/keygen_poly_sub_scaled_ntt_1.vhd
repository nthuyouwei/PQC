-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity keygen_poly_sub_scaled_ntt_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce0 : OUT STD_LOGIC;
    vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce1 : OUT STD_LOGIC;
    vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    F : IN STD_LOGIC_VECTOR (14 downto 0);
    Flen : IN STD_LOGIC_VECTOR (63 downto 0);
    Fstride : IN STD_LOGIC_VECTOR (8 downto 0);
    f_r : IN STD_LOGIC_VECTOR (14 downto 0);
    flen_r : IN STD_LOGIC_VECTOR (7 downto 0);
    fstride_r : IN STD_LOGIC_VECTOR (7 downto 0);
    k : IN STD_LOGIC_VECTOR (14 downto 0);
    sch : IN STD_LOGIC_VECTOR (27 downto 0);
    scl : IN STD_LOGIC_VECTOR (5 downto 0);
    logn : IN STD_LOGIC_VECTOR (3 downto 0);
    tmp : IN STD_LOGIC_VECTOR (14 downto 0);
    PRIMES_p_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    PRIMES_p_ce0 : OUT STD_LOGIC;
    PRIMES_p_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    PRIMES_g_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    PRIMES_g_ce0 : OUT STD_LOGIC;
    PRIMES_g_q0 : IN STD_LOGIC_VECTOR (30 downto 0) );
end;


architecture behav of keygen_poly_sub_scaled_ntt_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal REV10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal REV10_ce0 : STD_LOGIC;
    signal REV10_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_modp_montymul_fu_800_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_549 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal reg_700 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_173_fu_1672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_779 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln779_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln781_fu_1640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_791 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln954_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x1_3_reg_1021 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln962_fu_1724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x2_2_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal scl_cast_fu_1190_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scl_cast_reg_3075 : STD_LOGIC_VECTOR (31 downto 0);
    signal flen_cast14_fu_1194_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal flen_cast14_reg_3080 : STD_LOGIC_VECTOR (8 downto 0);
    signal fstride_cast_fu_1198_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal fstride_cast_reg_3085 : STD_LOGIC_VECTOR (17 downto 0);
    signal logn_cast7_fu_1202_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal logn_cast7_reg_3090 : STD_LOGIC_VECTOR (31 downto 0);
    signal Fstride_cast_fu_1206_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal Fstride_cast_reg_3095 : STD_LOGIC_VECTOR (18 downto 0);
    signal m_4_fu_1226_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_4_reg_3100 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1329_fu_1232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1329_reg_3112 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1329_1_fu_1236_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1329_1_reg_3117 : STD_LOGIC_VECTOR (11 downto 0);
    signal tlen_fu_1240_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tlen_reg_3122 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1323_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1323_reg_3128 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1323_1_fu_1250_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1323_1_reg_3134 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1323_2_fu_1254_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1323_2_reg_3140 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1323_3_fu_1258_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1323_3_reg_3146 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln2467_2_fu_1266_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln2467_2_reg_3154 : STD_LOGIC_VECTOR (11 downto 0);
    signal fk_fu_1286_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal fk_reg_3159 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln2467_fu_1302_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2467_reg_3164 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2467_fu_1306_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2467_reg_3169 : STD_LOGIC_VECTOR (12 downto 0);
    signal t1_fu_1320_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal t1_reg_3175 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_assign_fu_1326_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_reg_3181 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_85_cast_fu_1332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_85_cast_reg_3186 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_9_cast47_fu_1342_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_9_cast47_reg_3191 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1330_fu_1362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1330_reg_3196 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2474_fu_1366_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2474_reg_3201 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2474_1_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2474_1_reg_3207 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln2474_2_fu_1383_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2474_2_reg_3212 : STD_LOGIC_VECTOR (11 downto 0);
    signal u_192_fu_1392_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_192_reg_3220 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2474_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_reg_3251 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln1324_fu_1417_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1324_reg_3264 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_56_fu_1461_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_56_reg_3271 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1324_fu_1467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1324_reg_3277 : STD_LOGIC_VECTOR (31 downto 0);
    signal p0i_fu_1503_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_reg_3286 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1324_1_fu_1509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1324_1_reg_3291 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_83_fu_1514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_83_reg_3296 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_9_fu_1610_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_9_reg_3304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_11_fu_1629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_11_reg_3314 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_12_fu_1657_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal e_fu_1663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal e_reg_3335 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln808_fu_1668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln808_reg_3340 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_12_fu_1680_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_12_reg_3348 : STD_LOGIC_VECTOR (5 downto 0);
    signal z_80_fu_1714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal u_190_fu_1729_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_190_reg_3361 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_25_reg_3371 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_26_fu_1822_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_26_reg_3379 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal trunc_ln2487_fu_1828_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln2487_reg_3384 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln2485_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2490_fu_1864_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln2490_reg_3394 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2457_fu_1940_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2457_reg_3400 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal v_30_fu_1948_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_30_reg_3412 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal x_22_fu_1971_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_22_reg_3417 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln2491_fu_1943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1524_fu_1980_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1524_reg_3422 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_19_fu_1997_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_19_reg_3428 : STD_LOGIC_VECTOR (14 downto 0);
    signal u_191_fu_2007_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_191_reg_3433 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln1520_fu_2046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1520_reg_3443 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_26_fu_2132_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_26_reg_3447 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal lshr_ln55_reg_3458 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2491_1_fu_2179_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2491_1_reg_3463 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2491_2_fu_2184_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2491_2_reg_3468 : STD_LOGIC_VECTOR (17 downto 0);
    signal v_29_fu_2269_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_29_reg_3476 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln2497_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vla18_addr_292_reg_3486 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2497_1_fu_2353_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2497_1_reg_3492 : STD_LOGIC_VECTOR (17 downto 0);
    signal hm_fu_2374_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal hm_reg_3500 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln1339_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1343_fu_2384_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1343_reg_3505 : STD_LOGIC_VECTOR (10 downto 0);
    signal dt_fu_2388_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dt_reg_3510 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1345_fu_2394_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1345_reg_3516 : STD_LOGIC_VECTOR (11 downto 0);
    signal u_194_fu_2403_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal u_194_reg_3524 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal add_ln1351_1_fu_2418_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1351_1_reg_3529 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1345_fu_2398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1345_fu_2423_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal s_reg_3544 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_fu_3000_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1348_1_reg_3549 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3006_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1348_3_reg_3554 : STD_LOGIC_VECTOR (12 downto 0);
    signal v_32_fu_2468_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_32_reg_3562 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal vla18_addr_297_reg_3567 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1354_fu_2462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vla18_addr_298_reg_3573 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1354_1_fu_2544_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1354_1_reg_3579 : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_1_fu_2549_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_13_fu_2648_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_13_reg_3592 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal vla18_addr_296_reg_3597 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1373_fu_2643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1373_1_fu_2691_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1373_1_reg_3603 : STD_LOGIC_VECTOR (17 downto 0);
    signal u_112_cast_cast_cast_cast_fu_2703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_112_cast_cast_cast_cast_reg_3608 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal zext_ln2513_fu_2712_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2513_reg_3614 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_189_fu_2724_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_189_reg_3622 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal add_ln2281_fu_2734_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2281_reg_3627 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2513_fu_2719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln2281_2_fu_2806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2281_2_reg_3637 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal trunc_ln2297_fu_2810_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2297_reg_3642 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2293_fu_2824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2293_reg_3650 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal icmp_ln2284_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vla18_addr_285_reg_3660 : STD_LOGIC_VECTOR (12 downto 0);
    signal u_188_fu_2903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_188_reg_3665 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2297_1_fu_2963_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_modp_montymul_fu_800_ap_ready : STD_LOGIC;
    signal grp_modp_montymul_fu_800_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_800_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_800_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_800_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_ap_start : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_ap_done : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_ap_idle : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_ap_ready : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_ce0 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_ce1 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_ap_start : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_ap_done : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_ap_idle : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_ap_ready : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_ce0 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_ce1 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_a : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_modp_NTT2_ext_1_fu_1171_stride : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_r_10_phi_fu_490_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_10_reg_487 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_84_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_62_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_7_reg_519 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_g_assign_4_phi_fu_531_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_assign_4_reg_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_9_reg_538 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_z_63_phi_fu_552_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal x1_2_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_116_reg_580 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_021_reg_591 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal v_27_reg_602 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal idx_reg_613 : STD_LOGIC_VECTOR (17 downto 0);
    signal idx121_reg_625 : STD_LOGIC_VECTOR (17 downto 0);
    signal phi_ln1510_reg_637 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_17_reg_646 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_28_reg_657 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal idx123_reg_668 : STD_LOGIC_VECTOR (17 downto 0);
    signal m_reg_679 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_reg_688 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_193_reg_712 : STD_LOGIC_VECTOR (9 downto 0);
    signal v_31_reg_723 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal idx127_reg_734 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_10_reg_745 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal idx125_reg_756 : STD_LOGIC_VECTOR (17 downto 0);
    signal cc_reg_767 : STD_LOGIC_VECTOR (0 downto 0);
    signal z_fu_1561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln937_fu_1646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln697_fu_2636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_NTT2_ext_1_fu_1171_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln966_fu_1740_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln967_1_fu_1772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln968_2_fu_1812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2487_1_fu_1859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2487_3_fu_1935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1524_fu_2041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1544_fu_2165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2494_fu_2260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2500_1_fu_2333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2500_2_fu_2348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1351_2_fu_2457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1358_fu_2524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1359_fu_2539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1374_fu_2686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2281_fu_2767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2293_fu_2861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2297_fu_2898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_112_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx133_fu_226 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln2513_1_fu_2909_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal idx131_fu_230 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln2513_2_fu_2914_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal u_fu_234 : STD_LOGIC_VECTOR (10 downto 0);
    signal w_54_fu_1897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_82_fu_2253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_13_fu_2594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2298_fu_2987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scl_cast_fu_1190_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln2462_1_fu_1222_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_1274_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2466_fu_1282_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1323_4_fu_1262_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln2462_fu_1218_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2467_fu_1292_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln2467_fu_1298_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2467_1_fu_1312_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_fu_1214_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_9_fu_1336_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal logn_cast4_fu_1210_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_i92_fu_1346_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_i92_cast_fu_1352_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ni_fu_1356_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1324_fu_1413_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1324_fu_1417_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1324_fu_1413_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_54_fu_1421_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_fu_1431_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln656_fu_1431_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_fu_1427_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_1431_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_55_fu_1443_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_55_fu_1443_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_fu_1449_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_55_fu_1443_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_fu_1449_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_56_fu_1461_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_1471_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln658_fu_1471_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_57_fu_1481_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1486_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_57_fu_1481_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1486_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1503_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1503_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln685_fu_1520_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_fu_1526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_fu_1532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_fu_1540_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_fu_1548_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_fu_1553_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_fu_1557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln735_fu_1569_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_fu_1573_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_fu_1581_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln757_fu_1586_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln757_fu_1590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_fu_1594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal R2_fu_1600_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln779_fu_1614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln779_fu_1620_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_1635_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln813_fu_1686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln813_fu_1692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln813_fu_1696_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln813_fu_1686_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln813_fu_1700_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln813_fu_1708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_80_fu_1714_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln962_fu_1720_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln966_fu_1735_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln47_fu_1745_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln967_fu_1753_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln967_fu_1757_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln50_fu_1762_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln968_fu_1777_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln968_fu_1780_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln48_fu_1785_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln968_1_fu_1793_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln968_1_fu_1797_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln51_fu_1802_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln49_fu_1832_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln2487_fu_1840_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2487_fu_1844_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln52_fu_1849_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_174_fu_1868_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_fu_1876_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln635_fu_1884_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln635_fu_1889_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln635_fu_1893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2487_2_fu_1904_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2487_1_fu_1907_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2487_1_fu_1912_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2487_2_fu_1920_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln2487_1_fu_1925_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2457_1_fu_1954_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2457_fu_1958_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln51_fu_1963_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2491_fu_1976_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln50_fu_1986_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln2490_fu_1993_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1510_fu_2003_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1524_3_fu_2013_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln52_fu_2018_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1524_2_fu_2026_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln53_fu_2031_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_55_fu_2052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_175_fu_2057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1525_fu_2065_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1525_fu_2073_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1521_fu_2078_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1521_fu_2082_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_fu_2091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_57_fu_2086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_10_fu_2097_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_fu_2103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_7_fu_2111_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_5_fu_2119_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_5_fu_2124_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_7_fu_2128_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1544_fu_2138_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln54_fu_2142_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1544_2_fu_2150_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln1544_2_fu_2155_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln9_fu_2189_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1544_3_fu_2199_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1544_fu_2203_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1544_fu_2209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1544_fu_2213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_fu_2219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_177_fu_2224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_fu_2232_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_fu_2240_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_fu_2245_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_fu_2249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2457_2_fu_2275_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2457_2_fu_2279_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2457_1_fu_2284_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2500_fu_2297_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2500_fu_2301_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2500_fu_2305_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln53_fu_2310_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2500_1_fu_2318_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln54_fu_2323_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_fu_2292_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln2500_1_fu_2338_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_178_fu_2358_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1351_fu_2409_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1351_fu_2413_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln56_fu_2431_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1351_1_fu_2438_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1351_2_fu_2442_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln57_fu_2447_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1348_fu_2474_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1348_fu_2478_p2 : STD_LOGIC_VECTOR (12 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1348_fu_2478_p2 : signal is "no";
    signal shl_ln57_fu_2483_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1348_2_fu_2496_p2 : STD_LOGIC_VECTOR (12 downto 0);
    attribute use_dsp48 of add_ln1348_2_fu_2496_p2 : signal is "no";
    signal shl_ln1348_1_fu_2501_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal r1_fu_2491_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln58_fu_2514_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal r2_fu_2509_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln59_fu_2529_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln685_4_fu_2554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_12_fu_2559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_179_fu_2565_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_8_fu_2573_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_6_fu_2581_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_6_fu_2586_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_8_fu_2590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_2_fu_2601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_fu_2607_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_2_fu_2615_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_1_fu_2623_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_1_fu_2628_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_1_fu_2632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1329_fu_2654_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1329_fu_2658_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln55_fu_2663_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_13_fu_2671_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln56_fu_2676_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal u_112_cast_cast_cast_fu_2700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub9_i_fu_2707_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub9_i_fu_2707_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln2457_fu_2730_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2281_2_fu_2739_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln44_fu_2744_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2281_1_fu_2752_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln2281_1_fu_2757_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln_fu_2772_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln2281_1_fu_2782_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln2281_fu_2786_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ysign_fu_2792_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln2281_fu_2802_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal v_fu_2819_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2293_fu_2829_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2293_fu_2833_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln45_fu_2838_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2293_1_fu_2846_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln_fu_2851_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2297_2_fu_2866_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2297_fu_2870_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln46_fu_2875_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2297_1_fu_2883_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln49_fu_2888_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal wy_fu_2933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln2294_fu_2939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2294_fu_2944_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal wys_fu_2948_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal wys_fu_2948_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tw_1_fu_2958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2287_fu_2954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln2297_fu_2967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2284_fu_2973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_fu_2977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2287_fu_2983_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_3000_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3000_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_3006_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3006_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_3006_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component keygen_modp_montymul IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component keygen_zint_rebuild_CRT_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        xx : IN STD_LOGIC_VECTOR (14 downto 0);
        xlen : IN STD_LOGIC_VECTOR (8 downto 0);
        xstride : IN STD_LOGIC_VECTOR (8 downto 0);
        num : IN STD_LOGIC_VECTOR (63 downto 0);
        normalize_signed : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component keygen_modp_NTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (14 downto 0);
        stride : IN STD_LOGIC_VECTOR (7 downto 0);
        gm : IN STD_LOGIC_VECTOR (14 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_25s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_31s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_25s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mac_muladd_13s_8ns_12ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component keygen_ama_addmuladd_13s_13ns_8ns_12ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component keygen_modp_mkgm2_1_REV10_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    REV10_U : component keygen_modp_mkgm2_1_REV10_ROM_AUTO_1R
    generic map (
        DataWidth => 10,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => REV10_address0,
        ce0 => REV10_ce0,
        q0 => REV10_q0);

    grp_modp_montymul_fu_800 : component keygen_modp_montymul
    port map (
        ap_ready => grp_modp_montymul_fu_800_ap_ready,
        a => grp_modp_montymul_fu_800_a,
        b => grp_modp_montymul_fu_800_b,
        p => grp_modp_montymul_fu_800_p,
        p0i => grp_modp_montymul_fu_800_p0i,
        ap_return => grp_modp_montymul_fu_800_ap_return);

    grp_zint_rebuild_CRT_1_fu_1154 : component keygen_zint_rebuild_CRT_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_rebuild_CRT_1_fu_1154_ap_start,
        ap_done => grp_zint_rebuild_CRT_1_fu_1154_ap_done,
        ap_idle => grp_zint_rebuild_CRT_1_fu_1154_ap_idle,
        ap_ready => grp_zint_rebuild_CRT_1_fu_1154_ap_ready,
        vla18_address0 => grp_zint_rebuild_CRT_1_fu_1154_vla18_address0,
        vla18_ce0 => grp_zint_rebuild_CRT_1_fu_1154_vla18_ce0,
        vla18_we0 => grp_zint_rebuild_CRT_1_fu_1154_vla18_we0,
        vla18_d0 => grp_zint_rebuild_CRT_1_fu_1154_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_zint_rebuild_CRT_1_fu_1154_vla18_address1,
        vla18_ce1 => grp_zint_rebuild_CRT_1_fu_1154_vla18_ce1,
        vla18_we1 => grp_zint_rebuild_CRT_1_fu_1154_vla18_we1,
        vla18_d1 => grp_zint_rebuild_CRT_1_fu_1154_vla18_d1,
        vla18_q1 => vla18_q1,
        xx => fk_reg_3159,
        xlen => zext_ln1323_2_reg_3140,
        xstride => zext_ln1323_2_reg_3140,
        num => zext_ln1329_reg_3112,
        normalize_signed => ap_const_lv1_1,
        tmp => t1_reg_3175);

    grp_modp_NTT2_ext_1_fu_1171 : component keygen_modp_NTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_NTT2_ext_1_fu_1171_ap_start,
        ap_done => grp_modp_NTT2_ext_1_fu_1171_ap_done,
        ap_idle => grp_modp_NTT2_ext_1_fu_1171_ap_idle,
        ap_ready => grp_modp_NTT2_ext_1_fu_1171_ap_ready,
        vla18_address0 => grp_modp_NTT2_ext_1_fu_1171_vla18_address0,
        vla18_ce0 => grp_modp_NTT2_ext_1_fu_1171_vla18_ce0,
        vla18_we0 => grp_modp_NTT2_ext_1_fu_1171_vla18_we0,
        vla18_d0 => grp_modp_NTT2_ext_1_fu_1171_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_modp_NTT2_ext_1_fu_1171_vla18_address1,
        vla18_ce1 => grp_modp_NTT2_ext_1_fu_1171_vla18_ce1,
        vla18_we1 => grp_modp_NTT2_ext_1_fu_1171_vla18_we1,
        vla18_d1 => grp_modp_NTT2_ext_1_fu_1171_vla18_d1,
        vla18_q1 => vla18_q1,
        a => grp_modp_NTT2_ext_1_fu_1171_a,
        stride => grp_modp_NTT2_ext_1_fu_1171_stride,
        gm => tmp,
        logn => logn_cast7_reg_3090,
        p => p_reg_3251,
        p0i => p0i_reg_3286);

    mul_25s_24ns_31_1_1_U378 : component keygen_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln656_fu_1431_p0,
        din1 => mul_ln656_fu_1431_p1,
        dout => mul_ln656_fu_1431_p2);

    mul_31s_24ns_31_1_1_U379 : component keygen_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_55_fu_1443_p0,
        din1 => y_55_fu_1443_p1,
        dout => y_55_fu_1443_p2);

    mul_25s_31s_31_1_1_U380 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_fu_1449_p0,
        din1 => y_55_fu_1443_p2,
        dout => mul_ln657_fu_1449_p2);

    mul_31s_31s_31_1_1_U381 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_56_fu_1461_p0,
        din1 => y_55_fu_1443_p2,
        dout => y_56_fu_1461_p2);

    mul_25s_31s_31_1_1_U382 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_fu_1471_p0,
        din1 => y_56_reg_3271,
        dout => mul_ln658_fu_1471_p2);

    mul_31s_31s_31_1_1_U383 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_57_fu_1481_p0,
        din1 => y_56_reg_3271,
        dout => y_57_fu_1481_p2);

    mul_25s_31s_31_1_1_U384 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_fu_1486_p0,
        din1 => y_57_fu_1481_p2,
        dout => mul_ln659_fu_1486_p2);

    mul_31s_31s_31_1_1_U385 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_fu_1503_p0,
        din1 => p0i_fu_1503_p1,
        dout => p0i_fu_1503_p2);

    mac_muladd_13s_8ns_12ns_13_4_1_U386 : component keygen_mac_muladd_13s_8ns_12ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln1345_fu_2423_p1,
        din1 => grp_fu_3000_p1,
        din2 => grp_fu_3000_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3000_p3);

    ama_addmuladd_13s_13ns_8ns_12ns_13_4_1_U387 : component keygen_ama_addmuladd_13s_13ns_8ns_12ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 8,
        din3_WIDTH => 12,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trunc_ln1345_fu_2423_p1,
        din1 => grp_fu_3006_p1,
        din2 => grp_fu_3006_p2,
        din3 => grp_fu_3006_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_3006_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_modp_NTT2_ext_1_fu_1171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_NTT2_ext_1_fu_1171_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln2491_fu_1943_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln2485_fu_1817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_modp_NTT2_ext_1_fu_1171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_NTT2_ext_1_fu_1171_ap_ready = ap_const_logic_1)) then 
                    grp_modp_NTT2_ext_1_fu_1171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_rebuild_CRT_1_fu_1154_ap_ready = ap_const_logic_1)) then 
                    grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cc_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                cc_reg_767 <= w_fu_2977_p2(31 downto 31);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                cc_reg_767 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_9_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i_9_reg_538 <= i_12_reg_3348;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_0))) then 
                i_9_reg_538 <= ap_const_lv6_1E;
            end if; 
        end if;
    end process;

    i_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_reg_476 <= i_11_reg_3314;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_reg_476 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx121_reg_625_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                idx121_reg_625 <= ap_const_lv18_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                idx121_reg_625 <= add_ln2491_2_reg_3468;
            end if; 
        end if;
    end process;

    idx123_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                idx123_reg_668 <= add_ln2497_1_reg_3492;
            elsif (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                idx123_reg_668 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    idx125_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                idx125_reg_756 <= ap_const_lv18_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                idx125_reg_756 <= add_ln1373_1_reg_3603;
            end if; 
        end if;
    end process;

    idx127_reg_734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                idx127_reg_734 <= add_ln1354_1_reg_3579;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                idx127_reg_734 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx131_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                idx131_fu_230 <= ap_const_lv18_0;
            elsif (((icmp_ln2284_fu_2814_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                idx131_fu_230 <= add_ln2513_2_fu_2914_p2;
            end if; 
        end if;
    end process;

    idx133_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                idx133_fu_226 <= ap_const_lv19_0;
            elsif (((icmp_ln2284_fu_2814_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                idx133_fu_226 <= add_ln2513_1_fu_2909_p2;
            end if; 
        end if;
    end process;

    idx_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                idx_reg_613 <= ap_const_lv18_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                idx_reg_613 <= add_ln2491_1_reg_3463;
            end if; 
        end if;
    end process;

    k_10_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                k_10_reg_745 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                k_10_reg_745 <= k_13_reg_3592;
            end if; 
        end if;
    end process;

    k_7_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1))) then 
                k_7_reg_519 <= k_12_fu_1657_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                k_7_reg_519 <= logn;
            end if; 
        end if;
    end process;

    m_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2497_fu_2264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                m_reg_679 <= m_4_reg_3100;
            elsif (((icmp_ln1345_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                m_reg_679 <= zext_ln1343_reg_3505;
            end if; 
        end if;
    end process;

    phi_ln1510_reg_637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2491_fu_1943_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                phi_ln1510_reg_637 <= flen_cast14_reg_3080;
            elsif (((icmp_ln1520_reg_3443 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                phi_ln1510_reg_637 <= u_191_reg_3433;
            end if; 
        end if;
    end process;

    r_10_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                r_10_reg_487 <= grp_modp_montymul_fu_800_ap_return;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                r_10_reg_487 <= zext_ln757_9_fu_1610_p1;
            end if; 
        end if;
    end process;

    reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                reg_549 <= z_80_fu_1714_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_0))) then 
                reg_549 <= z_83_reg_3296;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                reg_549 <= grp_modp_montymul_fu_800_ap_return;
            end if; 
        end if;
    end process;

    reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1354_fu_2462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                reg_700 <= v1_1_fu_2549_p2;
            elsif (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                reg_700 <= ap_const_lv64_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0)))) then 
                reg_700 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_modp_montymul_fu_800_ap_return),64));
            end if; 
        end if;
    end process;

    reg_779_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                reg_779 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2297_1_fu_2963_p1),32));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                reg_779 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv31_0),32));
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln781_fu_1640_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0))) then 
                reg_779 <= grp_modp_montymul_fu_800_ap_return;
            end if; 
        end if;
    end process;

    reg_791_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                reg_791 <= u_188_reg_3665;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                reg_791 <= u_112_cast_cast_cast_cast_reg_3608;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                reg_791 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_modp_montymul_fu_800_ap_return),64));
            end if; 
        end if;
    end process;

    t_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2497_fu_2264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                t_reg_688 <= ap_const_lv64_1;
            elsif (((icmp_ln1345_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                t_reg_688 <= dt_reg_3510;
            end if; 
        end if;
    end process;

    u_112_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                u_112_fu_222 <= ap_const_lv8_0;
            elsif (((icmp_ln1373_fu_2643_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                u_112_fu_222 <= u_192_reg_3220;
            end if; 
        end if;
    end process;

    u_116_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                u_116_reg_580 <= u_190_reg_3361;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                u_116_reg_580 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    u_193_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1354_fu_2462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                u_193_reg_712 <= u_194_reg_3524;
            elsif (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                u_193_reg_712 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    u_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                u_fu_234 <= ap_const_lv11_0;
            elsif (((icmp_ln2284_fu_2814_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                u_fu_234 <= u_189_reg_3622;
            end if; 
        end if;
    end process;

    v_021_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln962_fu_1724_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v_021_reg_591 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                v_021_reg_591 <= v_26_reg_3379;
            end if; 
        end if;
    end process;

    v_27_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v_27_reg_602 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                v_27_reg_602 <= v_30_reg_3412;
            end if; 
        end if;
    end process;

    v_28_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                v_28_reg_657 <= v_29_reg_3476;
            elsif (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v_28_reg_657 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    v_31_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                v_31_reg_723 <= v_32_reg_3562;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                v_31_reg_723 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    x1_2_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                x1_2_reg_569 <= x1_3_reg_1021;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                x1_2_reg_569 <= z_83_reg_3296;
            end if; 
        end if;
    end process;

    x2_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                x2_reg_558 <= x2_2_reg_1054;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                x2_reg_558 <= z_83_reg_3296;
            end if; 
        end if;
    end process;

    x_17_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2491_fu_1943_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                x_17_reg_646 <= ap_const_lv32_0;
            elsif (((icmp_ln1520_reg_3443 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                x_17_reg_646 <= x_26_fu_2132_p2;
            end if; 
        end if;
    end process;

    z_62_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0))) then
                if ((icmp_ln781_fu_1640_p2 = ap_const_lv1_1)) then 
                    z_62_reg_507 <= z_84_reg_497;
                elsif ((icmp_ln781_fu_1640_p2 = ap_const_lv1_0)) then 
                    z_62_reg_507 <= grp_modp_montymul_fu_800_ap_return;
                end if;
            end if; 
        end if;
    end process;

    z_84_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                z_84_reg_497 <= z_62_reg_507;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                z_84_reg_497 <= z_83_reg_3296;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    Fstride_cast_reg_3095(8 downto 0) <= Fstride_cast_fu_1206_p1(8 downto 0);
                add_ln2467_reg_3169 <= add_ln2467_fu_1306_p2;
                fk_reg_3159 <= fk_fu_1286_p2;
                    flen_cast14_reg_3080(7 downto 0) <= flen_cast14_fu_1194_p1(7 downto 0);
                    fstride_cast_reg_3085(7 downto 0) <= fstride_cast_fu_1198_p1(7 downto 0);
                    k_9_cast47_reg_3191(2 downto 0) <= k_9_cast47_fu_1342_p1(2 downto 0);
                    logn_cast7_reg_3090(3 downto 0) <= logn_cast7_fu_1202_p1(3 downto 0);
                m_4_reg_3100 <= m_4_fu_1226_p2;
                scl_cast_reg_3075 <= scl_cast_fu_1190_p1;
                    shl_ln2467_2_reg_3154(11 downto 1) <= shl_ln2467_2_fu_1266_p3(11 downto 1);
                t1_reg_3175 <= t1_fu_1320_p2;
                tlen_reg_3122 <= tlen_fu_1240_p2;
                    x_assign_85_cast_reg_3186(7 downto 0) <= x_assign_85_cast_fu_1332_p1(7 downto 0);
                x_assign_reg_3181 <= x_assign_fu_1326_p2;
                    zext_ln1323_1_reg_3134(7 downto 0) <= zext_ln1323_1_fu_1250_p1(7 downto 0);
                    zext_ln1323_2_reg_3140(7 downto 0) <= zext_ln1323_2_fu_1254_p1(7 downto 0);
                    zext_ln1323_3_reg_3146(7 downto 0) <= zext_ln1323_3_fu_1258_p1(7 downto 0);
                    zext_ln1323_reg_3128(7 downto 0) <= zext_ln1323_fu_1246_p1(7 downto 0);
                    zext_ln1329_1_reg_3117(10 downto 0) <= zext_ln1329_1_fu_1236_p1(10 downto 0);
                    zext_ln1329_reg_3112(10 downto 0) <= zext_ln1329_fu_1232_p1(10 downto 0);
                    zext_ln1330_reg_3196(25 downto 0) <= zext_ln1330_fu_1362_p1(25 downto 0);
                    zext_ln2467_reg_3164(11 downto 1) <= zext_ln2467_fu_1302_p1(11 downto 1);
                    zext_ln2474_reg_3201(7 downto 0) <= zext_ln2474_fu_1366_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln1348_1_reg_3549 <= grp_fu_3000_p3;
                add_ln1348_3_reg_3554 <= grp_fu_3006_p4;
                s_reg_3544 <= vla18_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1345_fu_2398_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                add_ln1351_1_reg_3529 <= add_ln1351_1_fu_2418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1354_fu_2462_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                add_ln1354_1_reg_3579 <= add_ln1354_1_fu_2544_p2;
                vla18_addr_297_reg_3567 <= zext_ln1358_fu_2524_p1(13 - 1 downto 0);
                vla18_addr_298_reg_3573 <= zext_ln1359_fu_2539_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1373_fu_2643_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                add_ln1373_1_reg_3603 <= add_ln1373_1_fu_2691_p2;
                vla18_addr_296_reg_3597 <= zext_ln1374_fu_2686_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2491_fu_1943_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                add_ln1524_reg_3422 <= add_ln1524_fu_1980_p2;
                x_22_reg_3417 <= x_22_fu_1971_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2513_fu_2719_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                add_ln2281_reg_3627 <= add_ln2281_fu_2734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2485_fu_1817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                add_ln2490_reg_3394 <= add_ln2490_fu_1864_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1520_reg_3443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                add_ln2491_1_reg_3463 <= add_ln2491_1_fu_2179_p2;
                add_ln2491_2_reg_3468 <= add_ln2491_2_fu_2184_p2;
                lshr_ln55_reg_3458 <= x_22_reg_3417(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2497_fu_2264_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                add_ln2497_1_reg_3492 <= add_ln2497_1_fu_2353_p2;
                vla18_addr_292_reg_3486 <= zext_ln2500_2_fu_2348_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    dt_reg_3510(63 downto 1) <= dt_fu_2388_p2(63 downto 1);
                hm_reg_3500 <= m_reg_679(10 downto 1);
                    zext_ln1343_reg_3505(9 downto 0) <= zext_ln1343_fu_2384_p1(9 downto 0);
                    zext_ln1345_reg_3516(9 downto 0) <= zext_ln1345_fu_2394_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_0))) then
                e_reg_3335 <= e_fu_1663_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1)))) then
                g_assign_4_reg_528 <= grp_modp_montymul_fu_800_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_11_reg_3314 <= i_11_fu_1629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0))) then
                i_12_reg_3348 <= i_12_fu_1680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                icmp_ln1520_reg_3443 <= icmp_ln1520_fu_2046_p2;
                u_191_reg_3433 <= u_191_fu_2007_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2284_fu_2814_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                icmp_ln2293_reg_3650 <= icmp_ln2293_fu_2824_p2;
                u_188_reg_3665 <= u_188_fu_2903_p2;
                vla18_addr_285_reg_3660 <= zext_ln2297_fu_2898_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                k_13_reg_3592 <= k_13_fu_2648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p0i_reg_3286 <= p0i_fu_1503_p2;
                z_83_reg_3296 <= z_83_fu_1514_p2;
                    zext_ln1324_1_reg_3291(30 downto 0) <= zext_ln1324_1_fu_1509_p1(30 downto 0);
                    zext_ln1324_reg_3277(30 downto 0) <= zext_ln1324_fu_1467_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                p_reg_3251 <= PRIMES_p_q0;
                sext_ln1324_reg_3264 <= sext_ln1324_fu_1417_p1;
                y_56_reg_3271 <= y_56_fu_1461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                sext_ln808_reg_3340 <= sext_ln808_fu_1668_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                trunc_ln2297_reg_3642 <= trunc_ln2297_fu_2810_p1;
                    zext_ln2281_2_reg_3637(30 downto 0) <= zext_ln2281_2_fu_2806_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2485_fu_1817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                trunc_ln2487_reg_3384 <= trunc_ln2487_fu_1828_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                    u_112_cast_cast_cast_cast_reg_3608(31 downto 0) <= u_112_cast_cast_cast_cast_fu_2703_p1(31 downto 0);
                    zext_ln2513_reg_3614(5 downto 0) <= zext_ln2513_fu_2712_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                u_189_reg_3622 <= u_189_fu_2724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                u_190_reg_3361 <= u_190_fu_1729_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                u_192_reg_3220 <= u_192_fu_1392_p2;
                    zext_ln2474_1_reg_3207(7 downto 0) <= zext_ln2474_1_fu_1378_p1(7 downto 0);
                    zext_ln2474_2_reg_3212(7 downto 0) <= zext_ln2474_2_fu_1383_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                u_194_reg_3524 <= u_194_fu_2403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                v_25_reg_3371 <= REV10_q0;
                x2_2_reg_1054 <= grp_modp_montymul_fu_800_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                v_26_reg_3379 <= v_26_fu_1822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                v_29_reg_3476 <= v_29_fu_2269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                v_30_reg_3412 <= v_30_fu_1948_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                v_32_reg_3562 <= v_32_fu_2468_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln962_fu_1724_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                x1_3_reg_1021 <= grp_modp_montymul_fu_800_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2491_fu_1943_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                x_19_reg_3428 <= x_19_fu_1997_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                x_26_reg_3447 <= x_26_fu_2132_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                    zext_ln2457_reg_3400(11 downto 0) <= zext_ln2457_fu_1940_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    zext_ln757_9_reg_3304(30 downto 0) <= zext_ln757_9_fu_1610_p1(30 downto 0);
            end if;
        end if;
    end process;
    flen_cast14_reg_3080(8) <= '0';
    fstride_cast_reg_3085(17 downto 8) <= "0000000000";
    logn_cast7_reg_3090(31 downto 4) <= "0000000000000000000000000000";
    Fstride_cast_reg_3095(18 downto 9) <= "0000000000";
    zext_ln1329_reg_3112(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln1329_1_reg_3117(11) <= '0';
    zext_ln1323_reg_3128(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1323_1_reg_3134(12 downto 8) <= "00000";
    zext_ln1323_2_reg_3140(8) <= '0';
    zext_ln1323_3_reg_3146(17 downto 8) <= "0000000000";
    shl_ln2467_2_reg_3154(0) <= '0';
    zext_ln2467_reg_3164(0) <= '0';
    zext_ln2467_reg_3164(12) <= '0';
    x_assign_85_cast_reg_3186(31 downto 8) <= "000000000000000000000000";
    k_9_cast47_reg_3191(9 downto 3) <= "0000000";
    zext_ln1330_reg_3196(31 downto 26) <= "000000";
    zext_ln2474_reg_3201(12 downto 8) <= "00000";
    zext_ln2474_1_reg_3207(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln2474_2_reg_3212(11 downto 8) <= "0000";
    zext_ln1324_reg_3277(31) <= '0';
    zext_ln1324_1_reg_3291(31) <= '0';
    zext_ln757_9_reg_3304(31) <= '0';
    zext_ln2457_reg_3400(12) <= '0';
    zext_ln1343_reg_3505(10) <= '0';
    dt_reg_3510(0) <= '0';
    zext_ln1345_reg_3516(11 downto 10) <= "00";
    u_112_cast_cast_cast_cast_reg_3608(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln2513_reg_3614(31 downto 6) <= "00000000000000000000000000";
    zext_ln2281_2_reg_3637(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state13, tmp_173_fu_1672_p3, ap_CS_fsm_state9, icmp_ln779_fu_1624_p2, ap_CS_fsm_state12, icmp_ln954_fu_1651_p2, ap_CS_fsm_state16, icmp_ln962_fu_1724_p2, ap_CS_fsm_state2, icmp_ln2474_fu_1387_p2, ap_CS_fsm_state19, icmp_ln2485_fu_1817_p2, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2491_fu_1943_p2, icmp_ln1520_reg_3443, ap_CS_fsm_state24, ap_CS_fsm_state27, icmp_ln2497_fu_2264_p2, ap_CS_fsm_state30, icmp_ln1339_fu_2368_p2, ap_CS_fsm_state31, icmp_ln1345_fu_2398_p2, ap_CS_fsm_state35, icmp_ln1354_fu_2462_p2, ap_CS_fsm_state38, icmp_ln1373_fu_2643_p2, ap_CS_fsm_state40, ap_CS_fsm_state41, icmp_ln2513_fu_2719_p2, ap_CS_fsm_state43, icmp_ln2284_fu_2814_p2, grp_zint_rebuild_CRT_1_fu_1154_ap_done, grp_modp_NTT2_ext_1_fu_1171_ap_done, ap_CS_fsm_state26)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln962_fu_1724_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln2485_fu_1817_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state21 => 
                if (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln2491_fu_1943_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln1520_reg_3443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state26 => 
                if (((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln2497_fu_2264_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state30 => 
                if (((icmp_ln1339_fu_2368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln1345_fu_2398_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln1354_fu_2462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state38 => 
                if (((icmp_ln1373_fu_2643_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state40 => 
                if (((grp_zint_rebuild_CRT_1_fu_1154_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((icmp_ln2513_fu_2719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((icmp_ln2284_fu_2814_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Fstride_cast_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Fstride),19));
    PRIMES_g_address0 <= zext_ln2474_1_reg_3207(10 - 1 downto 0);

    PRIMES_g_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            PRIMES_g_ce0 <= ap_const_logic_1;
        else 
            PRIMES_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_p_address0_assign_proc : process(zext_ln2474_1_fu_1378_p1, ap_CS_fsm_state2, icmp_ln2474_fu_1387_p2, ap_CS_fsm_state40)
    begin
        if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            PRIMES_p_address0 <= zext_ln2474_1_fu_1378_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            PRIMES_p_address0 <= ap_const_lv10_0;
        else 
            PRIMES_p_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_p_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln2474_fu_1387_p2, ap_CS_fsm_state40)
    begin
        if (((icmp_ln2474_fu_1387_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            PRIMES_p_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            PRIMES_p_ce0 <= ap_const_logic_0;
        else 
            PRIMES_p_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    R2_fu_1600_p4 <= add_ln757_fu_1594_p2(31 downto 1);
    REV10_address0 <= zext_ln966_fu_1740_p1(10 - 1 downto 0);

    REV10_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            REV10_ce0 <= ap_const_logic_1;
        else 
            REV10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1329_fu_2658_p2 <= std_logic_vector(unsigned(trunc_ln1329_fu_2654_p1) + unsigned(zext_ln2457_reg_3400));
    add_ln1348_2_fu_2496_p2 <= std_logic_vector(signed(add_ln1348_3_reg_3554) + signed(trunc_ln1348_fu_2474_p1));
    add_ln1348_fu_2478_p2 <= std_logic_vector(signed(add_ln1348_1_reg_3549) + signed(trunc_ln1348_fu_2474_p1));
    add_ln1351_1_fu_2418_p2 <= std_logic_vector(unsigned(add_ln1351_fu_2413_p2) + unsigned(zext_ln1345_reg_3516));
    add_ln1351_2_fu_2442_p2 <= std_logic_vector(unsigned(zext_ln1351_1_fu_2438_p1) + unsigned(tmp));
    add_ln1351_fu_2413_p2 <= std_logic_vector(unsigned(zext_ln1329_1_reg_3117) + unsigned(zext_ln1351_fu_2409_p1));
    add_ln1354_1_fu_2544_p2 <= std_logic_vector(unsigned(zext_ln1323_reg_3128) + unsigned(idx127_reg_734));
    add_ln1373_1_fu_2691_p2 <= std_logic_vector(unsigned(zext_ln1323_3_reg_3146) + unsigned(idx125_reg_756));
    add_ln1524_2_fu_2026_p2 <= std_logic_vector(unsigned(shl_ln52_fu_2018_p3) + unsigned(f_r));
    add_ln1524_3_fu_2013_p2 <= std_logic_vector(unsigned(add_ln1524_reg_3422) + unsigned(sext_ln1510_fu_2003_p1));
    add_ln1524_fu_1980_p2 <= std_logic_vector(unsigned(trunc_ln2491_fu_1976_p1) + unsigned(ap_const_lv13_1FFF));
    add_ln1544_2_fu_2150_p2 <= std_logic_vector(unsigned(shl_ln54_fu_2142_p3) + unsigned(f_r));
    add_ln1544_fu_2138_p2 <= std_logic_vector(unsigned(add_ln1524_reg_3422) + unsigned(zext_ln2474_reg_3201));
    add_ln2281_1_fu_2752_p2 <= std_logic_vector(unsigned(shl_ln44_fu_2744_p3) + unsigned(tmp));
    add_ln2281_2_fu_2739_p2 <= std_logic_vector(unsigned(add_ln2281_fu_2734_p2) + unsigned(zext_ln2474_reg_3201));
    add_ln2281_fu_2734_p2 <= std_logic_vector(unsigned(trunc_ln2457_fu_2730_p1) + unsigned(zext_ln2467_reg_3164));
    add_ln2293_1_fu_2846_p2 <= std_logic_vector(unsigned(shl_ln45_fu_2838_p3) + unsigned(tmp));
    add_ln2293_fu_2833_p2 <= std_logic_vector(unsigned(trunc_ln2293_fu_2829_p1) + unsigned(add_ln2281_reg_3627));
    add_ln2297_1_fu_2883_p2 <= std_logic_vector(unsigned(shl_ln46_fu_2875_p3) + unsigned(F));
    add_ln2297_fu_2870_p2 <= std_logic_vector(unsigned(trunc_ln2297_2_fu_2866_p1) + unsigned(trunc_ln2297_reg_3642));
    add_ln2457_2_fu_2279_p2 <= std_logic_vector(unsigned(trunc_ln2457_2_fu_2275_p1) + unsigned(zext_ln2457_reg_3400));
    add_ln2457_fu_1958_p2 <= std_logic_vector(unsigned(trunc_ln2457_1_fu_1954_p1) + unsigned(zext_ln2457_reg_3400));
    add_ln2467_fu_1306_p2 <= std_logic_vector(unsigned(zext_ln2467_fu_1302_p1) + unsigned(trunc_ln2467_fu_1298_p1));
    add_ln2487_1_fu_1907_p2 <= std_logic_vector(unsigned(zext_ln2487_2_fu_1904_p1) + unsigned(add_ln2467_reg_3169));
    add_ln2487_2_fu_1920_p2 <= std_logic_vector(unsigned(shl_ln2487_1_fu_1912_p3) + unsigned(tmp));
    add_ln2487_fu_1844_p2 <= std_logic_vector(unsigned(zext_ln2487_fu_1840_p1) + unsigned(k));
    add_ln2490_fu_1864_p2 <= std_logic_vector(unsigned(zext_ln2474_2_reg_3212) + unsigned(shl_ln2467_2_reg_3154));
    add_ln2491_1_fu_2179_p2 <= std_logic_vector(unsigned(idx_reg_613) + unsigned(fstride_cast_reg_3085));
    add_ln2491_2_fu_2184_p2 <= std_logic_vector(unsigned(zext_ln1323_3_reg_3146) + unsigned(idx121_reg_625));
    add_ln2497_1_fu_2353_p2 <= std_logic_vector(unsigned(zext_ln1323_3_reg_3146) + unsigned(idx123_reg_668));
    add_ln2500_1_fu_2318_p2 <= std_logic_vector(unsigned(shl_ln53_fu_2310_p3) + unsigned(tmp));
    add_ln2500_fu_2305_p2 <= std_logic_vector(unsigned(zext_ln2500_fu_2301_p1) + unsigned(add_ln2467_reg_3169));
    add_ln2513_1_fu_2909_p2 <= std_logic_vector(unsigned(idx133_fu_226) + unsigned(Fstride_cast_reg_3095));
    add_ln2513_2_fu_2914_p2 <= std_logic_vector(unsigned(zext_ln1323_3_reg_3146) + unsigned(idx131_fu_230));
    add_ln685_10_fu_2097_p2 <= std_logic_vector(unsigned(add_ln685_fu_2091_p2) + unsigned(w_57_fu_2086_p2));
    add_ln685_12_fu_2559_p2 <= std_logic_vector(unsigned(vla18_q1) + unsigned(sub_ln685_4_fu_2554_p2));
    add_ln685_13_fu_2594_p2 <= std_logic_vector(unsigned(zext_ln685_8_fu_2590_p1) + unsigned(add_ln685_12_fu_2559_p2));
    add_ln685_fu_2091_p2 <= std_logic_vector(unsigned(w_55_fu_2052_p2) + unsigned(zext_ln1521_fu_2082_p1));
    add_ln697_fu_2636_p2 <= std_logic_vector(unsigned(zext_ln697_1_fu_2632_p1) + unsigned(sub_ln697_2_fu_2601_p2));
    add_ln757_fu_1594_p2 <= std_logic_vector(unsigned(zext_ln757_fu_1590_p1) + unsigned(grp_modp_montymul_fu_800_ap_return));
    add_ln967_fu_1757_p2 <= std_logic_vector(unsigned(zext_ln967_fu_1753_p1) + unsigned(tmp));
    add_ln968_1_fu_1797_p2 <= std_logic_vector(unsigned(zext_ln968_1_fu_1793_p1) + unsigned(tmp));
    add_ln968_fu_1780_p2 <= std_logic_vector(unsigned(m_4_reg_3100) + unsigned(zext_ln968_fu_1777_p1));
    and_ln1525_fu_2073_p2 <= (select_ln1525_fu_2065_p3 and p_reg_3251);
    and_ln1544_fu_2213_p2 <= (z_84_reg_497 and sext_ln1544_fu_2209_p1);
    and_ln635_fu_1884_p2 <= (select_ln635_fu_1876_p3 and p_reg_3251);
    and_ln685_5_fu_2119_p2 <= (select_ln685_7_fu_2111_p3 and p_reg_3251);
    and_ln685_6_fu_2581_p2 <= (select_ln685_8_fu_2573_p3 and p_reg_3251);
    and_ln685_fu_1548_p2 <= (select_ln685_fu_1540_p3 and p_reg_3251);
    and_ln697_1_fu_2623_p2 <= (select_ln697_2_fu_2615_p3 and p_reg_3251);
    and_ln697_fu_2240_p2 <= (select_ln697_fu_2232_p3 and p_reg_3251);
    and_ln757_fu_1581_p2 <= (select_ln757_fu_1573_p3 and p_reg_3251);
    and_ln781_fu_1635_p2 <= (x_assign_reg_3181 and trunc_ln779_fu_1620_p1);
    and_ln813_fu_1708_p2 <= (xor_ln813_fu_1686_p2 and select_ln813_fu_1700_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_1171_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_1171_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_1171_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_1154_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_1154_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state41, icmp_ln2513_fu_2719_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln2513_fu_2719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_g_assign_4_phi_fu_531_p4 <= g_assign_4_reg_528;
    ap_phi_mux_r_10_phi_fu_490_p4 <= r_10_reg_487;
    ap_phi_mux_z_63_phi_fu_552_p4 <= reg_549;

    ap_ready_assign_proc : process(ap_CS_fsm_state41, icmp_ln2513_fu_2719_p2)
    begin
        if (((icmp_ln2513_fu_2719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dt_fu_2388_p2 <= std_logic_vector(shift_left(unsigned(t_reg_688),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    e_fu_1663_p2 <= std_logic_vector(unsigned(zext_ln1324_reg_3277) + unsigned(ap_const_lv32_FFFFFFFE));
    empty_fu_1214_p1 <= logn(3 - 1 downto 0);
    fk_fu_1286_p2 <= std_logic_vector(unsigned(zext_ln2466_fu_1282_p1) + unsigned(tmp));
    flen_cast14_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(flen_r),9));
    fstride_cast_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fstride_r),18));
    grp_fu_3000_p1 <= zext_ln1323_1_reg_3134(8 - 1 downto 0);
    grp_fu_3000_p2 <= zext_ln2457_reg_3400(12 - 1 downto 0);
    grp_fu_3006_p1 <= t_reg_688(13 - 1 downto 0);
    grp_fu_3006_p2 <= zext_ln1323_1_reg_3134(8 - 1 downto 0);
    grp_fu_3006_p3 <= zext_ln2457_reg_3400(12 - 1 downto 0);

    grp_modp_NTT2_ext_1_fu_1171_a_assign_proc : process(t1_reg_3175, ap_CS_fsm_state21, x_19_reg_3428, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_modp_NTT2_ext_1_fu_1171_a <= x_19_reg_3428;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_modp_NTT2_ext_1_fu_1171_a <= t1_reg_3175;
        else 
            grp_modp_NTT2_ext_1_fu_1171_a <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_NTT2_ext_1_fu_1171_ap_start <= grp_modp_NTT2_ext_1_fu_1171_ap_start_reg;

    grp_modp_NTT2_ext_1_fu_1171_stride_assign_proc : process(tlen_reg_3122, ap_CS_fsm_state21, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_modp_NTT2_ext_1_fu_1171_stride <= tlen_reg_3122;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_modp_NTT2_ext_1_fu_1171_stride <= ap_const_lv8_1;
        else 
            grp_modp_NTT2_ext_1_fu_1171_stride <= "XXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_800_a_assign_proc : process(vla18_q1, reg_549, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state28, ap_CS_fsm_state36, reg_700, ap_CS_fsm_state13, tmp_173_fu_1672_p3, ap_CS_fsm_state9, icmp_ln779_fu_1624_p2, icmp_ln781_fu_1640_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln954_fu_1651_p2, ap_CS_fsm_state16, icmp_ln962_fu_1724_p2, ap_CS_fsm_state17, zext_ln757_9_reg_3304, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state24, r_10_reg_487, z_84_reg_497, g_assign_4_reg_528, ap_phi_mux_z_63_phi_fu_552_p4, x2_reg_558, x1_2_reg_569, x_17_reg_646, ap_CS_fsm_state29, ap_CS_fsm_state39, z_fu_1561_p2, zext_ln937_fu_1646_p1, add_ln697_fu_2636_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_modp_montymul_fu_800_a <= add_ln697_fu_2636_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            grp_modp_montymul_fu_800_a <= vla18_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_modp_montymul_fu_800_a <= x_17_reg_646;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_modp_montymul_fu_800_a <= x2_reg_558;
        elsif (((icmp_ln962_fu_1724_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_modp_montymul_fu_800_a <= x1_2_reg_569;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_modp_montymul_fu_800_a <= zext_ln757_9_reg_3304;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_modp_montymul_fu_800_a <= reg_700(32 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_800_a <= ap_phi_mux_z_63_phi_fu_552_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_800_a <= g_assign_4_reg_528;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_modp_montymul_fu_800_a <= zext_ln937_fu_1646_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_modp_montymul_fu_800_a <= r_10_reg_487;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln781_fu_1640_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_800_a <= z_84_reg_497;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_modp_montymul_fu_800_a <= reg_549;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_modp_montymul_fu_800_a <= z_fu_1561_p2;
        else 
            grp_modp_montymul_fu_800_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_800_b_assign_proc : process(vla18_q0, reg_549, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state28, ap_CS_fsm_state36, reg_700, ap_CS_fsm_state13, tmp_173_fu_1672_p3, ap_CS_fsm_state9, icmp_ln779_fu_1624_p2, icmp_ln781_fu_1640_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln954_fu_1651_p2, ap_CS_fsm_state16, icmp_ln962_fu_1724_p2, ap_CS_fsm_state17, zext_ln1330_reg_3196, zext_ln757_9_reg_3304, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state24, s_reg_3544, ap_phi_mux_r_10_phi_fu_490_p4, r_10_reg_487, ap_phi_mux_g_assign_4_phi_fu_531_p4, g_assign_4_reg_528, ap_phi_mux_z_63_phi_fu_552_p4, ap_CS_fsm_state29, ap_CS_fsm_state39, z_fu_1561_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_modp_montymul_fu_800_b <= zext_ln1330_reg_3196;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_modp_montymul_fu_800_b <= s_reg_3544;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_modp_montymul_fu_800_b <= vla18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_modp_montymul_fu_800_b <= reg_700(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((icmp_ln962_fu_1724_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            grp_modp_montymul_fu_800_b <= g_assign_4_reg_528;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_800_b <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_800_b <= ap_phi_mux_z_63_phi_fu_552_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_800_b <= ap_phi_mux_g_assign_4_phi_fu_531_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            grp_modp_montymul_fu_800_b <= zext_ln757_9_reg_3304;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_modp_montymul_fu_800_b <= r_10_reg_487;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln781_fu_1640_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_800_b <= ap_phi_mux_r_10_phi_fu_490_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_modp_montymul_fu_800_b <= reg_549;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_modp_montymul_fu_800_b <= z_fu_1561_p2;
        else 
            grp_modp_montymul_fu_800_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_800_p_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state13, tmp_173_fu_1672_p3, ap_CS_fsm_state9, icmp_ln779_fu_1624_p2, icmp_ln781_fu_1640_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln954_fu_1651_p2, ap_CS_fsm_state16, icmp_ln962_fu_1724_p2, ap_CS_fsm_state17, zext_ln1324_fu_1467_p1, zext_ln1324_reg_3277, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln962_fu_1724_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln781_fu_1640_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_800_p <= zext_ln1324_reg_3277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_modp_montymul_fu_800_p <= zext_ln1324_fu_1467_p1;
        else 
            grp_modp_montymul_fu_800_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_800_p0i_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state13, tmp_173_fu_1672_p3, ap_CS_fsm_state9, icmp_ln779_fu_1624_p2, icmp_ln781_fu_1640_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, icmp_ln954_fu_1651_p2, ap_CS_fsm_state16, icmp_ln962_fu_1724_p2, ap_CS_fsm_state17, zext_ln1324_1_fu_1509_p1, zext_ln1324_1_reg_3291, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln962_fu_1724_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln954_fu_1651_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln781_fu_1640_p2 = ap_const_lv1_0) and (icmp_ln779_fu_1624_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_173_fu_1672_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_800_p0i <= zext_ln1324_1_reg_3291;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_modp_montymul_fu_800_p0i <= zext_ln1324_1_fu_1509_p1;
        else 
            grp_modp_montymul_fu_800_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_zint_rebuild_CRT_1_fu_1154_ap_start <= grp_zint_rebuild_CRT_1_fu_1154_ap_start_reg;
    hm_fu_2374_p4 <= m_reg_679(10 downto 1);
    i_11_fu_1629_p2 <= std_logic_vector(unsigned(i_reg_476) + unsigned(ap_const_lv32_1));
    i_12_fu_1680_p2 <= std_logic_vector(signed(i_9_reg_538) + signed(ap_const_lv6_3F));
    icmp_ln1339_fu_2368_p2 <= "1" when (tmp_178_fu_2358_p4 = ap_const_lv10_0) else "0";
    icmp_ln1345_fu_2398_p2 <= "1" when (u_193_reg_712 = hm_reg_3500) else "0";
    icmp_ln1354_fu_2462_p2 <= "1" when (v_31_reg_723 = t_reg_688) else "0";
    icmp_ln1373_fu_2643_p2 <= "1" when (k_10_reg_745 = m_4_reg_3100) else "0";
    icmp_ln1520_fu_2046_p2 <= "1" when (u_191_fu_2007_p2 = ap_const_lv9_0) else "0";
    icmp_ln2284_fu_2814_p2 <= "1" when (unsigned(reg_791) < unsigned(Flen)) else "0";
    icmp_ln2293_fu_2824_p2 <= "1" when (unsigned(v_fu_2819_p2) < unsigned(zext_ln1323_reg_3128)) else "0";
    icmp_ln2474_fu_1387_p2 <= "1" when (u_112_fu_222 = tlen_reg_3122) else "0";
    icmp_ln2485_fu_1817_p2 <= "1" when (v_021_reg_591 = m_4_reg_3100) else "0";
    icmp_ln2491_fu_1943_p2 <= "1" when (v_27_reg_602 = m_4_reg_3100) else "0";
    icmp_ln2497_fu_2264_p2 <= "1" when (v_28_reg_657 = m_4_reg_3100) else "0";
    icmp_ln2513_fu_2719_p2 <= "1" when (u_fu_234 = m_4_reg_3100) else "0";
    icmp_ln779_fu_1624_p2 <= "1" when (unsigned(shl_ln779_fu_1614_p2) > unsigned(x_assign_85_cast_reg_3186)) else "0";
    icmp_ln781_fu_1640_p2 <= "1" when (and_ln781_fu_1635_p2 = ap_const_lv8_0) else "0";
    icmp_ln954_fu_1651_p2 <= "1" when (unsigned(k_7_reg_519) < unsigned(ap_const_lv4_A)) else "0";
    icmp_ln962_fu_1724_p2 <= "1" when (u_116_reg_580 = m_4_reg_3100) else "0";
    k_12_fu_1657_p2 <= std_logic_vector(unsigned(k_7_reg_519) + unsigned(ap_const_lv4_1));
    k_13_fu_2648_p2 <= std_logic_vector(unsigned(k_10_reg_745) + unsigned(ap_const_lv11_1));
    k_9_cast47_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_9_fu_1336_p2),10));
    k_9_fu_1336_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(empty_fu_1214_p1));
    logn_cast4_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),5));
    logn_cast7_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),32));
    lshr_ln1544_2_fu_2155_p4 <= add_ln1544_2_fu_2150_p2(14 downto 2);
    lshr_ln2281_1_fu_2757_p4 <= add_ln2281_1_fu_2752_p2(14 downto 2);
    lshr_ln2487_1_fu_1925_p4 <= add_ln2487_2_fu_1920_p2(14 downto 2);
    lshr_ln2500_1_fu_2338_p4 <= x_fu_2292_p2(14 downto 2);
    lshr_ln49_fu_2888_p4 <= add_ln2297_1_fu_2883_p2(14 downto 2);
    lshr_ln50_fu_1762_p4 <= add_ln967_fu_1757_p2(14 downto 2);
    lshr_ln51_fu_1802_p4 <= add_ln968_1_fu_1797_p2(14 downto 2);
    lshr_ln52_fu_1849_p4 <= add_ln2487_fu_1844_p2(14 downto 2);
    lshr_ln53_fu_2031_p4 <= add_ln1524_2_fu_2026_p2(14 downto 2);
    lshr_ln54_fu_2323_p4 <= add_ln2500_1_fu_2318_p2(14 downto 2);
    lshr_ln56_fu_2676_p4 <= r_13_fu_2671_p2(14 downto 2);
    lshr_ln57_fu_2447_p4 <= add_ln1351_2_fu_2442_p2(14 downto 2);
    lshr_ln58_fu_2514_p4 <= r1_fu_2491_p2(14 downto 2);
    lshr_ln59_fu_2529_p4 <= r2_fu_2509_p2(14 downto 2);
    lshr_ln813_fu_1692_p2 <= std_logic_vector(shift_right(unsigned(e_reg_3335),to_integer(unsigned('0' & sext_ln808_reg_3340(31-1 downto 0)))));
    lshr_ln_fu_2851_p4 <= add_ln2293_1_fu_2846_p2(14 downto 2);
    m_4_fu_1226_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv11_1),to_integer(unsigned('0' & zext_ln2462_1_fu_1222_p1(11-1 downto 0)))));
    mul_ln656_fu_1431_p0 <= sext_ln1324_fu_1417_p1(25 - 1 downto 0);
    mul_ln656_fu_1431_p1 <= zext_ln656_fu_1427_p1(24 - 1 downto 0);
    mul_ln657_fu_1449_p0 <= sext_ln1324_fu_1417_p1(25 - 1 downto 0);
    mul_ln658_fu_1471_p0 <= sext_ln1324_reg_3264(25 - 1 downto 0);
    mul_ln659_fu_1486_p0 <= sext_ln1324_reg_3264(25 - 1 downto 0);
    ni_fu_1356_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv26_1),to_integer(unsigned('0' & sub_i92_cast_fu_1352_p1(26-1 downto 0)))));
    p0i_fu_1503_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_fu_1486_p2));
    p0i_fu_1503_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_57_fu_1481_p2));
    r1_fu_2491_p2 <= std_logic_vector(unsigned(shl_ln57_fu_2483_p3) + unsigned(tmp));
    r2_fu_2509_p2 <= std_logic_vector(unsigned(shl_ln1348_1_fu_2501_p3) + unsigned(tmp));
    r_13_fu_2671_p2 <= std_logic_vector(unsigned(shl_ln55_fu_2663_p3) + unsigned(tmp));
    scl_cast_fu_1190_p0 <= scl;
        scl_cast_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(scl_cast_fu_1190_p0),32));

    select_ln1525_fu_2065_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_175_fu_2057_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln635_fu_1876_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_174_fu_1868_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_7_fu_2111_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_176_fu_2103_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_8_fu_2573_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_179_fu_2565_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_fu_1540_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_171_fu_1532_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_2_fu_2615_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_180_fu_2607_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_fu_2232_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_177_fu_2224_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_fu_1573_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln735_fu_1569_p1(0) = '1') else 
        ap_const_lv25_0;
    select_ln813_fu_1700_p3 <= 
        ap_const_lv32_FFFFFFFF when (trunc_ln813_fu_1696_p1(0) = '1') else 
        ap_const_lv32_0;
    sext_ln1324_fu_1417_p0 <= PRIMES_p_q0;
        sext_ln1324_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1324_fu_1417_p0),31));

        sext_ln1510_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(phi_ln1510_reg_637),13));

        sext_ln1521_fu_2078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1525_fu_2073_p2),31));

        sext_ln1544_fu_2209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1544_fu_2203_p2),32));

        sext_ln2281_fu_2802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ysign_fu_2792_p4),31));

        sext_ln635_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln635_fu_1884_p2),31));

        sext_ln685_5_fu_2124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_5_fu_2119_p2),31));

        sext_ln685_6_fu_2586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_6_fu_2581_p2),31));

        sext_ln685_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_fu_1548_p2),31));

        sext_ln697_1_fu_2628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_1_fu_2623_p2),31));

        sext_ln697_fu_2245_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_fu_2240_p2),31));

        sext_ln757_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_fu_1581_p2),31));

        sext_ln808_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_9_reg_538),32));

    shl_ln1348_1_fu_2501_p3 <= (add_ln1348_2_fu_2496_p2 & ap_const_lv2_0);
    shl_ln2294_fu_2939_p2 <= std_logic_vector(shift_left(unsigned(wy_fu_2933_p3),to_integer(unsigned('0' & scl_cast_reg_3075(31-1 downto 0)))));
    shl_ln2457_1_fu_2284_p3 <= (add_ln2457_2_fu_2279_p2 & ap_const_lv2_0);
    shl_ln2467_1_fu_1312_p3 <= (add_ln2467_fu_1306_p2 & ap_const_lv2_0);
    shl_ln2467_2_fu_1266_p3 <= (m_4_fu_1226_p2 & ap_const_lv1_0);
    shl_ln2467_fu_1292_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1323_4_fu_1262_p1),to_integer(unsigned('0' & zext_ln2462_fu_1218_p1(16-1 downto 0)))));
    shl_ln2487_1_fu_1912_p3 <= (add_ln2487_1_fu_1907_p2 & ap_const_lv2_0);
    shl_ln44_fu_2744_p3 <= (add_ln2281_2_fu_2739_p2 & ap_const_lv2_0);
    shl_ln45_fu_2838_p3 <= (add_ln2293_fu_2833_p2 & ap_const_lv2_0);
    shl_ln46_fu_2875_p3 <= (add_ln2297_fu_2870_p2 & ap_const_lv2_0);
    shl_ln47_fu_1745_p3 <= (REV10_q0 & ap_const_lv2_0);
    shl_ln48_fu_1785_p3 <= (add_ln968_fu_1780_p2 & ap_const_lv2_0);
    shl_ln49_fu_1832_p3 <= (trunc_ln2487_fu_1828_p1 & ap_const_lv2_0);
    shl_ln50_fu_1986_p3 <= (add_ln2490_reg_3394 & ap_const_lv2_0);
    shl_ln51_fu_1963_p3 <= (add_ln2457_fu_1958_p2 & ap_const_lv2_0);
    shl_ln52_fu_2018_p3 <= (add_ln1524_3_fu_2013_p2 & ap_const_lv2_0);
    shl_ln53_fu_2310_p3 <= (add_ln2500_fu_2305_p2 & ap_const_lv2_0);
    shl_ln54_fu_2142_p3 <= (add_ln1544_fu_2138_p2 & ap_const_lv2_0);
    shl_ln55_fu_2663_p3 <= (add_ln1329_fu_2658_p2 & ap_const_lv2_0);
    shl_ln56_fu_2431_p3 <= (add_ln1351_1_reg_3529 & ap_const_lv2_0);
    shl_ln57_fu_2483_p3 <= (add_ln1348_fu_2478_p2 & ap_const_lv2_0);
    shl_ln685_fu_1520_p2 <= std_logic_vector(shift_left(unsigned(z_83_fu_1514_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln779_fu_1614_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & i_reg_476(31-1 downto 0)))));
    shl_ln966_fu_1735_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln962_fu_1720_p1),to_integer(unsigned('0' & k_9_cast47_reg_3191(10-1 downto 0)))));
    shl_ln_fu_1274_p3 <= (m_4_fu_1226_p2 & ap_const_lv3_0);
    sub9_i_fu_2707_p1 <= scl;
    sub9_i_fu_2707_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(sub9_i_fu_2707_p1));
    sub_i92_cast_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i92_fu_1346_p2),26));
    sub_i92_fu_1346_p2 <= (logn_cast4_fu_1210_p1 xor ap_const_lv5_1F);
    sub_ln1544_fu_2203_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1544_3_fu_2199_p1));
    sub_ln2281_fu_2786_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln2281_1_fu_2782_p1));
    sub_ln2297_fu_2967_p2 <= std_logic_vector(unsigned(vla18_q0) - unsigned(zext_ln2287_fu_2954_p1));
    sub_ln685_4_fu_2554_p2 <= std_logic_vector(unsigned(vla18_q0) - unsigned(zext_ln1324_reg_3277));
    sub_ln685_fu_1526_p2 <= std_logic_vector(unsigned(shl_ln685_fu_1520_p2) - unsigned(zext_ln1324_fu_1467_p1));
    sub_ln697_2_fu_2601_p2 <= std_logic_vector(unsigned(vla18_q0) - unsigned(vla18_q1));
    sub_ln697_fu_2219_p2 <= std_logic_vector(unsigned(x_26_reg_3447) - unsigned(and_ln1544_fu_2213_p2));
    t1_fu_1320_p2 <= std_logic_vector(unsigned(shl_ln2467_1_fu_1312_p3) + unsigned(tmp));
    tlen_fu_1240_p2 <= std_logic_vector(unsigned(flen_r) + unsigned(ap_const_lv8_1));
    tmp_171_fu_1532_p3 <= sub_ln685_fu_1526_p2(31 downto 31);
    tmp_173_fu_1672_p3 <= i_9_reg_538(5 downto 5);
    tmp_174_fu_1868_p3 <= vla18_q0(31 downto 31);
    tmp_175_fu_2057_p3 <= w_55_fu_2052_p2(31 downto 31);
    tmp_176_fu_2103_p3 <= add_ln685_10_fu_2097_p2(31 downto 31);
    tmp_177_fu_2224_p3 <= sub_ln697_fu_2219_p2(31 downto 31);
    tmp_178_fu_2358_p4 <= m_reg_679(10 downto 1);
    tmp_179_fu_2565_p3 <= add_ln685_12_fu_2559_p2(31 downto 31);
    tmp_180_fu_2607_p3 <= sub_ln697_2_fu_2601_p2(31 downto 31);
    trunc_ln1324_fu_1413_p0 <= PRIMES_p_q0;
    trunc_ln1324_fu_1413_p1 <= trunc_ln1324_fu_1413_p0(24 - 1 downto 0);
    trunc_ln1329_fu_2654_p1 <= idx125_reg_756(13 - 1 downto 0);
    trunc_ln1345_fu_2423_p1 <= reg_700(13 - 1 downto 0);
    trunc_ln1348_fu_2474_p1 <= idx127_reg_734(13 - 1 downto 0);
    trunc_ln2287_fu_2983_p1 <= w_fu_2977_p2(31 - 1 downto 0);
    trunc_ln2293_fu_2829_p1 <= v_fu_2819_p2(13 - 1 downto 0);
    trunc_ln2294_fu_2944_p1 <= shl_ln2294_fu_2939_p2(31 - 1 downto 0);
    trunc_ln2297_1_fu_2963_p1 <= tw_1_fu_2958_p2(31 - 1 downto 0);
    trunc_ln2297_2_fu_2866_p1 <= reg_791(13 - 1 downto 0);
    trunc_ln2297_fu_2810_p1 <= idx133_fu_226(13 - 1 downto 0);
    trunc_ln2457_1_fu_1954_p1 <= idx121_reg_625(13 - 1 downto 0);
    trunc_ln2457_2_fu_2275_p1 <= idx123_reg_668(13 - 1 downto 0);
    trunc_ln2457_fu_2730_p1 <= idx131_fu_230(13 - 1 downto 0);
    trunc_ln2467_fu_1298_p1 <= shl_ln2467_fu_1292_p2(13 - 1 downto 0);
    trunc_ln2487_fu_1828_p1 <= v_021_reg_591(10 - 1 downto 0);
    trunc_ln2491_fu_1976_p1 <= idx_reg_613(13 - 1 downto 0);
    trunc_ln2500_fu_2297_p1 <= v_28_reg_657(10 - 1 downto 0);
    trunc_ln735_fu_1569_p1 <= grp_modp_montymul_fu_800_ap_return(1 - 1 downto 0);
    trunc_ln779_fu_1620_p1 <= shl_ln779_fu_1614_p2(8 - 1 downto 0);
    trunc_ln813_fu_1696_p1 <= lshr_ln813_fu_1692_p2(1 - 1 downto 0);
    trunc_ln962_fu_1720_p1 <= u_116_reg_580(10 - 1 downto 0);
    trunc_ln9_fu_2189_p4 <= vla18_q0(31 downto 30);
    trunc_ln_fu_2772_p4 <= vla18_q1(31 downto 30);
    tw_1_fu_2958_p2 <= std_logic_vector(shift_right(unsigned(wy_fu_2933_p3),to_integer(unsigned('0' & zext_ln2513_reg_3614(31-1 downto 0)))));
    u_112_cast_cast_cast_cast_fu_2703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_cast_cast_cast_fu_2700_p1),64));
        u_112_cast_cast_cast_fu_2700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sch),32));

    u_188_fu_2903_p2 <= std_logic_vector(unsigned(reg_791) + unsigned(ap_const_lv64_1));
    u_189_fu_2724_p2 <= std_logic_vector(unsigned(u_fu_234) + unsigned(ap_const_lv11_1));
    u_190_fu_1729_p2 <= std_logic_vector(unsigned(u_116_reg_580) + unsigned(ap_const_lv11_1));
    u_191_fu_2007_p2 <= std_logic_vector(signed(phi_ln1510_reg_637) + signed(ap_const_lv9_1FF));
    u_192_fu_1392_p2 <= std_logic_vector(unsigned(u_112_fu_222) + unsigned(ap_const_lv8_1));
    u_194_fu_2403_p2 <= std_logic_vector(unsigned(u_193_reg_712) + unsigned(ap_const_lv10_1));
    v1_1_fu_2549_p2 <= std_logic_vector(unsigned(dt_reg_3510) + unsigned(reg_700));
    v_26_fu_1822_p2 <= std_logic_vector(unsigned(v_021_reg_591) + unsigned(ap_const_lv11_1));
    v_29_fu_2269_p2 <= std_logic_vector(unsigned(v_28_reg_657) + unsigned(ap_const_lv11_1));
    v_30_fu_1948_p2 <= std_logic_vector(unsigned(v_27_reg_602) + unsigned(ap_const_lv11_1));
    v_32_fu_2468_p2 <= std_logic_vector(unsigned(v_31_reg_723) + unsigned(ap_const_lv64_1));
    v_fu_2819_p2 <= std_logic_vector(unsigned(reg_791) - unsigned(u_112_cast_cast_cast_cast_reg_3608));

    vla18_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state19, icmp_ln2485_fu_1817_p2, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state35, ap_CS_fsm_state40, ap_CS_fsm_state43, vla18_addr_285_reg_3660, ap_CS_fsm_state44, grp_zint_rebuild_CRT_1_fu_1154_vla18_address0, grp_modp_NTT2_ext_1_fu_1171_vla18_address0, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state25, ap_CS_fsm_state26, zext_ln967_1_fu_1772_p1, zext_ln968_2_fu_1812_p1, zext_ln2487_1_fu_1859_p1, zext_ln2487_3_fu_1935_p1, zext_ln1524_fu_2041_p1, zext_ln1544_fu_2165_p1, zext_ln2494_fu_2260_p1, zext_ln2500_2_fu_2348_p1, zext_ln1358_fu_2524_p1, zext_ln2297_fu_2898_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            vla18_address0 <= vla18_addr_285_reg_3660;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            vla18_address0 <= zext_ln2297_fu_2898_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            vla18_address0 <= zext_ln1358_fu_2524_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            vla18_address0 <= zext_ln2500_2_fu_2348_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla18_address0 <= zext_ln2494_fu_2260_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla18_address0 <= zext_ln1544_fu_2165_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla18_address0 <= zext_ln1524_fu_2041_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_address0 <= zext_ln2487_3_fu_1935_p1(13 - 1 downto 0);
        elsif (((icmp_ln2485_fu_1817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            vla18_address0 <= zext_ln2487_1_fu_1859_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla18_address0 <= zext_ln968_2_fu_1812_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            vla18_address0 <= zext_ln967_1_fu_1772_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address0 <= grp_modp_NTT2_ext_1_fu_1171_vla18_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_address0 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_address0;
        else 
            vla18_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_address1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state21, ap_CS_fsm_state27, vla18_addr_292_reg_3486, ap_CS_fsm_state33, ap_CS_fsm_state35, vla18_addr_297_reg_3567, vla18_addr_298_reg_3573, ap_CS_fsm_state38, vla18_addr_296_reg_3597, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, grp_zint_rebuild_CRT_1_fu_1154_vla18_address1, grp_modp_NTT2_ext_1_fu_1171_vla18_address1, ap_CS_fsm_state26, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state39, zext_ln2500_1_fu_2333_p1, zext_ln1351_2_fu_2457_p1, zext_ln1359_fu_2539_p1, zext_ln1374_fu_2686_p1, zext_ln2281_fu_2767_p1, zext_ln2293_fu_2861_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            vla18_address1 <= zext_ln2293_fu_2861_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            vla18_address1 <= zext_ln2281_fu_2767_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            vla18_address1 <= vla18_addr_296_reg_3597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            vla18_address1 <= zext_ln1374_fu_2686_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            vla18_address1 <= vla18_addr_298_reg_3573;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            vla18_address1 <= vla18_addr_297_reg_3567;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            vla18_address1 <= zext_ln1359_fu_2539_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            vla18_address1 <= zext_ln1351_2_fu_2457_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            vla18_address1 <= vla18_addr_292_reg_3486;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            vla18_address1 <= zext_ln2500_1_fu_2333_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address1 <= grp_modp_NTT2_ext_1_fu_1171_vla18_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_address1 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_address1;
        else 
            vla18_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state19, icmp_ln2485_fu_1817_p2, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state27, ap_CS_fsm_state35, ap_CS_fsm_state40, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_zint_rebuild_CRT_1_fu_1154_vla18_ce0, grp_modp_NTT2_ext_1_fu_1171_vla18_ce0, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln2485_fu_1817_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            vla18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_ce0 <= grp_modp_NTT2_ext_1_fu_1171_vla18_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_ce0 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_ce0;
        else 
            vla18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_ce1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state21, ap_CS_fsm_state27, ap_CS_fsm_state33, ap_CS_fsm_state35, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, grp_zint_rebuild_CRT_1_fu_1154_vla18_ce1, grp_modp_NTT2_ext_1_fu_1171_vla18_ce1, ap_CS_fsm_state26, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            vla18_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_ce1 <= grp_modp_NTT2_ext_1_fu_1171_vla18_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_ce1 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_ce1;
        else 
            vla18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state40, ap_CS_fsm_state44, grp_zint_rebuild_CRT_1_fu_1154_vla18_d0, grp_modp_NTT2_ext_1_fu_1171_vla18_d0, x2_reg_558, ap_CS_fsm_state18, x1_2_reg_569, ap_CS_fsm_state20, ap_CS_fsm_state25, ap_CS_fsm_state26, w_54_fu_1897_p2, z_82_fu_2253_p2, zext_ln2298_fu_2987_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            vla18_d0 <= zext_ln2298_fu_2987_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            vla18_d0 <= z_82_fu_2253_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_d0 <= w_54_fu_1897_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla18_d0 <= x2_reg_558;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            vla18_d0 <= x1_2_reg_569;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_d0 <= grp_modp_NTT2_ext_1_fu_1171_vla18_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_d0 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_d0;
        else 
            vla18_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_d1_assign_proc : process(grp_modp_montymul_fu_800_ap_return, reg_549, ap_CS_fsm_state36, ap_CS_fsm_state21, ap_CS_fsm_state40, grp_zint_rebuild_CRT_1_fu_1154_vla18_d1, grp_modp_NTT2_ext_1_fu_1171_vla18_d1, ap_CS_fsm_state26, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state39, add_ln685_13_fu_2594_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            vla18_d1 <= reg_549;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            vla18_d1 <= add_ln685_13_fu_2594_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            vla18_d1 <= grp_modp_montymul_fu_800_ap_return;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_d1 <= grp_modp_NTT2_ext_1_fu_1171_vla18_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_d1 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_d1;
        else 
            vla18_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_we0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state40, ap_CS_fsm_state44, grp_zint_rebuild_CRT_1_fu_1154_vla18_we0, grp_modp_NTT2_ext_1_fu_1171_vla18_we0, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            vla18_we0 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_we0 <= grp_modp_NTT2_ext_1_fu_1171_vla18_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_we0 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_we0;
        else 
            vla18_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla18_we1_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state21, ap_CS_fsm_state40, grp_zint_rebuild_CRT_1_fu_1154_vla18_we1, grp_modp_NTT2_ext_1_fu_1171_vla18_we1, ap_CS_fsm_state26, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            vla18_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_we1 <= grp_modp_NTT2_ext_1_fu_1171_vla18_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            vla18_we1 <= grp_zint_rebuild_CRT_1_fu_1154_vla18_we1;
        else 
            vla18_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    w_54_fu_1897_p2 <= std_logic_vector(unsigned(vla18_q0) + unsigned(zext_ln635_fu_1893_p1));
    w_55_fu_2052_p2 <= std_logic_vector(unsigned(vla18_q0) - unsigned(zext_ln1324_reg_3277));
    w_57_fu_2086_p2 <= std_logic_vector(unsigned(grp_modp_montymul_fu_800_ap_return) - unsigned(zext_ln1324_reg_3277));
    w_fu_2977_p2 <= std_logic_vector(unsigned(sub_ln2297_fu_2967_p2) - unsigned(zext_ln2284_fu_2973_p1));
    wy_fu_2933_p3 <= 
        vla18_q1 when (icmp_ln2293_reg_3650(0) = '1') else 
        zext_ln2281_2_reg_3637;
    wys_fu_2948_p1 <= reg_779(31 - 1 downto 0);
    wys_fu_2948_p2 <= (wys_fu_2948_p1 or trunc_ln2294_fu_2944_p1);
    x_19_fu_1997_p2 <= std_logic_vector(unsigned(zext_ln2490_fu_1993_p1) + unsigned(tmp));
    x_22_fu_1971_p2 <= std_logic_vector(unsigned(shl_ln51_fu_1963_p3) + unsigned(tmp));
    x_26_fu_2132_p2 <= std_logic_vector(unsigned(zext_ln685_7_fu_2128_p1) + unsigned(add_ln685_10_fu_2097_p2));
    x_assign_85_cast_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_fu_1326_p2),32));
    x_assign_fu_1326_p2 <= std_logic_vector(unsigned(flen_r) + unsigned(ap_const_lv8_FF));
    x_fu_2292_p2 <= std_logic_vector(unsigned(shl_ln2457_1_fu_2284_p3) + unsigned(tmp));
    xor_ln813_fu_1686_p1 <= reg_700(32 - 1 downto 0);
    xor_ln813_fu_1686_p2 <= (xor_ln813_fu_1686_p1 xor grp_modp_montymul_fu_800_ap_return);
    y_54_fu_1421_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln1324_fu_1413_p1));
    y_55_fu_1443_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_1431_p2));
    y_55_fu_1443_p1 <= zext_ln656_fu_1427_p1(24 - 1 downto 0);
    y_56_fu_1461_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_1449_p2));
    y_57_fu_1481_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_fu_1471_p2));
    ysign_fu_2792_p4 <= sub_ln2281_fu_2786_p2(2 downto 1);
    z_80_fu_1714_p1 <= reg_700(32 - 1 downto 0);
    z_80_fu_1714_p2 <= (z_80_fu_1714_p1 xor and_ln813_fu_1708_p2);
    z_82_fu_2253_p2 <= std_logic_vector(unsigned(zext_ln697_fu_2249_p1) + unsigned(sub_ln697_fu_2219_p2));
    z_83_fu_1514_p2 <= std_logic_vector(signed(ap_const_lv32_80000000) - signed(zext_ln1324_fu_1467_p1));
    z_fu_1561_p2 <= std_logic_vector(unsigned(zext_ln685_fu_1557_p1) + unsigned(sub_ln685_fu_1526_p2));
    zext_ln1323_1_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_1240_p2),13));
    zext_ln1323_2_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_1240_p2),9));
    zext_ln1323_3_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_1240_p2),18));
    zext_ln1323_4_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_1240_p2),16));
    zext_ln1323_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tlen_fu_1240_p2),64));
    zext_ln1324_1_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_fu_1503_p2),32));
    zext_ln1324_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1324_reg_3264),32));
    zext_ln1329_1_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_fu_1226_p2),12));
    zext_ln1329_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_fu_1226_p2),64));
    zext_ln1330_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ni_fu_1356_p2),32));
    zext_ln1343_fu_2384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hm_fu_2374_p4),11));
    zext_ln1345_fu_2394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hm_fu_2374_p4),12));
    zext_ln1351_1_fu_2438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln56_fu_2431_p3),15));
    zext_ln1351_2_fu_2457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln57_fu_2447_p4),64));
    zext_ln1351_fu_2409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_193_reg_712),12));
    zext_ln1358_fu_2524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln58_fu_2514_p4),64));
    zext_ln1359_fu_2539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln59_fu_2529_p4),64));
    zext_ln1374_fu_2686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln56_fu_2676_p4),64));
    zext_ln1521_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1521_fu_2078_p1),32));
    zext_ln1524_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln53_fu_2031_p4),64));
    zext_ln1544_3_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln9_fu_2189_p4),3));
    zext_ln1544_fu_2165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1544_2_fu_2155_p4),64));
    zext_ln2281_1_fu_2782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_2772_p4),3));
    zext_ln2281_2_fu_2806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2281_fu_2802_p1),32));
    zext_ln2281_fu_2767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2281_1_fu_2757_p4),64));
    zext_ln2284_fu_2973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_767),32));
    zext_ln2287_fu_2954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wys_fu_2948_p2),32));
    zext_ln2293_fu_2861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_2851_p4),64));
    zext_ln2297_fu_2898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln49_fu_2888_p4),64));
    zext_ln2298_fu_2987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2287_fu_2983_p1),32));
    zext_ln2457_fu_1940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2490_reg_3394),13));
    zext_ln2462_1_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),11));
    zext_ln2462_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),16));
    zext_ln2466_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1274_p3),15));
    zext_ln2467_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2467_2_fu_1266_p3),13));
    zext_ln2474_1_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_fu_222),64));
    zext_ln2474_2_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_112_fu_222),12));
    zext_ln2474_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(flen_r),13));
    zext_ln2487_1_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln52_fu_1849_p4),64));
    zext_ln2487_2_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2487_reg_3384),13));
    zext_ln2487_3_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2487_1_fu_1925_p4),64));
    zext_ln2487_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln49_fu_1832_p3),15));
    zext_ln2490_fu_1993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln50_fu_1986_p3),15));
    zext_ln2494_fu_2260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln55_reg_3458),64));
    zext_ln2500_1_fu_2333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln54_fu_2323_p4),64));
    zext_ln2500_2_fu_2348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2500_1_fu_2338_p4),64));
    zext_ln2500_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2500_fu_2297_p1),13));
    zext_ln2513_fu_2712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub9_i_fu_2707_p2),32));
    zext_ln635_fu_1893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln635_fu_1889_p1),32));
    zext_ln656_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_54_fu_1421_p2),31));
    zext_ln685_7_fu_2128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_5_fu_2124_p1),32));
    zext_ln685_8_fu_2590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_6_fu_2586_p1),32));
    zext_ln685_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_fu_1553_p1),32));
    zext_ln697_1_fu_2632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_1_fu_2628_p1),32));
    zext_ln697_fu_2249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_fu_2245_p1),32));
    zext_ln757_9_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(R2_fu_1600_p4),32));
    zext_ln757_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln757_fu_1586_p1),32));
    zext_ln937_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(PRIMES_g_q0),32));
    zext_ln966_fu_1740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln966_fu_1735_p2),64));
    zext_ln967_1_fu_1772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln50_fu_1762_p4),64));
    zext_ln967_fu_1753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln47_fu_1745_p3),15));
    zext_ln968_1_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln48_fu_1785_p3),15));
    zext_ln968_2_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln51_fu_1802_p4),64));
    zext_ln968_fu_1777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v_25_reg_3371),11));
end behav;
