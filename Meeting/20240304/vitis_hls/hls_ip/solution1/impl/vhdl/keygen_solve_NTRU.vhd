-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity keygen_solve_NTRU is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    F_upper_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    F_upper_ce0 : OUT STD_LOGIC;
    F_upper_we0 : OUT STD_LOGIC;
    F_upper_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    F_upper_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    G_upper_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    G_upper_ce0 : OUT STD_LOGIC;
    G_upper_we0 : OUT STD_LOGIC;
    G_upper_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    G_upper_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    f_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    f_ce0 : OUT STD_LOGIC;
    f_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    g_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    g_ce0 : OUT STD_LOGIC;
    g_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of keygen_solve_NTRU is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_75596399 : STD_LOGIC_VECTOR (31 downto 0) := "01110101010110010110001110011001";
    constant ap_const_lv32_7FFFD801 : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111101100000000001";
    constant ap_const_lv32_79BFD7FF : STD_LOGIC_VECTOR (31 downto 0) := "01111001101111111101011111111111";
    constant ap_const_lv32_63FB001 : STD_LOGIC_VECTOR (31 downto 0) := "00000110001111111011000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv15_1000 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_const_lv15_2000 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_const_lv15_3000 : STD_LOGIC_VECTOR (14 downto 0) := "011000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv25_1FFD801 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111101100000000001";
    constant ap_const_lv31_79BFD7FF : STD_LOGIC_VECTOR (30 downto 0) := "1111001101111111101011111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_27FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010011111111111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111110";
    constant ap_const_lv32_7FFFD7FF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111101011111111111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_723F844C : STD_LOGIC_VECTOR (31 downto 0) := "01110010001111111000010001001100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal REV10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal REV10_ce0 : STD_LOGIC;
    signal REV10_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_solve_NTRU_all_1_fu_478_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln4354_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4354_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln4379_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4379_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4384_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4384_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4388_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4388_reg_1341 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln2385_fu_662_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2385_reg_1352 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln2385_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2385_reg_1357 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_175_fu_673_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_175_reg_1361 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln2385_1_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2385_1_reg_1381 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln2385_1_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2385_1_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_177_fu_740_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_177_reg_1390 : STD_LOGIC_VECTOR (10 downto 0);
    signal z_64_fu_861_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_64_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_160_fu_823_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_modp_montymul_fu_524_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ig_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln962_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln4432_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4432_reg_1466 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln4432_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_182_reg_1486 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln4435_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_50_fu_1157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_50_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln4447_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4447_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal u_185_fu_1191_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_185_reg_1529 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln4450_fu_1197_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln4450_reg_1534 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_modp_montymul_fu_514_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal a_assign_9_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal vla18_ce0 : STD_LOGIC;
    signal vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal vla18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal vla18_ce1 : STD_LOGIC;
    signal vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal vla18_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_ap_start : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_ap_idle : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_ap_ready : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_f_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_f_ce0 : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_g_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_g_ce0 : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_depth_offset : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_ce0 : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_ce1 : STD_LOGIC;
    signal grp_solve_NTRU_all_1_fu_478_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_514_ap_ready : STD_LOGIC;
    signal grp_modp_montymul_fu_514_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_514_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_524_ap_ready : STD_LOGIC;
    signal grp_modp_montymul_fu_524_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_524_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_ap_start : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_ap_done : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_ap_idle : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_ap_ready : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_vla18_ce0 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_vla18_ce1 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_542_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_542_a : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_0_2_ph_reg_402 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln4452_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_retval_5_ph_phi_fu_418_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_5_ph_reg_414 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_tmp2_0_2_phi_fu_434_p12 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_0_2_reg_426 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln2389_1_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_retval_5_phi_fu_458_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_5_reg_454 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_solve_NTRU_all_1_fu_478_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_modp_NTT2_ext_1_fu_542_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln2389_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln2310_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln962_fu_900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln967_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln966_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal zext_ln4435_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4436_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4437_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4438_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln4450_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4447_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4451_fu_1221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln4451_1_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal depth_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth_3_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln4378_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_0_0_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_fu_188 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_103_fu_192 : STD_LOGIC_VECTOR (10 downto 0);
    signal z_47_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_fu_200 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_9_fu_867_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal u_105_fu_204 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_179_fu_911_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x1_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal x2_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal u_034_fu_216 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_181_fu_979_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_108_fu_220 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_183_fu_1038_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal u_110_fu_224 : STD_LOGIC_VECTOR (10 downto 0);
    signal w_44_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_46_fu_1074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_48_fu_1117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_51_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2389_fu_706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2388_fu_746_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln_fu_750_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_159_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2311_2_fu_781_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_52_fu_789_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2389_1_fu_795_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln808_fu_819_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_160_fu_823_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln808_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln813_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln813_fu_843_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln813_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln813_fu_847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln813_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_9_fu_867_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln967_cast_fu_942_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln4433_fu_995_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_161_fu_999_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_161_fu_999_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_fu_1007_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4433_fu_995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4436_fu_1054_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_162_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_162_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_15_fu_1066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4436_fu_1054_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln4436_fu_1081_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln46_fu_1084_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln4437_fu_1097_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_163_fu_1101_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_163_fu_1101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_16_fu_1109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4437_fu_1097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln47_fu_1124_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln4438_fu_1137_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_164_fu_1141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_164_fu_1141_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln635_17_fu_1149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4438_fu_1137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln4438_fu_1163_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln4438_1_fu_1168_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln48_fu_1201_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln49_fu_1214_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln4451_fu_1226_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln4451_fu_1231_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln697_fu_1240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_fu_1245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_fu_1253_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_65_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln4459_fu_1281_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln4459_fu_1277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln4459_1_fu_1285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_condition_1195 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component keygen_solve_NTRU_all_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        f_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        f_ce0 : OUT STD_LOGIC;
        f_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        g_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        g_ce0 : OUT STD_LOGIC;
        g_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        depth_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component keygen_modp_montymul IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component keygen_modp_NTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (14 downto 0);
        stride : IN STD_LOGIC_VECTOR (7 downto 0);
        gm : IN STD_LOGIC_VECTOR (14 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_modp_mkgm2_1_REV10_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component keygen_solve_NTRU_vla18_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (3 downto 0);
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (3 downto 0);
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    REV10_U : component keygen_modp_mkgm2_1_REV10_ROM_AUTO_1R
    generic map (
        DataWidth => 10,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => REV10_address0,
        ce0 => REV10_ce0,
        q0 => REV10_q0);

    vla18_U : component keygen_solve_NTRU_vla18_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 7168,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => vla18_address0,
        ce0 => vla18_ce0,
        we0 => vla18_we0,
        d0 => vla18_d0,
        q0 => vla18_q0,
        address1 => vla18_address1,
        ce1 => vla18_ce1,
        we1 => vla18_we1,
        d1 => vla18_d1,
        q1 => vla18_q1);

    grp_solve_NTRU_all_1_fu_478 : component keygen_solve_NTRU_all_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_solve_NTRU_all_1_fu_478_ap_start,
        ap_done => grp_solve_NTRU_all_1_fu_478_ap_done,
        ap_idle => grp_solve_NTRU_all_1_fu_478_ap_idle,
        ap_ready => grp_solve_NTRU_all_1_fu_478_ap_ready,
        f_address0 => grp_solve_NTRU_all_1_fu_478_f_address0,
        f_ce0 => grp_solve_NTRU_all_1_fu_478_f_ce0,
        f_q0 => f_q0,
        g_address0 => grp_solve_NTRU_all_1_fu_478_g_address0,
        g_ce0 => grp_solve_NTRU_all_1_fu_478_g_ce0,
        g_q0 => g_q0,
        depth_offset => grp_solve_NTRU_all_1_fu_478_depth_offset,
        vla18_address0 => grp_solve_NTRU_all_1_fu_478_vla18_address0,
        vla18_ce0 => grp_solve_NTRU_all_1_fu_478_vla18_ce0,
        vla18_we0 => grp_solve_NTRU_all_1_fu_478_vla18_we0,
        vla18_d0 => grp_solve_NTRU_all_1_fu_478_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_solve_NTRU_all_1_fu_478_vla18_address1,
        vla18_ce1 => grp_solve_NTRU_all_1_fu_478_vla18_ce1,
        vla18_we1 => grp_solve_NTRU_all_1_fu_478_vla18_we1,
        vla18_d1 => grp_solve_NTRU_all_1_fu_478_vla18_d1,
        vla18_q1 => vla18_q1,
        p_read => grp_solve_NTRU_all_1_fu_478_p_read,
        ap_return_0 => grp_solve_NTRU_all_1_fu_478_ap_return_0,
        ap_return_1 => grp_solve_NTRU_all_1_fu_478_ap_return_1);

    grp_modp_montymul_fu_514 : component keygen_modp_montymul
    port map (
        ap_ready => grp_modp_montymul_fu_514_ap_ready,
        a => grp_modp_montymul_fu_514_a,
        b => grp_modp_montymul_fu_514_b,
        p => ap_const_lv32_7FFFD801,
        p0i => ap_const_lv32_79BFD7FF,
        ap_return => grp_modp_montymul_fu_514_ap_return);

    grp_modp_montymul_fu_524 : component keygen_modp_montymul
    port map (
        ap_ready => grp_modp_montymul_fu_524_ap_ready,
        a => grp_modp_montymul_fu_524_a,
        b => grp_modp_montymul_fu_524_b,
        p => ap_const_lv32_7FFFD801,
        p0i => ap_const_lv32_79BFD7FF,
        ap_return => grp_modp_montymul_fu_524_ap_return);

    grp_modp_NTT2_ext_1_fu_542 : component keygen_modp_NTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_NTT2_ext_1_fu_542_ap_start,
        ap_done => grp_modp_NTT2_ext_1_fu_542_ap_done,
        ap_idle => grp_modp_NTT2_ext_1_fu_542_ap_idle,
        ap_ready => grp_modp_NTT2_ext_1_fu_542_ap_ready,
        vla18_address0 => grp_modp_NTT2_ext_1_fu_542_vla18_address0,
        vla18_ce0 => grp_modp_NTT2_ext_1_fu_542_vla18_ce0,
        vla18_we0 => grp_modp_NTT2_ext_1_fu_542_vla18_we0,
        vla18_d0 => grp_modp_NTT2_ext_1_fu_542_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_modp_NTT2_ext_1_fu_542_vla18_address1,
        vla18_ce1 => grp_modp_NTT2_ext_1_fu_542_vla18_ce1,
        vla18_we1 => grp_modp_NTT2_ext_1_fu_542_vla18_we1,
        vla18_d1 => grp_modp_NTT2_ext_1_fu_542_vla18_d1,
        vla18_q1 => vla18_q1,
        a => grp_modp_NTT2_ext_1_fu_542_a,
        stride => ap_const_lv8_1,
        gm => ap_const_lv15_4000,
        logn => ap_const_lv32_A,
        p => ap_const_lv25_1FFD801,
        p0i => ap_const_lv31_79BFD7FF);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg(0) <= '0';
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then 
                                        ap_return_0_preg(0) <= zext_ln4459_fu_1277_p1(0);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg(0) <= '0';
                ap_return_1_preg(1) <= '0';
                ap_return_1_preg(2) <= '0';
                ap_return_1_preg(5) <= '0';
                ap_return_1_preg(6) <= '0';
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then 
                                        ap_return_1_preg(2 downto 0) <= zext_ln4459_1_fu_1285_p1(2 downto 0);                    ap_return_1_preg(6 downto 5) <= zext_ln4459_1_fu_1285_p1(6 downto 5);
                end if; 
            end if;
        end if;
    end process;


    grp_modp_NTT2_ext_1_fu_542_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_NTT2_ext_1_fu_542_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln4435_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_modp_NTT2_ext_1_fu_542_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_NTT2_ext_1_fu_542_ap_ready = ap_const_logic_1)) then 
                    grp_modp_NTT2_ext_1_fu_542_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_solve_NTRU_all_1_fu_478_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_solve_NTRU_all_1_fu_478_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_solve_NTRU_all_1_fu_478_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_solve_NTRU_all_1_fu_478_ap_ready = ap_const_logic_1)) then 
                    grp_solve_NTRU_all_1_fu_478_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    depth_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1)) then
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_0))) then 
                    depth_fu_180 <= ap_const_lv32_9;
                elsif ((ap_const_boolean_1 = ap_condition_1195)) then 
                    depth_fu_180 <= depth_3_fu_614_p2;
                end if;
            end if; 
        end if;
    end process;

    i_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln2385_1_fu_734_p2 = ap_const_lv1_1))) then 
                i_fu_200 <= ap_const_lv6_1E;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0))) then 
                i_fu_200 <= i_9_fu_867_p2;
            end if; 
        end if;
    end process;

    retval_5_ph_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))) then 
                retval_5_ph_reg_414 <= ap_const_lv1_0;
            elsif (((icmp_ln4447_fu_1185_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                retval_5_ph_reg_414 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    retval_5_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (((icmp_ln4447_reg_1525 = ap_const_lv1_1) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))))) then 
                retval_5_reg_454 <= ap_phi_mux_retval_5_ph_phi_fu_418_p4;
            elsif ((((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_1)) or ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln4388_fu_648_p2 = ap_const_lv1_1)) or ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_1)) or ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln4384_fu_638_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln2389_1_fu_801_p2 = ap_const_lv1_1) or (icmp_ln2385_reg_1357 = ap_const_lv1_0))))) then 
                retval_5_reg_454 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    tmp2_0_2_ph_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))) then 
                tmp2_0_2_ph_reg_402(0) <= '0';
                tmp2_0_2_ph_reg_402(2) <= '1';
                tmp2_0_2_ph_reg_402(5) <= '0';
            elsif (((icmp_ln4447_fu_1185_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                tmp2_0_2_ph_reg_402(0) <= '1';
                tmp2_0_2_ph_reg_402(2) <= '0';
                tmp2_0_2_ph_reg_402(5) <= '1';
            end if; 
        end if;
    end process;

    tmp2_0_2_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_1))) then 
                tmp2_0_2_reg_426(0) <= '0';
                tmp2_0_2_reg_426(1) <= '1';
                tmp2_0_2_reg_426(2) <= '0';
                tmp2_0_2_reg_426(5) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (((icmp_ln4447_reg_1525 = ap_const_lv1_1) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))))) then 
                                tmp2_0_2_reg_426(2 downto 0) <= ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4(2 downto 0);                tmp2_0_2_reg_426(5) <= ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4(5);
            elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln4388_fu_648_p2 = ap_const_lv1_1))) then 
                tmp2_0_2_reg_426(0) <= '0';
                tmp2_0_2_reg_426(1) <= '0';
                tmp2_0_2_reg_426(2) <= '1';
                tmp2_0_2_reg_426(5) <= '0';
            elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln4384_fu_638_p2 = ap_const_lv1_1))) then 
                tmp2_0_2_reg_426(0) <= '1';
                tmp2_0_2_reg_426(1) <= '1';
                tmp2_0_2_reg_426(2) <= '0';
                tmp2_0_2_reg_426(5) <= '0';
            elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_1))) then 
                tmp2_0_2_reg_426(0) <= '0';
                tmp2_0_2_reg_426(1) <= '0';
                tmp2_0_2_reg_426(2) <= '0';
                tmp2_0_2_reg_426(5) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln2389_1_fu_801_p2 = ap_const_lv1_1) or (icmp_ln2385_reg_1357 = ap_const_lv1_0)))) then 
                tmp2_0_2_reg_426(0) <= '1';
                tmp2_0_2_reg_426(1) <= '0';
                tmp2_0_2_reg_426(2) <= '1';
                tmp2_0_2_reg_426(5) <= '0';
            end if; 
        end if;
    end process;

    u_034_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln962_fu_905_p2 = ap_const_lv1_1))) then 
                u_034_fu_216 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln4432_fu_973_p2 = ap_const_lv1_0))) then 
                u_034_fu_216 <= u_181_fu_979_p2;
            end if; 
        end if;
    end process;

    u_103_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln2385_fu_667_p2 = ap_const_lv1_1))) then 
                u_103_fu_192 <= ap_const_lv11_0;
            elsif (((icmp_ln2389_1_fu_801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2385_reg_1357 = ap_const_lv1_1))) then 
                u_103_fu_192 <= u_177_reg_1390;
            end if; 
        end if;
    end process;

    u_105_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
                u_105_fu_204 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln962_fu_905_p2 = ap_const_lv1_0))) then 
                u_105_fu_204 <= u_179_fu_911_p2;
            end if; 
        end if;
    end process;

    u_108_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln4432_fu_973_p2 = ap_const_lv1_1))) then 
                u_108_fu_220 <= ap_const_lv11_0;
            elsif (((icmp_ln4435_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                u_108_fu_220 <= u_183_fu_1038_p2;
            end if; 
        end if;
    end process;

    u_110_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln4435_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                u_110_fu_224 <= ap_const_lv11_0;
            elsif (((icmp_ln4452_fu_1267_p2 = ap_const_lv1_1) and (icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))) then 
                u_110_fu_224 <= u_185_reg_1529;
            end if; 
        end if;
    end process;

    u_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln4388_fu_648_p2 = ap_const_lv1_0))) then 
                u_fu_188 <= ap_const_lv11_0;
            elsif (((icmp_ln2389_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                u_fu_188 <= u_175_reg_1361;
            end if; 
        end if;
    end process;

    x1_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
                x1_fu_208 <= ap_const_lv32_27FF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x1_fu_208 <= grp_modp_montymul_fu_514_ap_return;
            end if; 
        end if;
    end process;

    x2_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
                x2_fu_212 <= ap_const_lv32_27FF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x2_fu_212 <= grp_modp_montymul_fu_524_ap_return;
            end if; 
        end if;
    end process;

    z_47_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln2385_1_fu_734_p2 = ap_const_lv1_1))) then 
                z_47_fu_196 <= ap_const_lv32_27FF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                z_47_fu_196 <= z_64_reg_1420;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                a_assign_9_reg_1549 <= grp_modp_montymul_fu_514_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln2385_1_reg_1386 <= icmp_ln2385_1_fu_734_p2;
                u_177_reg_1390 <= u_177_fu_740_p2;
                    zext_ln2385_1_reg_1381(10 downto 0) <= zext_ln2385_1_fu_730_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln2385_reg_1357 <= icmp_ln2385_fu_667_p2;
                u_175_reg_1361 <= u_175_fu_673_p2;
                    zext_ln2385_reg_1352(10 downto 0) <= zext_ln2385_fu_662_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln4354_reg_1306 <= icmp_ln4354_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln4379_reg_1330 <= icmp_ln4379_fu_608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln4384_reg_1337 <= icmp_ln4384_fu_638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln4388_reg_1341 <= icmp_ln4388_fu_648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_ln4447_reg_1525 <= icmp_ln4447_fu_1185_p2;
                u_185_reg_1529 <= u_185_fu_1191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then
                ig_reg_1446 <= grp_modp_montymul_fu_524_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_571 <= grp_solve_NTRU_all_1_fu_478_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (icmp_ln4378_fu_619_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_0)) or ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_0)))) then
                tmp2_0_0_fu_184 <= grp_solve_NTRU_all_1_fu_478_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln4447_fu_1185_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                trunc_ln4450_reg_1534 <= trunc_ln4450_fu_1197_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                u_182_reg_1486 <= u_108_fu_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                w_50_reg_1517 <= w_50_fu_1157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0))) then
                z_64_reg_1420 <= z_64_fu_861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                    zext_ln4432_reg_1466(10 downto 0) <= zext_ln4432_fu_968_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln2385_reg_1352(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln2385_1_reg_1381(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    zext_ln4432_reg_1466(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp2_0_2_ph_reg_402(1) <= '1';
    tmp2_0_2_ph_reg_402(4 downto 3) <= "00";
    tmp2_0_2_reg_426(4 downto 3) <= "00";
    ap_return_0_preg(31 downto 1) <= "0000000000000000000000000000000";
    ap_return_1_preg(4 downto 3) <= "00";
    ap_return_1_preg(31 downto 7) <= "0000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, grp_solve_NTRU_all_1_fu_478_ap_done, ap_CS_fsm_state6, icmp_ln4354_fu_580_p2, icmp_ln4354_reg_1306, ap_CS_fsm_state2, icmp_ln4379_fu_608_p2, icmp_ln4379_reg_1330, icmp_ln4384_fu_638_p2, icmp_ln4384_reg_1337, icmp_ln4388_fu_648_p2, icmp_ln4388_reg_1341, ap_CS_fsm_state8, ap_CS_fsm_state9, icmp_ln2385_fu_667_p2, icmp_ln2385_reg_1357, ap_CS_fsm_state11, icmp_ln2385_1_fu_734_p2, icmp_ln2385_1_reg_1386, ap_CS_fsm_state13, tmp_160_fu_823_p3, ap_CS_fsm_state15, icmp_ln962_fu_905_p2, ap_CS_fsm_state17, icmp_ln4432_fu_973_p2, ap_CS_fsm_state19, icmp_ln4435_fu_1032_p2, icmp_ln4447_fu_1185_p2, icmp_ln4447_reg_1525, ap_CS_fsm_state29, grp_modp_NTT2_ext_1_fu_542_ap_done, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, ap_CS_fsm_state12, icmp_ln2389_1_fu_801_p2, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state10, icmp_ln2389_fu_712_p2, icmp_ln4378_fu_619_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln4354_fu_580_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (icmp_ln4378_fu_619_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (icmp_ln4378_fu_619_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln4384_fu_638_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln4384_fu_638_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln4388_fu_648_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln4388_fu_648_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln2385_fu_667_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln2389_fu_712_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln2385_1_fu_734_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln2389_1_fu_801_p2 = ap_const_lv1_1) or (icmp_ln2385_reg_1357 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln962_fu_905_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln4432_fu_973_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln4435_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state22 => 
                if (((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln4447_fu_1185_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    F_upper_address0_assign_proc : process(zext_ln2385_reg_1352, ap_CS_fsm_state19, ap_CS_fsm_state10, zext_ln4435_fu_1025_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            F_upper_address0 <= zext_ln4435_fu_1025_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            F_upper_address0 <= zext_ln2385_reg_1352(10 - 1 downto 0);
        else 
            F_upper_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    F_upper_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            F_upper_ce0 <= ap_const_logic_1;
        else 
            F_upper_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    F_upper_d0 <= vla18_q0(8 - 1 downto 0);

    F_upper_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln2389_fu_712_p2)
    begin
        if (((icmp_ln2389_fu_712_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            F_upper_we0 <= ap_const_logic_1;
        else 
            F_upper_we0 <= ap_const_logic_0;
        end if; 
    end process;


    G_upper_address0_assign_proc : process(zext_ln2385_1_reg_1381, zext_ln4432_fu_968_p1, ap_CS_fsm_state17, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            G_upper_address0 <= zext_ln4432_fu_968_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            G_upper_address0 <= zext_ln2385_1_reg_1381(10 - 1 downto 0);
        else 
            G_upper_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    G_upper_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            G_upper_ce0 <= ap_const_logic_1;
        else 
            G_upper_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    G_upper_d0 <= vla18_q0(8 - 1 downto 0);

    G_upper_we0_assign_proc : process(icmp_ln2385_reg_1357, ap_CS_fsm_state12, icmp_ln2389_1_fu_801_p2)
    begin
        if (((icmp_ln2389_1_fu_801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln2385_reg_1357 = ap_const_lv1_1))) then 
            G_upper_we0 <= ap_const_logic_1;
        else 
            G_upper_we0 <= ap_const_logic_0;
        end if; 
    end process;


    REV10_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state15, zext_ln962_fu_900_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            REV10_address0 <= zext_ln962_fu_900_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            REV10_address0 <= ap_const_lv10_0;
        else 
            REV10_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    REV10_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            REV10_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            REV10_ce0 <= ap_const_logic_0;
        else 
            REV10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln2389_1_fu_795_p2 <= std_logic_vector(unsigned(w_52_fu_789_p2) + unsigned(ap_const_lv32_7F));
    add_ln2389_fu_706_p2 <= std_logic_vector(unsigned(w_51_fu_700_p2) + unsigned(ap_const_lv32_7F));
    and_ln2311_2_fu_781_p3 <= (tmp_159_fu_773_p3 & ap_const_lv31_0);
    and_ln813_fu_855_p2 <= (xor_ln813_fu_831_p2 and select_ln813_fu_847_p3);
    and_ln_fu_692_p3 <= (tmp_158_fu_684_p3 & ap_const_lv31_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_542_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_542_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_542_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_542_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_542_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_solve_NTRU_all_1_fu_478_ap_done)
    begin
        if ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_solve_NTRU_all_1_fu_478_ap_done)
    begin
        if ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_solve_NTRU_all_1_fu_478_ap_done)
    begin
        if ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_solve_NTRU_all_1_fu_478_ap_done)
    begin
        if ((grp_solve_NTRU_all_1_fu_478_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_1195_assign_proc : process(ap_CS_fsm_state4, icmp_ln4379_fu_608_p2, icmp_ln4378_fu_619_p2)
    begin
                ap_condition_1195 <= ((icmp_ln4378_fu_619_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln4379_fu_608_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1))))))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_retval_5_ph_phi_fu_418_p4_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, retval_5_ph_reg_414)
    begin
        if (((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))) then 
            ap_phi_mux_retval_5_ph_phi_fu_418_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_retval_5_ph_phi_fu_418_p4 <= retval_5_ph_reg_414;
        end if; 
    end process;


    ap_phi_mux_retval_5_phi_fu_458_p12_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, ap_phi_mux_retval_5_ph_phi_fu_418_p4, retval_5_reg_454)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (((icmp_ln4447_reg_1525 = ap_const_lv1_1) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))))) then 
            ap_phi_mux_retval_5_phi_fu_458_p12 <= ap_phi_mux_retval_5_ph_phi_fu_418_p4;
        else 
            ap_phi_mux_retval_5_phi_fu_458_p12 <= retval_5_reg_454;
        end if; 
    end process;


    ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, tmp2_0_2_ph_reg_402, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2)
    begin
        if (((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4 <= ap_const_lv6_6;
        else 
            ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4 <= tmp2_0_2_ph_reg_402;
        end if; 
    end process;


    ap_phi_mux_tmp2_0_2_phi_fu_434_p12_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, tmp2_0_2_reg_426)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (((icmp_ln4447_reg_1525 = ap_const_lv1_1) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0))))) then 
            ap_phi_mux_tmp2_0_2_phi_fu_434_p12 <= ap_phi_mux_tmp2_0_2_ph_phi_fu_406_p4;
        else 
            ap_phi_mux_tmp2_0_2_phi_fu_434_p12 <= tmp2_0_2_reg_426;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, zext_ln4459_fu_1277_p1, ap_return_0_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then 
            ap_return_0 <= zext_ln4459_fu_1277_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, icmp_ln4447_reg_1525, ap_CS_fsm_state31, icmp_ln4452_fu_1267_p2, zext_ln4459_1_fu_1285_p1, ap_return_1_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln4354_reg_1306 = ap_const_lv1_1) or ((icmp_ln4379_reg_1330 = ap_const_lv1_1) or ((icmp_ln4384_reg_1337 = ap_const_lv1_1) or ((icmp_ln4388_reg_1341 = ap_const_lv1_1) or ((icmp_ln2385_reg_1357 = ap_const_lv1_0) or ((icmp_ln2385_1_reg_1386 = ap_const_lv1_0) or ((icmp_ln4452_fu_1267_p2 = ap_const_lv1_0) or (icmp_ln4447_reg_1525 = ap_const_lv1_1)))))))))) then 
            ap_return_1 <= zext_ln4459_1_fu_1285_p1;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    depth_3_fu_614_p2 <= std_logic_vector(unsigned(depth_fu_180) + unsigned(ap_const_lv32_FFFFFFFF));

    f_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state19, grp_solve_NTRU_all_1_fu_478_f_address0, zext_ln4435_fu_1025_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            f_address0 <= zext_ln4435_fu_1025_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            f_address0 <= grp_solve_NTRU_all_1_fu_478_f_address0;
        else 
            f_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    f_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state19, grp_solve_NTRU_all_1_fu_478_f_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            f_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            f_ce0 <= grp_solve_NTRU_all_1_fu_478_f_ce0;
        else 
            f_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state19, grp_solve_NTRU_all_1_fu_478_g_address0, zext_ln4435_fu_1025_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            g_address0 <= zext_ln4435_fu_1025_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            g_address0 <= grp_solve_NTRU_all_1_fu_478_g_address0;
        else 
            g_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    g_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state19, grp_solve_NTRU_all_1_fu_478_g_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            g_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            g_ce0 <= grp_solve_NTRU_all_1_fu_478_g_ce0;
        else 
            g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_modp_NTT2_ext_1_fu_542_a_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_modp_NTT2_ext_1_fu_542_a <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_modp_NTT2_ext_1_fu_542_a <= ap_const_lv15_3000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_modp_NTT2_ext_1_fu_542_a <= ap_const_lv15_2000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_modp_NTT2_ext_1_fu_542_a <= ap_const_lv15_1000;
        else 
            grp_modp_NTT2_ext_1_fu_542_a <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_NTT2_ext_1_fu_542_ap_start <= grp_modp_NTT2_ext_1_fu_542_ap_start_reg;

    grp_modp_montymul_fu_514_a_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, ap_CS_fsm_state13, tmp_160_fu_823_p3, icmp_ln4447_reg_1525, ap_CS_fsm_state30, vla18_q1, ap_CS_fsm_state31, ap_CS_fsm_state16, z_47_fu_196, x1_fu_208)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_514_a <= vla18_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_514_a <= x1_fu_208;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_514_a <= z_47_fu_196;
        else 
            grp_modp_montymul_fu_514_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_514_b_assign_proc : process(icmp_ln4354_reg_1306, icmp_ln4379_reg_1330, icmp_ln4384_reg_1337, icmp_ln4388_reg_1341, icmp_ln2385_reg_1357, icmp_ln2385_1_reg_1386, ap_CS_fsm_state13, tmp_160_fu_823_p3, icmp_ln4447_reg_1525, ap_CS_fsm_state30, vla18_q0, ap_CS_fsm_state31, ap_CS_fsm_state16, z_47_fu_196)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln4447_reg_1525 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31) and (icmp_ln2385_1_reg_1386 = ap_const_lv1_1) and (icmp_ln2385_reg_1357 = ap_const_lv1_1) and (icmp_ln4388_reg_1341 = ap_const_lv1_0) and (icmp_ln4384_reg_1337 = ap_const_lv1_0) and (icmp_ln4379_reg_1330 = ap_const_lv1_0) and (icmp_ln4354_reg_1306 = ap_const_lv1_0)))) then 
            grp_modp_montymul_fu_514_b <= vla18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_514_b <= ap_const_lv32_75596399;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_514_b <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_514_b <= z_47_fu_196;
        else 
            grp_modp_montymul_fu_514_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_524_a_assign_proc : process(ap_CS_fsm_state13, tmp_160_fu_823_p3, grp_modp_montymul_fu_514_ap_return, ap_CS_fsm_state16, x2_fu_212)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_524_a <= x2_fu_212;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_524_a <= ap_const_lv32_63FB001;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_524_a <= grp_modp_montymul_fu_514_ap_return;
        else 
            grp_modp_montymul_fu_524_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_524_b_assign_proc : process(ap_CS_fsm_state13, tmp_160_fu_823_p3, ig_reg_1446, grp_modp_montymul_fu_514_ap_return, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_524_b <= ig_reg_1446;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_1))) then 
            grp_modp_montymul_fu_524_b <= grp_modp_montymul_fu_514_ap_return;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_160_fu_823_p3 = ap_const_lv1_0))) then 
            grp_modp_montymul_fu_524_b <= ap_const_lv32_75596399;
        else 
            grp_modp_montymul_fu_524_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_solve_NTRU_all_1_fu_478_ap_start <= grp_solve_NTRU_all_1_fu_478_ap_start_reg;

    grp_solve_NTRU_all_1_fu_478_depth_offset_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, depth_fu_180)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_solve_NTRU_all_1_fu_478_depth_offset <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_solve_NTRU_all_1_fu_478_depth_offset <= ap_const_lv32_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_solve_NTRU_all_1_fu_478_depth_offset <= depth_fu_180;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_solve_NTRU_all_1_fu_478_depth_offset <= ap_const_lv32_A;
        else 
            grp_solve_NTRU_all_1_fu_478_depth_offset <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_solve_NTRU_all_1_fu_478_p_read_assign_proc : process(p_read, reg_571, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, tmp2_0_0_fu_184)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_solve_NTRU_all_1_fu_478_p_read <= reg_571;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_solve_NTRU_all_1_fu_478_p_read <= tmp2_0_0_fu_184;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_solve_NTRU_all_1_fu_478_p_read <= p_read;
        else 
            grp_solve_NTRU_all_1_fu_478_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_9_fu_867_p0 <= i_fu_200;
    i_9_fu_867_p2 <= std_logic_vector(signed(i_9_fu_867_p0) + signed(ap_const_lv6_3F));
    icmp_ln2385_1_fu_734_p2 <= "1" when (u_103_fu_192 = ap_const_lv11_400) else "0";
    icmp_ln2385_fu_667_p2 <= "1" when (u_fu_188 = ap_const_lv11_400) else "0";
    icmp_ln2389_1_fu_801_p2 <= "1" when (unsigned(add_ln2389_1_fu_795_p2) > unsigned(ap_const_lv32_FE)) else "0";
    icmp_ln2389_fu_712_p2 <= "1" when (unsigned(add_ln2389_fu_706_p2) > unsigned(ap_const_lv32_FE)) else "0";
    icmp_ln4354_fu_580_p2 <= "1" when (grp_solve_NTRU_all_1_fu_478_ap_return_0 = ap_const_lv32_0) else "0";
    icmp_ln4378_fu_619_p2 <= "1" when (unsigned(depth_fu_180) > unsigned(ap_const_lv32_2)) else "0";
    icmp_ln4379_fu_608_p2 <= "1" when (grp_solve_NTRU_all_1_fu_478_ap_return_0 = ap_const_lv32_0) else "0";
    icmp_ln4384_fu_638_p2 <= "1" when (grp_solve_NTRU_all_1_fu_478_ap_return_0 = ap_const_lv32_0) else "0";
    icmp_ln4388_fu_648_p2 <= "1" when (grp_solve_NTRU_all_1_fu_478_ap_return_0 = ap_const_lv32_0) else "0";
    icmp_ln4432_fu_973_p2 <= "1" when (u_034_fu_216 = ap_const_lv11_400) else "0";
    icmp_ln4435_fu_1032_p2 <= "1" when (u_108_fu_220 = ap_const_lv11_400) else "0";
    icmp_ln4447_fu_1185_p2 <= "1" when (u_110_fu_224 = ap_const_lv11_400) else "0";
    icmp_ln4452_fu_1267_p2 <= "1" when (z_65_fu_1261_p2 = ap_const_lv32_723F844C) else "0";
    icmp_ln962_fu_905_p2 <= "1" when (u_105_fu_204 = ap_const_lv11_400) else "0";
    lshr_ln813_fu_837_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_7FFFD7FF),to_integer(unsigned('0' & sext_ln808_fu_819_p1(31-1 downto 0)))));
    or_ln4438_fu_1163_p2 <= (u_182_reg_1486 or ap_const_lv11_400);
    or_ln4451_fu_1226_p2 <= (u_110_fu_224 or ap_const_lv11_400);
    select_ln635_15_fu_1066_p3 <= 
        ap_const_lv32_7FFFD801 when (tmp_162_fu_1058_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln635_16_fu_1109_p3 <= 
        ap_const_lv32_7FFFD801 when (tmp_163_fu_1101_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln635_17_fu_1149_p3 <= 
        ap_const_lv32_7FFFD801 when (tmp_164_fu_1141_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln635_fu_1007_p3 <= 
        ap_const_lv32_7FFFD801 when (tmp_161_fu_999_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln697_fu_1253_p3 <= 
        ap_const_lv32_7FFFD801 when (tmp_165_fu_1245_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln813_fu_847_p3 <= 
        ap_const_lv32_FFFFFFFF when (trunc_ln813_fu_843_p1(0) = '1') else 
        ap_const_lv32_0;
    sext_ln4433_fu_995_p0 <= G_upper_q0;
        sext_ln4433_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln4433_fu_995_p0),32));

    sext_ln4436_fu_1054_p0 <= f_q0;
        sext_ln4436_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln4436_fu_1054_p0),32));

    sext_ln4437_fu_1097_p0 <= g_q0;
        sext_ln4437_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln4437_fu_1097_p0),32));

        sext_ln4438_1_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln4438_fu_1163_p2),12));

    sext_ln4438_fu_1137_p0 <= F_upper_q0;
        sext_ln4438_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln4438_fu_1137_p0),32));

        sext_ln4451_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln4451_fu_1226_p2),12));

        sext_ln4459_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_tmp2_0_2_phi_fu_434_p12),7));

    sext_ln808_fu_819_p0 <= i_fu_200;
        sext_ln808_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln808_fu_819_p0),32));

    sub_ln697_fu_1240_p2 <= std_logic_vector(unsigned(a_assign_9_reg_1549) - unsigned(grp_modp_montymul_fu_514_ap_return));
    tmp_158_fu_684_p3 <= vla18_q0(30 downto 30);
    tmp_159_fu_773_p3 <= vla18_q0(30 downto 30);
    tmp_160_fu_823_p1 <= i_fu_200;
    tmp_160_fu_823_p3 <= tmp_160_fu_823_p1(5 downto 5);
    tmp_161_fu_999_p1 <= G_upper_q0;
    tmp_161_fu_999_p3 <= tmp_161_fu_999_p1(7 downto 7);
    tmp_162_fu_1058_p1 <= f_q0;
    tmp_162_fu_1058_p3 <= tmp_162_fu_1058_p1(7 downto 7);
    tmp_163_fu_1101_p1 <= g_q0;
    tmp_163_fu_1101_p3 <= tmp_163_fu_1101_p1(7 downto 7);
    tmp_164_fu_1141_p1 <= F_upper_q0;
    tmp_164_fu_1141_p3 <= tmp_164_fu_1141_p1(7 downto 7);
    tmp_165_fu_1245_p3 <= sub_ln697_fu_1240_p2(31 downto 31);
    trunc_ln2388_fu_746_p1 <= u_103_fu_192(10 - 1 downto 0);
    trunc_ln4436_fu_1081_p1 <= u_182_reg_1486(10 - 1 downto 0);
    trunc_ln4450_fu_1197_p1 <= u_110_fu_224(10 - 1 downto 0);
    trunc_ln813_fu_843_p1 <= lshr_ln813_fu_837_p2(1 - 1 downto 0);
    u_175_fu_673_p2 <= std_logic_vector(unsigned(u_fu_188) + unsigned(ap_const_lv11_1));
    u_177_fu_740_p2 <= std_logic_vector(unsigned(u_103_fu_192) + unsigned(ap_const_lv11_1));
    u_179_fu_911_p2 <= std_logic_vector(unsigned(u_105_fu_204) + unsigned(ap_const_lv11_1));
    u_181_fu_979_p2 <= std_logic_vector(unsigned(u_034_fu_216) + unsigned(ap_const_lv11_1));
    u_183_fu_1038_p2 <= std_logic_vector(unsigned(u_108_fu_220) + unsigned(ap_const_lv11_1));
    u_185_fu_1191_p2 <= std_logic_vector(unsigned(u_110_fu_224) + unsigned(ap_const_lv11_1));

    vla18_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, zext_ln2385_fu_662_p1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state30, grp_solve_NTRU_all_1_fu_478_vla18_address0, grp_modp_NTT2_ext_1_fu_542_vla18_address0, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, zext_ln2310_fu_758_p1, zext_ln966_fu_937_p1, zext_ln4436_fu_1092_p1, zext_ln4447_fu_1180_p1, zext_ln4451_1_fu_1235_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            vla18_address0 <= zext_ln4451_1_fu_1235_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            vla18_address0 <= zext_ln4447_fu_1180_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_address0 <= zext_ln4436_fu_1092_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla18_address0 <= zext_ln966_fu_937_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            vla18_address0 <= zext_ln2310_fu_758_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            vla18_address0 <= zext_ln2385_fu_662_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_address0 <= grp_modp_NTT2_ext_1_fu_542_vla18_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_address0 <= grp_solve_NTRU_all_1_fu_478_vla18_address0;
        else 
            vla18_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, zext_ln4432_reg_1466, ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state30, grp_solve_NTRU_all_1_fu_478_vla18_address1, grp_modp_NTT2_ext_1_fu_542_vla18_address1, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, zext_ln967_fu_950_p1, ap_CS_fsm_state18, zext_ln4437_fu_1132_p1, zext_ln4438_fu_1172_p1, ap_CS_fsm_state21, zext_ln4450_fu_1209_p1, zext_ln4451_fu_1221_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            vla18_address1 <= zext_ln4451_fu_1221_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            vla18_address1 <= zext_ln4450_fu_1209_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla18_address1 <= zext_ln4438_fu_1172_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_address1 <= zext_ln4437_fu_1132_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla18_address1 <= zext_ln4432_reg_1466(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla18_address1 <= zext_ln967_fu_950_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_address1 <= grp_modp_NTT2_ext_1_fu_542_vla18_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_address1 <= grp_solve_NTRU_all_1_fu_478_vla18_address1;
        else 
            vla18_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state30, grp_solve_NTRU_all_1_fu_478_vla18_ce0, grp_modp_NTT2_ext_1_fu_542_vla18_ce0, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            vla18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_ce0 <= grp_modp_NTT2_ext_1_fu_542_vla18_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_ce0 <= grp_solve_NTRU_all_1_fu_478_vla18_ce0;
        else 
            vla18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state30, grp_solve_NTRU_all_1_fu_478_vla18_ce1, grp_modp_NTT2_ext_1_fu_542_vla18_ce1, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state18, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            vla18_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_ce1 <= grp_modp_NTT2_ext_1_fu_542_vla18_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_ce1 <= grp_solve_NTRU_all_1_fu_478_vla18_ce1;
        else 
            vla18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state20, grp_solve_NTRU_all_1_fu_478_vla18_d0, grp_modp_NTT2_ext_1_fu_542_vla18_d0, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, x2_fu_212, w_46_fu_1074_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_d0 <= w_46_fu_1074_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla18_d0 <= x2_fu_212;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_d0 <= grp_modp_NTT2_ext_1_fu_542_vla18_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_d0 <= grp_solve_NTRU_all_1_fu_478_vla18_d0;
        else 
            vla18_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, w_50_reg_1517, ap_CS_fsm_state20, grp_solve_NTRU_all_1_fu_478_vla18_d1, grp_modp_NTT2_ext_1_fu_542_vla18_d1, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state18, ap_CS_fsm_state21, x1_fu_208, w_44_fu_1015_p2, w_48_fu_1117_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            vla18_d1 <= w_50_reg_1517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_d1 <= w_48_fu_1117_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla18_d1 <= w_44_fu_1015_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            vla18_d1 <= x1_fu_208;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_d1 <= grp_modp_NTT2_ext_1_fu_542_vla18_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_d1 <= grp_solve_NTRU_all_1_fu_478_vla18_d1;
        else 
            vla18_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state20, grp_solve_NTRU_all_1_fu_478_vla18_we0, grp_modp_NTT2_ext_1_fu_542_vla18_we0, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            vla18_we0 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_we0 <= grp_modp_NTT2_ext_1_fu_542_vla18_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_we0 <= grp_solve_NTRU_all_1_fu_478_vla18_we0;
        else 
            vla18_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla18_we1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state20, grp_solve_NTRU_all_1_fu_478_vla18_we1, grp_modp_NTT2_ext_1_fu_542_vla18_we1, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state18, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            vla18_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_we1 <= grp_modp_NTT2_ext_1_fu_542_vla18_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            vla18_we1 <= grp_solve_NTRU_all_1_fu_478_vla18_we1;
        else 
            vla18_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    w_44_fu_1015_p2 <= std_logic_vector(unsigned(select_ln635_fu_1007_p3) + unsigned(sext_ln4433_fu_995_p1));
    w_46_fu_1074_p2 <= std_logic_vector(unsigned(select_ln635_15_fu_1066_p3) + unsigned(sext_ln4436_fu_1054_p1));
    w_48_fu_1117_p2 <= std_logic_vector(unsigned(select_ln635_16_fu_1109_p3) + unsigned(sext_ln4437_fu_1097_p1));
    w_50_fu_1157_p2 <= std_logic_vector(unsigned(select_ln635_17_fu_1149_p3) + unsigned(sext_ln4438_fu_1137_p1));
    w_51_fu_700_p2 <= (vla18_q0 or and_ln_fu_692_p3);
    w_52_fu_789_p2 <= (vla18_q0 or and_ln2311_2_fu_781_p3);
    xor_ln813_fu_831_p2 <= (grp_modp_montymul_fu_524_ap_return xor grp_modp_montymul_fu_514_ap_return);
    z_64_fu_861_p2 <= (grp_modp_montymul_fu_514_ap_return xor and_ln813_fu_855_p2);
    z_65_fu_1261_p2 <= std_logic_vector(unsigned(select_ln697_fu_1253_p3) + unsigned(sub_ln697_fu_1240_p2));
    zext_ln2310_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln_fu_750_p3),64));
    zext_ln2385_1_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_103_fu_192),64));
    zext_ln2385_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_fu_188),64));
    zext_ln4432_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_034_fu_216),64));
    zext_ln4435_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_108_fu_220),64));
    zext_ln4436_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln46_fu_1084_p3),64));
    zext_ln4437_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln47_fu_1124_p3),64));
    zext_ln4438_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln4438_1_fu_1168_p1),64));
    zext_ln4447_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_110_fu_224),64));
    zext_ln4450_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln48_fu_1201_p3),64));
    zext_ln4451_1_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln4451_fu_1231_p1),64));
    zext_ln4451_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln49_fu_1214_p3),64));
    zext_ln4459_1_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln4459_fu_1281_p1),32));
    zext_ln4459_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_retval_5_phi_fu_458_p12),32));
    zext_ln46_fu_1084_p3 <= (ap_const_lv1_1 & trunc_ln4436_fu_1081_p1);
    zext_ln47_fu_1124_p3 <= (ap_const_lv2_2 & trunc_ln4436_fu_1081_p1);
    zext_ln48_fu_1201_p3 <= (ap_const_lv1_1 & trunc_ln4450_fu_1197_p1);
    zext_ln49_fu_1214_p3 <= (ap_const_lv2_2 & trunc_ln4450_reg_1534);
    zext_ln962_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_105_fu_204),64));
    zext_ln966_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(REV10_q0),64));
    zext_ln967_cast_fu_942_p3 <= (ap_const_lv3_4 & REV10_q0);
    zext_ln967_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln967_cast_fu_942_p3),64));
    zext_ln_fu_750_p3 <= (ap_const_lv1_1 & trunc_ln2388_fu_746_p1);
end behav;
