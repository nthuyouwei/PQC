-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity keygen_fpr_rint is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of keygen_fpr_rint is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_4330000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100001100110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_C330000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1100001100110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_10000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_64_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal data_V_fu_82_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_fu_104_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_108_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_fu_94_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_fu_122_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_fu_126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_fu_140_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_132_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_146_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_150_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_fu_158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_118_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln1488_fu_162_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal r_V_fu_166_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal tmp_fu_178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_172_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln818_fu_186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_190_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_fu_200_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_1_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_235_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_1_fu_239_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_1_fu_225_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_4_fu_253_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_6_fu_257_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_1_fu_271_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_1_fu_263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_1_fu_277_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_1_fu_281_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_1_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_249_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln1488_1_fu_293_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal r_V_2_fu_297_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal tmp_216_fu_309_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_303_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln818_1_fu_317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_174_fu_321_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_1_fu_331_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_217_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_4_fu_339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_70_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_2_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_5_fu_375_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_2_fu_379_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_2_fu_365_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_5_fu_393_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_7_fu_397_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_2_fu_411_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_2_fu_403_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_2_fu_417_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_2_fu_421_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_2_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_389_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln1488_2_fu_433_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal r_V_4_fu_437_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal tmp_220_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_5_fu_443_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln818_2_fu_457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_175_fu_461_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_2_fu_471_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_357_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_9_fu_479_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_V_13_fu_485_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_76_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_3_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_7_fu_521_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_3_fu_525_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_3_fu_511_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_6_fu_539_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_8_fu_543_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_3_fu_557_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_3_fu_549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_3_fu_563_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_3_fu_567_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_3_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_535_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln1488_3_fu_579_p1 : STD_LOGIC_VECTOR (168 downto 0);
    signal r_V_6_fu_583_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal tmp_224_fu_595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_7_fu_589_p2 : STD_LOGIC_VECTOR (168 downto 0);
    signal zext_ln818_3_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_176_fu_607_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_3_fu_617_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_6_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_10_fu_625_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_V_fu_631_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_V_2_fu_208_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_225_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_226_fu_653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_12_fu_345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ub_fu_669_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln99_fu_679_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln99_fu_685_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln99_1_fu_689_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal m_fu_661_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rn_fu_639_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal rp_fu_493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_14_fu_695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln108_fu_703_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln108_1_fu_711_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component keygen_dadd_64ns_64ns_64_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    dadd_64ns_64ns_64_2_full_dsp_1_U233 : component keygen_dadd_64ns_64ns_64_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x,
        din1 => ap_const_lv64_BFF0000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_64_p2);

    dadd_64ns_64ns_64_2_full_dsp_1_U234 : component keygen_dadd_64ns_64ns_64_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x,
        din1 => ap_const_lv64_4330000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_70_p2);

    dadd_64ns_64ns_64_2_full_dsp_1_U235 : component keygen_dadd_64ns_64ns_64_2_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x,
        din1 => ap_const_lv64_C330000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_76_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_preg <= select_ln108_1_fu_711_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln515_6_fu_257_p2 <= std_logic_vector(unsigned(zext_ln515_4_fu_253_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_7_fu_397_p2 <= std_logic_vector(unsigned(zext_ln515_5_fu_393_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_8_fu_543_p2 <= std_logic_vector(unsigned(zext_ln515_6_fu_539_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_fu_126_p2 <= std_logic_vector(unsigned(zext_ln515_fu_122_p1) + unsigned(ap_const_lv12_C01));
    add_ln99_1_fu_689_p2 <= std_logic_vector(unsigned(zext_ln99_fu_685_p1) + unsigned(ap_const_lv13_1FFE));
    add_ln99_fu_679_p2 <= std_logic_vector(unsigned(ub_fu_669_p4) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state2, select_ln108_1_fu_711_p3, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return <= select_ln108_1_fu_711_p3;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    data_V_1_fu_214_p1 <= x;
    data_V_2_fu_353_p1 <= grp_fu_70_p2;
    data_V_3_fu_499_p1 <= grp_fu_76_p2;
    data_V_fu_82_p1 <= grp_fu_64_p2;
    isNeg_1_fu_263_p3 <= add_ln515_6_fu_257_p2(11 downto 11);
    isNeg_2_fu_403_p3 <= add_ln515_7_fu_397_p2(11 downto 11);
    isNeg_3_fu_549_p3 <= add_ln515_8_fu_543_p2(11 downto 11);
    isNeg_fu_132_p3 <= add_ln515_fu_126_p2(11 downto 11);
    m_14_fu_695_p3 <= add_ln99_1_fu_689_p2(12 downto 12);
    m_fu_661_p3 <= 
        tmp_225_fu_645_p3 when (p_Result_s_fu_86_p3(0) = '1') else 
        tmp_226_fu_653_p3;
    mantissa_1_fu_239_p4 <= ((ap_const_lv1_1 & p_Result_3_fu_235_p1) & ap_const_lv1_0);
    mantissa_2_fu_379_p4 <= ((ap_const_lv1_1 & p_Result_5_fu_375_p1) & ap_const_lv1_0);
    mantissa_3_fu_525_p4 <= ((ap_const_lv1_1 & p_Result_7_fu_521_p1) & ap_const_lv1_0);
    mantissa_fu_108_p4 <= ((ap_const_lv1_1 & p_Result_1_fu_104_p1) & ap_const_lv1_0);
    p_Result_1_fu_104_p1 <= data_V_fu_82_p1(52 - 1 downto 0);
    p_Result_2_fu_217_p3 <= data_V_1_fu_214_p1(63 downto 63);
    p_Result_3_fu_235_p1 <= data_V_1_fu_214_p1(52 - 1 downto 0);
    p_Result_4_fu_357_p3 <= data_V_2_fu_353_p1(63 downto 63);
    p_Result_5_fu_375_p1 <= data_V_2_fu_353_p1(52 - 1 downto 0);
    p_Result_6_fu_503_p3 <= data_V_3_fu_499_p1(63 downto 63);
    p_Result_7_fu_521_p1 <= data_V_3_fu_499_p1(52 - 1 downto 0);
    p_Result_s_fu_86_p3 <= data_V_fu_82_p1(63 downto 63);
    r_V_1_fu_172_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_118_p1),to_integer(unsigned('0' & zext_ln1488_fu_162_p1(31-1 downto 0)))));
    r_V_2_fu_297_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_249_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_293_p1(31-1 downto 0)))));
    r_V_3_fu_303_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_249_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_293_p1(31-1 downto 0)))));
    r_V_4_fu_437_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_389_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_433_p1(31-1 downto 0)))));
    r_V_5_fu_443_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_389_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_433_p1(31-1 downto 0)))));
    r_V_6_fu_583_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_535_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_579_p1(31-1 downto 0)))));
    r_V_7_fu_589_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_535_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_579_p1(31-1 downto 0)))));
    r_V_fu_166_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_118_p1),to_integer(unsigned('0' & zext_ln1488_fu_162_p1(31-1 downto 0)))));
    result_V_10_fu_625_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(val_3_fu_617_p3));
    result_V_12_fu_345_p3 <= 
        result_V_4_fu_339_p2 when (p_Result_2_fu_217_p3(0) = '1') else 
        val_1_fu_331_p3;
    result_V_13_fu_485_p3 <= 
        result_V_9_fu_479_p2 when (p_Result_4_fu_357_p3(0) = '1') else 
        val_2_fu_471_p3;
    result_V_2_fu_208_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(val_fu_200_p3));
    result_V_4_fu_339_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(val_1_fu_331_p3));
    result_V_9_fu_479_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(val_2_fu_471_p3));
    result_V_fu_631_p3 <= 
        result_V_10_fu_625_p2 when (p_Result_6_fu_503_p3(0) = '1') else 
        val_3_fu_617_p3;
    rn_fu_639_p2 <= std_logic_vector(unsigned(result_V_fu_631_p3) + unsigned(ap_const_lv64_10000000000000));
    rp_fu_493_p2 <= std_logic_vector(unsigned(result_V_13_fu_485_p3) + unsigned(ap_const_lv64_FFF0000000000000));
    select_ln108_1_fu_711_p3 <= 
        select_ln108_fu_703_p3 when (m_14_fu_695_p3(0) = '1') else 
        result_V_12_fu_345_p3;
    select_ln108_fu_703_p3 <= 
        rn_fu_639_p2 when (m_fu_661_p3(0) = '1') else 
        rp_fu_493_p2;
        sext_ln1488_1_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_281_p3),32));

        sext_ln1488_2_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_421_p3),32));

        sext_ln1488_3_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_fu_567_p3),32));

        sext_ln1488_fu_158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_150_p3),32));

        sext_ln1512_1_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_271_p2),12));

        sext_ln1512_2_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_2_fu_411_p2),12));

        sext_ln1512_3_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_3_fu_557_p2),12));

        sext_ln1512_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_140_p2),12));

    sub_ln1512_1_fu_271_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_1_fu_225_p4));
    sub_ln1512_2_fu_411_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_2_fu_365_p4));
    sub_ln1512_3_fu_557_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_3_fu_511_p4));
    sub_ln1512_fu_140_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_fu_94_p4));
    tmp_174_fu_321_p4 <= r_V_3_fu_303_p2(116 downto 53);
    tmp_175_fu_461_p4 <= r_V_5_fu_443_p2(116 downto 53);
    tmp_176_fu_607_p4 <= r_V_7_fu_589_p2(116 downto 53);
    tmp_216_fu_309_p3 <= r_V_2_fu_297_p2(53 downto 53);
    tmp_220_fu_449_p3 <= r_V_4_fu_437_p2(53 downto 53);
    tmp_224_fu_595_p3 <= r_V_6_fu_583_p2(53 downto 53);
    tmp_225_fu_645_p3 <= result_V_2_fu_208_p2(63 downto 63);
    tmp_226_fu_653_p3 <= val_fu_200_p3(63 downto 63);
    tmp_fu_178_p3 <= r_V_fu_166_p2(53 downto 53);
    tmp_s_fu_190_p4 <= r_V_1_fu_172_p2(116 downto 53);
    ub_fu_669_p4 <= result_V_12_fu_345_p3(63 downto 52);
    ush_1_fu_281_p3 <= 
        sext_ln1512_1_fu_277_p1 when (isNeg_1_fu_263_p3(0) = '1') else 
        add_ln515_6_fu_257_p2;
    ush_2_fu_421_p3 <= 
        sext_ln1512_2_fu_417_p1 when (isNeg_2_fu_403_p3(0) = '1') else 
        add_ln515_7_fu_397_p2;
    ush_3_fu_567_p3 <= 
        sext_ln1512_3_fu_563_p1 when (isNeg_3_fu_549_p3(0) = '1') else 
        add_ln515_8_fu_543_p2;
    ush_fu_150_p3 <= 
        sext_ln1512_fu_146_p1 when (isNeg_fu_132_p3(0) = '1') else 
        add_ln515_fu_126_p2;
    val_1_fu_331_p3 <= 
        zext_ln818_1_fu_317_p1 when (isNeg_1_fu_263_p3(0) = '1') else 
        tmp_174_fu_321_p4;
    val_2_fu_471_p3 <= 
        zext_ln818_2_fu_457_p1 when (isNeg_2_fu_403_p3(0) = '1') else 
        tmp_175_fu_461_p4;
    val_3_fu_617_p3 <= 
        zext_ln818_3_fu_603_p1 when (isNeg_3_fu_549_p3(0) = '1') else 
        tmp_176_fu_607_p4;
    val_fu_200_p3 <= 
        zext_ln818_fu_186_p1 when (isNeg_fu_132_p3(0) = '1') else 
        tmp_s_fu_190_p4;
    xs_exp_V_1_fu_225_p4 <= data_V_1_fu_214_p1(62 downto 52);
    xs_exp_V_2_fu_365_p4 <= data_V_2_fu_353_p1(62 downto 52);
    xs_exp_V_3_fu_511_p4 <= data_V_3_fu_499_p1(62 downto 52);
    xs_exp_V_fu_94_p4 <= data_V_fu_82_p1(62 downto 52);
    zext_ln1488_1_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_1_fu_289_p1),169));
    zext_ln1488_2_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_2_fu_429_p1),169));
    zext_ln1488_3_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_3_fu_575_p1),169));
    zext_ln1488_fu_162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_158_p1),169));
    zext_ln15_1_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_239_p4),169));
    zext_ln15_2_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_379_p4),169));
    zext_ln15_3_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_525_p4),169));
    zext_ln15_fu_118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_108_p4),169));
    zext_ln515_4_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_1_fu_225_p4),12));
    zext_ln515_5_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_2_fu_365_p4),12));
    zext_ln515_6_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_3_fu_511_p4),12));
    zext_ln515_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_94_p4),12));
    zext_ln818_1_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_216_fu_309_p3),64));
    zext_ln818_2_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_220_fu_449_p3),64));
    zext_ln818_3_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_224_fu_595_p3),64));
    zext_ln818_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_178_p3),64));
    zext_ln99_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln99_fu_679_p2),13));
end behav;
