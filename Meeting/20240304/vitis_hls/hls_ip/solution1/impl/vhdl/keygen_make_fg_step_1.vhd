-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity keygen_make_fg_step_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce0 : OUT STD_LOGIC;
    vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce1 : OUT STD_LOGIC;
    vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    data : IN STD_LOGIC_VECTOR (63 downto 0);
    logn : IN STD_LOGIC_VECTOR (31 downto 0);
    depth : IN STD_LOGIC_VECTOR (3 downto 0);
    in_ntt : IN STD_LOGIC_VECTOR (0 downto 0);
    out_ntt : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_modp_montymul_fu_255_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_255_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_255_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_255_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_255_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_255_p_ready : IN STD_LOGIC;
    grp_modp_montymul_fu_265_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_265_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_265_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_265_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_265_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_modp_montymul_fu_265_p_ready : IN STD_LOGIC );
end;


architecture behav of keygen_make_fg_step_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (59 downto 0) := "000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (59 downto 0) := "000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (59 downto 0) := "000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (59 downto 0) := "000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (59 downto 0) := "000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (59 downto 0) := "000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (59 downto 0) := "000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (59 downto 0) := "000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (59 downto 0) := "000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (59 downto 0) := "001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (59 downto 0) := "010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (59 downto 0) := "100000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal MAX_BL_SMALL_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal MAX_BL_SMALL_ce0 : STD_LOGIC;
    signal MAX_BL_SMALL_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal MAX_BL_SMALL_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal MAX_BL_SMALL_ce1 : STD_LOGIC;
    signal MAX_BL_SMALL_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal PRIMES_p_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal PRIMES_p_ce0 : STD_LOGIC;
    signal PRIMES_p_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal PRIMES_g_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal PRIMES_g_ce0 : STD_LOGIC;
    signal PRIMES_g_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal reg_881 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_888 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal out_ntt_read_read_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_fu_922_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_reg_3383 : STD_LOGIC_VECTOR (14 downto 0);
    signal n_fu_930_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_reg_3417 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_3426 : STD_LOGIC_VECTOR (62 downto 0);
    signal u_204_reg_3434 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1510_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1510_reg_3442 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1510_1_fu_960_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1510_1_reg_3450 : STD_LOGIC_VECTOR (8 downto 0);
    signal tlen_reg_3457 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln2840_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2840_reg_3462 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2840_1_fu_968_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2840_1_reg_3470 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2858_fu_982_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2858_reg_3475 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2841_fu_1012_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2841_reg_3481 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln2859_2_fu_1024_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln2859_2_reg_3488 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln2859_1_fu_1032_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2859_1_reg_3493 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2859_fu_1048_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2859_reg_3499 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2859_1_fu_1054_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2859_1_reg_3504 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_61_fu_1068_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_61_reg_3510 : STD_LOGIC_VECTOR (14 downto 0);
    signal gm_fu_1088_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal gm_reg_3515 : STD_LOGIC_VECTOR (14 downto 0);
    signal igm_fu_1112_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal igm_reg_3522 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2862_fu_1118_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2862_reg_3528 : STD_LOGIC_VECTOR (12 downto 0);
    signal t1_fu_1132_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal t1_reg_3544 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln2863_fu_1142_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2863_reg_3549 : STD_LOGIC_VECTOR (63 downto 0);
    signal compare_src_dst_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_src_dst_reg_3554 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_n_to_0_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compare_n_to_0_reg_3558 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_347_fu_1160_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_347_reg_3569 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_fu_1173_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_reg_3581 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal empty_351_fu_1215_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_351_reg_3591 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_169_reg_3597 : STD_LOGIC_VECTOR (12 downto 0);
    signal index_increment_fu_1235_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_increment_reg_3602 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_357_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_357_reg_3607 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_1358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_3621 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_346_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal empty_340_fu_1405_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_340_reg_3634 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_166_reg_3640 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2869_1_fu_1434_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2869_1_reg_3648 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal u_211_fu_1443_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_211_reg_3659 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2869_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2871_fu_1453_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln2871_reg_3681 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln2871_fu_1457_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln2871_reg_3686 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_61_fu_1483_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_61_reg_3694 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1538_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_reg_3700 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln2871_fu_1544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2871_reg_3708 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2871_1_fu_1548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2871_1_reg_3714 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2872_fu_1613_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_reg_3720 : STD_LOGIC_VECTOR (12 downto 0);
    signal v_39_fu_1622_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_39_reg_3729 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln2880_fu_1617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2881_fu_1665_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2881_reg_3739 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2880_2_fu_1669_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2880_2_reg_3744 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_62_fu_1739_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_62_reg_3749 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln757_12_fu_1760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_12_reg_3754 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_45_fu_1775_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_45_reg_3760 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal v_41_fu_1785_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_41_reg_3768 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln2872_1_fu_1791_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2872_1_reg_3773 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2886_fu_1780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2886_1_fu_1879_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2886_1_reg_3788 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2872_5_fu_1916_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_5_reg_3793 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal v_47_fu_1925_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_47_reg_3802 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln2898_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2899_fu_1968_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2899_reg_3812 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2898_2_fu_1972_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2898_2_reg_3817 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_63_fu_1984_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_63_reg_3822 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2872_9_fu_2021_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_9_reg_3827 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal x_58_fu_2033_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_58_reg_3832 : STD_LOGIC_VECTOR (14 downto 0);
    signal v_51_fu_2043_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_51_reg_3840 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln2872_8_fu_2053_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_8_reg_3845 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2904_fu_2038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2904_1_fu_2142_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2904_1_reg_3860 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_133_fu_2178_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_133_reg_3865 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal x_assign_95_cast_fu_2183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_95_cast_reg_3870 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_cast26_fu_2187_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_assign_cast26_reg_3875 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1510_2_fu_2190_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1510_2_reg_3881 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2932_fu_2194_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2932_reg_3887 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2932_1_fu_2201_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2932_1_reg_3896 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal zext_ln2932_2_fu_2206_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln2932_2_reg_3901 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2932_fu_2210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1507_fu_2219_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1507_reg_3915 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_68_fu_2263_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_68_reg_3922 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1507_fu_2269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1507_reg_3928 : STD_LOGIC_VECTOR (31 downto 0);
    signal p0i_4_fu_2305_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_reg_3937 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1507_1_fu_2311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1507_1_reg_3944 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_110_fu_2316_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_110_reg_3950 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_11_fu_2414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln757_11_reg_3955 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal i_15_fu_2433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_reg_3965 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal icmp_ln779_fu_2428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln781_fu_2444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_reg_3978 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_45_fu_2455_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_45_reg_3991 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal trunc_ln2935_fu_2461_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2935_reg_3996 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2943_fu_2450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal u_207_fu_2507_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_207_reg_4006 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1520_fu_2513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1520_reg_4011 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_64_fu_2596_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_64_reg_4015 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal trunc_ln2944_fu_2639_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2944_reg_4026 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2943_1_fu_2643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2943_1_reg_4031 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2943_fu_2648_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2943_reg_4036 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_46_fu_2758_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_46_reg_4041 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal v_43_fu_2768_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_43_reg_4049 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal trunc_ln2935_1_fu_2774_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2935_1_reg_4054 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2947_fu_2763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2947_1_fu_2862_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2947_1_reg_4069 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2935_fu_2867_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2935_reg_4074 : STD_LOGIC_VECTOR (12 downto 0);
    signal v_50_fu_2903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_50_reg_4082 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal trunc_ln2935_2_fu_2909_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2935_2_reg_4087 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln2956_fu_2898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2935_3_fu_2913_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2935_3_reg_4092 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal u_209_fu_2959_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal u_209_reg_4103 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1520_1_fu_2965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1520_1_reg_4108 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_65_fu_3048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_65_reg_4112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal lshr_ln80_reg_4123 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2956_1_fu_3123_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2956_1_reg_4128 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2956_fu_3128_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln2956_reg_4133 : STD_LOGIC_VECTOR (61 downto 0);
    signal x_55_fu_3206_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_55_reg_4138 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal v_49_fu_3216_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal v_49_reg_4146 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal icmp_ln2961_fu_3211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln79_reg_4161 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2961_1_fu_3338_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln2961_1_reg_4166 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_ap_start : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_done : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_idle : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_ap_ready : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_ce0 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_ce1 : STD_LOGIC;
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_xx : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_modp_montymul_fu_797_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_797_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_805_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_805_b : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_805_p : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_montymul_fu_805_p0i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_mkgm2_1_fu_826_ap_start : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_826_ap_done : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_826_ap_idle : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_826_ap_ready : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_826_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_mkgm2_1_fu_826_vla18_ce0 : STD_LOGIC;
    signal grp_modp_mkgm2_1_fu_826_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_mkgm2_1_fu_826_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_mkgm2_1_fu_826_p0i : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_ap_start : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_ap_done : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_ap_idle : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_ap_ready : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_vla18_ce0 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_vla18_ce1 : STD_LOGIC;
    signal grp_modp_NTT2_ext_1_fu_841_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_NTT2_ext_1_fu_841_p0i : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_ap_start : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_ap_done : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_ap_idle : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_ap_ready : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_ce0 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_ce1 : STD_LOGIC;
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_a : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_stride : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_logn : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_iNTT2_ext_1_fu_854_p0i : STD_LOGIC_VECTOR (30 downto 0);
    signal v_reg_498 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal idx_reg_509 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_38_reg_520 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal idx177_reg_531 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_42_reg_542 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state18_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal idx179_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_48_reg_564 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_state21_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal idx181_reg_575 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal r_16_reg_597 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_126_reg_606 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_105_reg_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv62_reg_628 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal v_37_reg_638 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx183_reg_650 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_reg_662 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_32_reg_671 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_40_reg_682 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal idx185_reg_693 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv_reg_704 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal v_44_reg_714 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx187_reg_726 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_208_reg_738 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_39_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_46_reg_758 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal idx189_reg_769 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_zint_rebuild_CRT_1_fu_780_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal z_fu_1605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_113_fu_2364_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_modp_mkgm2_1_fu_826_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_NTT2_ext_1_fu_841_ap_start_reg : STD_LOGIC := '0';
    signal grp_modp_iNTT2_ext_1_fu_854_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal zext_ln2849_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2850_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast9_cast_fu_1210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast12_cast_fu_1288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_cast_fu_1343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast4_cast_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2869_fu_1428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2881_fu_1660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2881_1_fu_1701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2889_fu_1835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2890_fu_1874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2891_fu_1911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2899_fu_1963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2899_1_fu_2016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2907_fu_2098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2908_fu_2137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2909_fu_2169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1524_fu_2502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1544_fu_2634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2944_fu_2742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2951_fu_2818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2952_fu_2857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2953_fu_2893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1524_1_fu_2954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1544_5_fu_3086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2958_fu_3195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2965_fu_3284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2966_fu_3323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2967_fu_3343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_ptr53_fu_178 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_335_fu_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_ptr_fu_1296_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_134_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal u_135_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_210_fu_3347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state60_on_subcall_done : BOOLEAN;
    signal empty_356_fu_1281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_355_fu_1274_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_345_fu_1336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_344_fu_1329_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal z_121_fu_2708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_123_fu_3188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2850_fu_911_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln2847_fu_926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln2858_fu_976_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln2858_fu_976_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal mul_ln2858_fu_976_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln2858_2_fu_994_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_986_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2858_1_fu_998_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln2859_fu_1018_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2859_fu_1040_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln2859_2_fu_1044_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2859_1_fu_1060_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2860_fu_1074_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln69_fu_1080_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2861_fu_1094_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2861_fu_1098_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln70_fu_1104_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln71_fu_1124_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal fs_fu_1006_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2863_fu_1138_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_336_fu_1169_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_348_fu_1187_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_350_fu_1195_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_167_fu_1200_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_349_fu_1191_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_354_fu_1220_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_168_fu_1246_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast24_fu_1253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_352_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_353_fu_1263_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast25_fu_1271_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast11_cast_fu_1267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_fu_1301_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast22_fu_1308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_341_fu_1312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_342_fu_1318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast23_fu_1326_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast6_cast_fu_1322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_338_fu_1375_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal index_ptr_cast_fu_1379_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_339_fu_1385_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_164_fu_1390_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_337_fu_1371_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_343_fu_1410_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2871_fu_1453_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln2871_fu_1457_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_fu_1461_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_fu_1471_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_fu_1467_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_1471_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_61_fu_1483_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_61_fu_1483_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_fu_1489_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln657_fu_1489_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_64_fu_1499_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_1504_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_64_fu_1499_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_1504_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_65_fu_1515_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1521_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_65_fu_1515_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_1521_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1538_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_fu_1538_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln685_6_fu_1552_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln72_fu_1557_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln685_fu_1565_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_fu_1569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_195_fu_1575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_fu_1583_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_fu_1591_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_fu_1597_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_9_fu_1601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2872_fu_1628_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_1_fu_1632_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln74_fu_1637_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_fu_1645_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln_fu_1650_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2881_fu_1674_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln75_fu_1678_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2881_1_fu_1686_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln2881_1_fu_1691_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln757_fu_1706_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_4_fu_1710_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_4_fu_1718_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln2880_fu_1724_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln73_fu_1732_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln2880_fu_1728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_4_fu_1744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal z_125_fu_1750_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln76_fu_1764_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2886_fu_1771_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2889_fu_1795_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln78_fu_1799_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2889_fu_1807_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2889_1_fu_1812_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2889_1_fu_1820_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln68_fu_1825_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln2890_fu_1840_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2890_fu_1846_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln79_fu_1851_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2890_1_fu_1859_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln69_fu_1864_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_3_fu_1884_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2872_1_fu_1888_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_50_fu_1896_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln70_fu_1901_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2872_2_fu_1931_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2872_6_fu_1935_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2872_2_fu_1940_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_54_fu_1948_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln76_fu_1953_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln86_fu_1977_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2899_fu_1989_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln87_fu_1993_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2899_1_fu_2001_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln2899_1_fu_2006_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln89_fu_2025_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2872_3_fu_2049_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2907_fu_2058_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln93_fu_2062_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2907_fu_2070_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2907_1_fu_2075_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2907_1_fu_2083_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln81_fu_2088_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln2908_fu_2103_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2908_fu_2109_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln94_fu_2114_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2908_1_fu_2122_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln82_fu_2127_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2872_3_fu_2147_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_60_fu_2154_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln83_fu_2159_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1507_fu_2215_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1507_fu_2219_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1507_fu_2215_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_66_fu_2223_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln656_14_fu_2233_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln656_14_fu_2233_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln656_4_fu_2229_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_14_fu_2233_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_67_fu_2245_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_67_fu_2245_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln657_14_fu_2251_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_67_fu_2245_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_14_fu_2251_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_68_fu_2263_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_14_fu_2273_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln658_14_fu_2273_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_69_fu_2283_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_5_fu_2288_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal y_69_fu_2283_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_5_fu_2288_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_fu_2305_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p0i_4_fu_2305_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln685_fu_2322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln685_5_fu_2328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_196_fu_2334_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_9_fu_2342_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_7_fu_2350_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_7_fu_2356_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_10_fu_2360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln735_fu_2372_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln757_fu_2376_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln757_fu_2384_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln757_fu_2390_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln757_fu_2394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_fu_2398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_17_fu_2404_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln779_fu_2418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln779_fu_2424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln781_fu_2439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1524_1_fu_2465_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1524_fu_2469_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln152431_fu_2474_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln80_fu_2479_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1524_3_fu_2487_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln71_fu_2492_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_fu_2519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_197_fu_2524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1525_fu_2532_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1525_fu_2540_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1521_fu_2546_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1521_fu_2550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_fu_2554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_16_fu_2560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_198_fu_2566_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_10_fu_2574_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_8_fu_2582_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_8_fu_2588_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_11_fu_2592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2943_fu_2602_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1544_fu_2606_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln84_fu_2611_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1544_3_fu_2619_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln1544_3_fu_2624_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_871_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1544_4_fu_2653_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1544_fu_2657_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1544_fu_2663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1544_fu_2667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_fu_2673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_199_fu_2678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_fu_2686_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_fu_2694_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_fu_2700_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_fu_2704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2944_fu_2715_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln85_fu_2719_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2944_1_fu_2727_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln75_fu_2732_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln77_fu_2747_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2947_fu_2754_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2951_fu_2778_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln82_fu_2782_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2951_fu_2790_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2951_1_fu_2795_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2951_1_fu_2803_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln72_fu_2808_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln2952_fu_2823_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2952_fu_2829_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln83_fu_2834_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2952_1_fu_2842_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln73_fu_2847_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln81_fu_2871_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_53_fu_2878_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln74_fu_2883_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1524_fu_2917_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1524_4_fu_2921_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1524_6_fu_2926_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1524_1_fu_2931_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1524_5_fu_2939_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln1524_1_fu_2944_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_62_fu_2971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_200_fu_2976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1525_1_fu_2984_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1525_1_fu_2992_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1521_1_fu_2998_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1521_1_fu_3002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_18_fu_3006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln685_19_fu_3012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_201_fu_3018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln685_11_fu_3026_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln685_9_fu_3034_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln685_9_fu_3040_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln685_12_fu_3044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2956_fu_3054_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1544_4_fu_3058_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1544_1_fu_3063_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1544_5_fu_3071_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln1544_4_fu_3076_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2958_fu_3091_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2958_fu_3095_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln92_fu_3100_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2958_1_fu_3108_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1544_6_fu_3133_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln1544_1_fu_3137_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1544_1_fu_3143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1544_1_fu_3147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln697_3_fu_3153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_202_fu_3158_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln697_3_fu_3166_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln697_2_fu_3174_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln697_2_fu_3180_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln697_2_fu_3184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln88_fu_3199_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2935_3_fu_3222_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2935_2_fu_3226_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2935_1_fu_3231_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln2965_fu_3244_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln90_fu_3248_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2965_fu_3256_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2965_1_fu_3261_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2965_1_fu_3269_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln77_fu_3274_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln2966_fu_3289_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2966_fu_3295_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln91_fu_3300_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln2966_1_fu_3308_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln78_fu_3313_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_59_fu_3239_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_block_state25_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal mul_ln2858_fu_976_p00 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component keygen_zint_rebuild_CRT_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        xx : IN STD_LOGIC_VECTOR (14 downto 0);
        xlen : IN STD_LOGIC_VECTOR (8 downto 0);
        xstride : IN STD_LOGIC_VECTOR (8 downto 0);
        num : IN STD_LOGIC_VECTOR (63 downto 0);
        normalize_signed : IN STD_LOGIC_VECTOR (0 downto 0);
        tmp : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component keygen_modp_montymul IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (31 downto 0);
        b : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (31 downto 0);
        p0i : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component keygen_modp_mkgm2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        gm : IN STD_LOGIC_VECTOR (14 downto 0);
        igm : IN STD_LOGIC_VECTOR (14 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        g : IN STD_LOGIC_VECTOR (30 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_modp_NTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (14 downto 0);
        stride : IN STD_LOGIC_VECTOR (7 downto 0);
        gm : IN STD_LOGIC_VECTOR (14 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_modp_iNTT2_ext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (14 downto 0);
        stride : IN STD_LOGIC_VECTOR (8 downto 0);
        igm : IN STD_LOGIC_VECTOR (14 downto 0);
        logn : IN STD_LOGIC_VECTOR (31 downto 0);
        p : IN STD_LOGIC_VECTOR (24 downto 0);
        p0i : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_8ns_61s_61_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (60 downto 0);
        dout : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;


    component keygen_mul_25s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_31s_24ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_25s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_make_fg_step_1_MAX_BL_SMALL_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component keygen_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component keygen_make_fg_step_1_PRIMES_g_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    MAX_BL_SMALL_U : component keygen_make_fg_step_1_MAX_BL_SMALL_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => MAX_BL_SMALL_address0,
        ce0 => MAX_BL_SMALL_ce0,
        q0 => MAX_BL_SMALL_q0,
        address1 => MAX_BL_SMALL_address1,
        ce1 => MAX_BL_SMALL_ce1,
        q1 => MAX_BL_SMALL_q1);

    PRIMES_p_U : component keygen_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R
    generic map (
        DataWidth => 25,
        AddressRange => 522,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => PRIMES_p_address0,
        ce0 => PRIMES_p_ce0,
        q0 => PRIMES_p_q0);

    PRIMES_g_U : component keygen_make_fg_step_1_PRIMES_g_ROM_AUTO_1R
    generic map (
        DataWidth => 31,
        AddressRange => 522,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => PRIMES_g_address0,
        ce0 => PRIMES_g_ce0,
        q0 => PRIMES_g_q0);

    grp_zint_rebuild_CRT_1_fu_780 : component keygen_zint_rebuild_CRT_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_rebuild_CRT_1_fu_780_ap_start,
        ap_done => grp_zint_rebuild_CRT_1_fu_780_ap_done,
        ap_idle => grp_zint_rebuild_CRT_1_fu_780_ap_idle,
        ap_ready => grp_zint_rebuild_CRT_1_fu_780_ap_ready,
        vla18_address0 => grp_zint_rebuild_CRT_1_fu_780_vla18_address0,
        vla18_ce0 => grp_zint_rebuild_CRT_1_fu_780_vla18_ce0,
        vla18_we0 => grp_zint_rebuild_CRT_1_fu_780_vla18_we0,
        vla18_d0 => grp_zint_rebuild_CRT_1_fu_780_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_zint_rebuild_CRT_1_fu_780_vla18_address1,
        vla18_ce1 => grp_zint_rebuild_CRT_1_fu_780_vla18_ce1,
        vla18_we1 => grp_zint_rebuild_CRT_1_fu_780_vla18_we1,
        vla18_d1 => grp_zint_rebuild_CRT_1_fu_780_vla18_d1,
        vla18_q1 => vla18_q1,
        xx => grp_zint_rebuild_CRT_1_fu_780_xx,
        xlen => zext_ln1510_1_reg_3450,
        xstride => zext_ln1510_1_reg_3450,
        num => n_reg_3417,
        normalize_signed => ap_const_lv1_1,
        tmp => gm_reg_3515);

    grp_modp_mkgm2_1_fu_826 : component keygen_modp_mkgm2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_mkgm2_1_fu_826_ap_start,
        ap_done => grp_modp_mkgm2_1_fu_826_ap_done,
        ap_idle => grp_modp_mkgm2_1_fu_826_ap_idle,
        ap_ready => grp_modp_mkgm2_1_fu_826_ap_ready,
        vla18_address0 => grp_modp_mkgm2_1_fu_826_vla18_address0,
        vla18_ce0 => grp_modp_mkgm2_1_fu_826_vla18_ce0,
        vla18_we0 => grp_modp_mkgm2_1_fu_826_vla18_we0,
        vla18_d0 => grp_modp_mkgm2_1_fu_826_vla18_d0,
        gm => gm_reg_3515,
        igm => igm_reg_3522,
        logn => logn,
        g => reg_888,
        p => reg_881,
        p0i => grp_modp_mkgm2_1_fu_826_p0i);

    grp_modp_NTT2_ext_1_fu_841 : component keygen_modp_NTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_NTT2_ext_1_fu_841_ap_start,
        ap_done => grp_modp_NTT2_ext_1_fu_841_ap_done,
        ap_idle => grp_modp_NTT2_ext_1_fu_841_ap_idle,
        ap_ready => grp_modp_NTT2_ext_1_fu_841_ap_ready,
        vla18_address0 => grp_modp_NTT2_ext_1_fu_841_vla18_address0,
        vla18_ce0 => grp_modp_NTT2_ext_1_fu_841_vla18_ce0,
        vla18_we0 => grp_modp_NTT2_ext_1_fu_841_vla18_we0,
        vla18_d0 => grp_modp_NTT2_ext_1_fu_841_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_modp_NTT2_ext_1_fu_841_vla18_address1,
        vla18_ce1 => grp_modp_NTT2_ext_1_fu_841_vla18_ce1,
        vla18_we1 => grp_modp_NTT2_ext_1_fu_841_vla18_we1,
        vla18_d1 => grp_modp_NTT2_ext_1_fu_841_vla18_d1,
        vla18_q1 => vla18_q1,
        a => t1_reg_3544,
        stride => ap_const_lv8_1,
        gm => gm_reg_3515,
        logn => logn,
        p => reg_881,
        p0i => grp_modp_NTT2_ext_1_fu_841_p0i);

    grp_modp_iNTT2_ext_1_fu_854 : component keygen_modp_iNTT2_ext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_modp_iNTT2_ext_1_fu_854_ap_start,
        ap_done => grp_modp_iNTT2_ext_1_fu_854_ap_done,
        ap_idle => grp_modp_iNTT2_ext_1_fu_854_ap_idle,
        ap_ready => grp_modp_iNTT2_ext_1_fu_854_ap_ready,
        vla18_address0 => grp_modp_iNTT2_ext_1_fu_854_vla18_address0,
        vla18_ce0 => grp_modp_iNTT2_ext_1_fu_854_vla18_ce0,
        vla18_we0 => grp_modp_iNTT2_ext_1_fu_854_vla18_we0,
        vla18_d0 => grp_modp_iNTT2_ext_1_fu_854_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_modp_iNTT2_ext_1_fu_854_vla18_address1,
        vla18_ce1 => grp_modp_iNTT2_ext_1_fu_854_vla18_ce1,
        vla18_we1 => grp_modp_iNTT2_ext_1_fu_854_vla18_we1,
        vla18_d1 => grp_modp_iNTT2_ext_1_fu_854_vla18_d1,
        vla18_q1 => vla18_q1,
        a => grp_modp_iNTT2_ext_1_fu_854_a,
        stride => grp_modp_iNTT2_ext_1_fu_854_stride,
        igm => igm_reg_3522,
        logn => grp_modp_iNTT2_ext_1_fu_854_logn,
        p => reg_881,
        p0i => grp_modp_iNTT2_ext_1_fu_854_p0i);

    mul_8ns_61s_61_1_1_U289 : component keygen_mul_8ns_61s_61_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 61,
        dout_WIDTH => 61)
    port map (
        din0 => mul_ln2858_fu_976_p0,
        din1 => mul_ln2858_fu_976_p1,
        dout => mul_ln2858_fu_976_p2);

    mul_25s_24ns_31_1_1_U290 : component keygen_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => PRIMES_p_q0,
        din1 => mul_ln656_fu_1471_p1,
        dout => mul_ln656_fu_1471_p2);

    mul_31s_24ns_31_1_1_U291 : component keygen_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_61_fu_1483_p0,
        din1 => y_61_fu_1483_p1,
        dout => y_61_fu_1483_p2);

    mul_25s_31s_31_1_1_U292 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_fu_1489_p0,
        din1 => y_61_reg_3694,
        dout => mul_ln657_fu_1489_p2);

    mul_31s_31s_31_1_1_U293 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_64_fu_1499_p0,
        din1 => y_61_reg_3694,
        dout => y_64_fu_1499_p2);

    mul_25s_31s_31_1_1_U294 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_fu_1504_p0,
        din1 => y_64_fu_1499_p2,
        dout => mul_ln658_fu_1504_p2);

    mul_31s_31s_31_1_1_U295 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_65_fu_1515_p0,
        din1 => y_64_fu_1499_p2,
        dout => y_65_fu_1515_p2);

    mul_25s_31s_31_1_1_U296 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_fu_1521_p0,
        din1 => y_65_fu_1515_p2,
        dout => mul_ln659_fu_1521_p2);

    mul_31s_31s_31_1_1_U297 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_fu_1538_p0,
        din1 => p0i_fu_1538_p1,
        dout => p0i_fu_1538_p2);

    mul_25s_24ns_31_1_1_U298 : component keygen_mul_25s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln656_14_fu_2233_p0,
        din1 => mul_ln656_14_fu_2233_p1,
        dout => mul_ln656_14_fu_2233_p2);

    mul_31s_24ns_31_1_1_U299 : component keygen_mul_31s_24ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 24,
        dout_WIDTH => 31)
    port map (
        din0 => y_67_fu_2245_p0,
        din1 => y_67_fu_2245_p1,
        dout => y_67_fu_2245_p2);

    mul_25s_31s_31_1_1_U300 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln657_14_fu_2251_p0,
        din1 => y_67_fu_2245_p2,
        dout => mul_ln657_14_fu_2251_p2);

    mul_31s_31s_31_1_1_U301 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_68_fu_2263_p0,
        din1 => y_67_fu_2245_p2,
        dout => y_68_fu_2263_p2);

    mul_25s_31s_31_1_1_U302 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln658_14_fu_2273_p0,
        din1 => y_68_reg_3922,
        dout => mul_ln658_14_fu_2273_p2);

    mul_31s_31s_31_1_1_U303 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_69_fu_2283_p0,
        din1 => y_68_reg_3922,
        dout => y_69_fu_2283_p2);

    mul_25s_31s_31_1_1_U304 : component keygen_mul_25s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln659_5_fu_2288_p0,
        din1 => y_69_fu_2283_p2,
        dout => mul_ln659_5_fu_2288_p2);

    mul_31s_31s_31_1_1_U305 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => p0i_4_fu_2305_p0,
        din1 => p0i_4_fu_2305_p1,
        dout => p0i_4_fu_2305_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_modp_NTT2_ext_1_fu_841_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_NTT2_ext_1_fu_841_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln2943_fu_2450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln2956_fu_2898_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50)) or ((icmp_ln2898_fu_1920_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_modp_NTT2_ext_1_fu_841_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_NTT2_ext_1_fu_841_ap_ready = ap_const_logic_1)) then 
                    grp_modp_NTT2_ext_1_fu_841_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_modp_iNTT2_ext_1_fu_854_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_iNTT2_ext_1_fu_854_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state59) or ((icmp_ln2961_fu_3211_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (out_ntt = ap_const_lv1_0)) or ((icmp_ln2904_fu_2038_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln2886_fu_1780_p2 = ap_const_lv1_1) and (in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
                    grp_modp_iNTT2_ext_1_fu_854_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_iNTT2_ext_1_fu_854_ap_ready = ap_const_logic_1)) then 
                    grp_modp_iNTT2_ext_1_fu_854_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_modp_mkgm2_1_fu_826_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_modp_mkgm2_1_fu_826_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                    grp_modp_mkgm2_1_fu_826_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_modp_mkgm2_1_fu_826_ap_ready = ap_const_logic_1)) then 
                    grp_modp_mkgm2_1_fu_826_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) or ((icmp_ln2869_fu_1438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_rebuild_CRT_1_fu_780_ap_ready = ap_const_logic_1)) then 
                    grp_zint_rebuild_CRT_1_fu_780_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_335_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                empty_335_fu_182 <= shl_ln2863_fu_1142_p2;
            elsif (((empty_346_fu_1347_p2 = ap_const_lv1_0) and (compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                empty_335_fu_182 <= index_ptr_fu_1296_p2;
            end if; 
        end if;
    end process;

    i_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                i_reg_586 <= i_15_reg_3965;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                i_reg_586 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    idx177_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                idx177_reg_531 <= add_ln2886_1_reg_3788;
            elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                idx177_reg_531 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx179_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                idx179_reg_553 <= add_ln2898_2_reg_3817;
            elsif (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                idx179_reg_553 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx181_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                idx181_reg_575 <= add_ln2904_1_reg_3860;
            elsif (((ap_const_boolean_0 = ap_block_state21_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                idx181_reg_575 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx183_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                idx183_reg_650 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                idx183_reg_650 <= add_ln2943_1_reg_4031;
            end if; 
        end if;
    end process;

    idx185_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                idx185_reg_693 <= add_ln2947_1_reg_4069;
            elsif (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                idx185_reg_693 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx187_reg_726_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2947_fu_2763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                idx187_reg_726 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                idx187_reg_726 <= add_ln2956_1_reg_4128;
            end if; 
        end if;
    end process;

    idx189_reg_769_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                idx189_reg_769 <= add_ln2961_1_reg_4166;
            elsif (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                idx189_reg_769 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    idx_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                idx_reg_509 <= add_ln2880_2_reg_3744;
            elsif (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                idx_reg_509 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    index_ptr53_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                index_ptr53_fu_178 <= ap_const_lv64_0;
            elsif (((empty_357_reg_3607 = ap_const_lv1_0) and (compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                index_ptr53_fu_178 <= index_increment_reg_3602;
            end if; 
        end if;
    end process;

    indvars_iv62_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                indvars_iv62_reg_628 <= shl_ln2859_2_reg_3488;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                indvars_iv62_reg_628 <= add_ln2943_reg_4036;
            end if; 
        end if;
    end process;

    indvars_iv_reg_704_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2947_fu_2763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                indvars_iv_reg_704 <= add_ln2859_reg_3499;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                indvars_iv_reg_704 <= add_ln2956_reg_4133;
            end if; 
        end if;
    end process;

    r_16_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                r_16_reg_597 <= r_reg_3978;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                r_16_reg_597 <= zext_ln757_11_fu_2414_p1;
            end if; 
        end if;
    end process;

    u_134_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3558 = ap_const_lv1_1) or ((empty_346_fu_1347_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_1))) or ((empty_357_reg_3607 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_0))))) then 
                u_134_fu_186 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                u_134_fu_186 <= u_211_reg_3659;
            end if; 
        end if;
    end process;

    u_135_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2869_fu_1438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                u_135_fu_190 <= u_204_reg_3434;
            elsif (((ap_const_boolean_0 = ap_block_state60_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                u_135_fu_190 <= u_210_fu_3347_p2;
            end if; 
        end if;
    end process;

    u_208_reg_738_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2956_fu_2898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                u_208_reg_738 <= zext_ln1510_2_reg_3881;
            elsif (((icmp_ln1520_1_reg_4108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                u_208_reg_738 <= u_209_reg_4103;
            end if; 
        end if;
    end process;

    u_reg_662_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2943_fu_2450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                u_reg_662 <= zext_ln1510_2_reg_3881;
            elsif (((icmp_ln1520_reg_4011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                u_reg_662 <= u_207_reg_4006;
            end if; 
        end if;
    end process;

    v_37_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                v_37_reg_638 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                v_37_reg_638 <= v_45_reg_3991;
            end if; 
        end if;
    end process;

    v_38_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                v_38_reg_520 <= v_41_reg_3768;
            elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                v_38_reg_520 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_40_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                v_40_reg_682 <= v_43_reg_4049;
            elsif (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                v_40_reg_682 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_42_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                v_42_reg_542 <= v_47_reg_3802;
            elsif (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v_42_reg_542 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    v_44_reg_714_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2947_fu_2763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                v_44_reg_714 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                v_44_reg_714 <= v_50_reg_4082;
            end if; 
        end if;
    end process;

    v_46_reg_758_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                v_46_reg_758 <= v_49_reg_4146;
            elsif (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                v_46_reg_758 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_48_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                v_48_reg_564 <= v_51_reg_3840;
            elsif (((ap_const_boolean_0 = ap_block_state21_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v_48_reg_564 <= ap_const_lv63_0;
            end if; 
        end if;
    end process;

    v_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                v_reg_498 <= v_39_reg_3729;
            elsif (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                v_reg_498 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    x_32_reg_671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2943_fu_2450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                x_32_reg_671 <= ap_const_lv32_0;
            elsif (((icmp_ln1520_reg_4011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                x_32_reg_671 <= x_64_fu_2596_p2;
            end if; 
        end if;
    end process;

    x_39_reg_747_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2956_fu_2898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                x_39_reg_747 <= ap_const_lv32_0;
            elsif (((icmp_ln1520_1_reg_4108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                x_39_reg_747 <= x_65_fu_3048_p2;
            end if; 
        end if;
    end process;

    z_105_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                if ((icmp_ln781_fu_2444_p2 = ap_const_lv1_1)) then 
                    z_105_reg_616 <= z_126_reg_606;
                elsif ((icmp_ln781_fu_2444_p2 = ap_const_lv1_0)) then 
                    z_105_reg_616 <= grp_modp_montymul_fu_255_p_dout0;
                end if;
            end if; 
        end if;
    end process;

    z_126_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                z_126_reg_606 <= z_105_reg_616;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                z_126_reg_606 <= z_110_reg_3950;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln2841_reg_3481 <= add_ln2841_fu_1012_p2;
                add_ln2859_1_reg_3504 <= add_ln2859_1_fu_1054_p2;
                add_ln2859_reg_3499 <= add_ln2859_fu_1048_p2;
                add_ln2862_reg_3528 <= add_ln2862_fu_1118_p2;
                compare_n_to_0_reg_3558 <= compare_n_to_0_fu_1154_p2;
                compare_src_dst_reg_3554 <= compare_src_dst_fu_1148_p2;
                empty_reg_3383 <= empty_fu_922_p1;
                gm_reg_3515 <= gm_fu_1088_p2;
                igm_reg_3522 <= igm_fu_1112_p2;
                n_reg_3417 <= n_fu_930_p2;
                    shl_ln2859_2_reg_3488(61 downto 1) <= shl_ln2859_2_fu_1024_p3(61 downto 1);
                    shl_ln2863_reg_3549(63 downto 3) <= shl_ln2863_fu_1142_p2(63 downto 3);
                t1_reg_3544 <= t1_fu_1132_p2;
                tlen_reg_3457 <= MAX_BL_SMALL_q0;
                trunc_ln2858_reg_3475 <= trunc_ln2858_fu_982_p1;
                    trunc_ln2859_1_reg_3493(12 downto 1) <= trunc_ln2859_1_fu_1032_p3(12 downto 1);
                trunc_ln_reg_3426 <= n_fu_930_p2(63 downto 1);
                u_204_reg_3434 <= MAX_BL_SMALL_q1;
                x_61_reg_3510 <= x_61_fu_1068_p2;
                    zext_ln1510_1_reg_3450(7 downto 0) <= zext_ln1510_1_fu_960_p1(7 downto 0);
                    zext_ln1510_reg_3442(7 downto 0) <= zext_ln1510_fu_956_p1(7 downto 0);
                    zext_ln2840_1_reg_3470(7 downto 0) <= zext_ln2840_1_fu_968_p1(7 downto 0);
                    zext_ln2840_reg_3462(7 downto 0) <= zext_ln2840_fu_964_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln2872_5_reg_3793 <= add_ln2872_5_fu_1916_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2904_fu_2038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                add_ln2872_8_reg_3845 <= add_ln2872_8_fu_2053_p2;
                add_ln2904_1_reg_3860 <= add_ln2904_1_fu_2142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln2872_9_reg_3827 <= add_ln2872_9_fu_2021_p2;
                x_58_reg_3832 <= x_58_fu_2033_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln2872_reg_3720 <= add_ln2872_fu_1613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2880_fu_1617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                add_ln2880_2_reg_3744 <= add_ln2880_2_fu_1669_p2;
                trunc_ln2881_reg_3739 <= trunc_ln2881_fu_1665_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2886_fu_1780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add_ln2886_1_reg_3788 <= add_ln2886_1_fu_1879_p2;
                trunc_ln2872_1_reg_3773 <= trunc_ln2872_1_fu_1791_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2898_fu_1920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                add_ln2898_2_reg_3817 <= add_ln2898_2_fu_1972_p2;
                trunc_ln2899_reg_3812 <= trunc_ln2899_fu_1968_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2956_fu_2898_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                add_ln2935_3_reg_4092 <= add_ln2935_3_fu_2913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                add_ln2935_reg_4074 <= add_ln2935_fu_2867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1520_reg_4011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                add_ln2943_1_reg_4031 <= add_ln2943_1_fu_2643_p2;
                add_ln2943_reg_4036 <= add_ln2943_fu_2648_p2;
                trunc_ln2944_reg_4026 <= trunc_ln2944_fu_2639_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2947_fu_2763_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                add_ln2947_1_reg_4069 <= add_ln2947_1_fu_2862_p2;
                trunc_ln2935_1_reg_4054 <= trunc_ln2935_1_fu_2774_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1520_1_reg_4108 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                add_ln2956_1_reg_4128 <= add_ln2956_1_fu_3123_p2;
                add_ln2956_reg_4133 <= add_ln2956_fu_3128_p2;
                lshr_ln80_reg_4123 <= add_ln2958_1_fu_3108_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2961_fu_3211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                add_ln2961_1_reg_4166 <= add_ln2961_1_fu_3338_p2;
                lshr_ln79_reg_4161 <= x_59_fu_3239_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                empty_340_reg_3634 <= empty_340_fu_1405_p2;
                tmp_166_reg_3640 <= empty_343_fu_1410_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                empty_347_reg_3569 <= empty_347_fu_1160_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                empty_351_reg_3591 <= empty_351_fu_1215_p2;
                empty_357_reg_3607 <= empty_357_fu_1241_p2;
                index_increment_reg_3602 <= index_increment_fu_1235_p2;
                tmp_169_reg_3597 <= empty_354_fu_1220_p2(14 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                i_15_reg_3965 <= i_15_fu_2433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                icmp_ln1520_1_reg_4108 <= icmp_ln1520_1_fu_2965_p2;
                u_209_reg_4103 <= u_209_fu_2959_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                icmp_ln1520_reg_4011 <= icmp_ln1520_fu_2513_p2;
                u_207_reg_4006 <= u_207_fu_2507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                p0i_4_reg_3937 <= p0i_4_fu_2305_p2;
                z_110_reg_3950 <= z_110_fu_2316_p2;
                    zext_ln1507_1_reg_3944(30 downto 0) <= zext_ln1507_1_fu_2311_p1(30 downto 0);
                    zext_ln1507_reg_3928(30 downto 0) <= zext_ln1507_fu_2269_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p0i_reg_3700 <= p0i_fu_1538_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                r_reg_3978 <= grp_modp_montymul_fu_265_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_881 <= PRIMES_p_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_888 <= PRIMES_g_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                reg_893 <= grp_modp_montymul_fu_255_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_899 <= grp_modp_montymul_fu_265_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                sext_ln1507_reg_3915 <= sext_ln1507_fu_2219_p1;
                y_68_reg_3922 <= y_68_fu_2263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                sext_ln2871_reg_3686 <= sext_ln2871_fu_1457_p1;
                trunc_ln2871_reg_3681 <= trunc_ln2871_fu_1453_p1;
                y_61_reg_3694 <= y_61_fu_1483_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3558 = ap_const_lv1_1) or ((empty_346_fu_1347_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_1))) or ((empty_357_reg_3607 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_0))))) then
                sub_reg_3621 <= sub_fu_1358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp1_reg_3581 <= tmp1_fu_1173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2956_fu_2898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                trunc_ln2935_2_reg_4087 <= trunc_ln2935_2_fu_2909_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2943_fu_2450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                trunc_ln2935_reg_3996 <= trunc_ln2935_fu_2461_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                u_133_reg_3865 <= u_133_fu_2178_p2;
                    x_assign_95_cast_reg_3870(7 downto 0) <= x_assign_95_cast_fu_2183_p1(7 downto 0);
                    x_assign_cast26_reg_3875(7 downto 0) <= x_assign_cast26_fu_2187_p1(7 downto 0);
                    zext_ln1510_2_reg_3881(7 downto 0) <= zext_ln1510_2_fu_2190_p1(7 downto 0);
                    zext_ln2932_reg_3887(7 downto 0) <= zext_ln2932_fu_2194_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                u_211_reg_3659 <= u_211_fu_1443_p2;
                    zext_ln2869_1_reg_3648(7 downto 0) <= zext_ln2869_1_fu_1434_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                v_39_reg_3729 <= v_39_fu_1622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                v_41_reg_3768 <= v_41_fu_1785_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                v_43_reg_4049 <= v_43_fu_2768_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                v_45_reg_3991 <= v_45_fu_2455_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                v_47_reg_3802 <= v_47_fu_1925_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                v_49_reg_4146 <= v_49_fu_3216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                v_50_reg_4082 <= v_50_fu_2903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                v_51_reg_3840 <= v_51_fu_2043_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                x_45_reg_3760 <= x_45_fu_1775_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                x_46_reg_4041 <= x_46_fu_2758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                x_55_reg_4138 <= x_55_fu_3206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                x_62_reg_3749 <= x_62_fu_1739_p2;
                    zext_ln757_12_reg_3754(30 downto 0) <= zext_ln757_12_fu_1760_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2898_fu_1920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                x_63_reg_3822 <= x_63_fu_1984_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                x_64_reg_4015 <= x_64_fu_2596_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                x_65_reg_4112 <= x_65_fu_3048_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    zext_ln2871_1_reg_3714(30 downto 0) <= zext_ln2871_1_fu_1548_p1(30 downto 0);
                    zext_ln2871_reg_3708(30 downto 0) <= zext_ln2871_fu_1544_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                    zext_ln2932_1_reg_3896(7 downto 0) <= zext_ln2932_1_fu_2201_p1(7 downto 0);
                    zext_ln2932_2_reg_3901(7 downto 0) <= zext_ln2932_2_fu_2206_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                    zext_ln757_11_reg_3955(30 downto 0) <= zext_ln757_11_fu_2414_p1(30 downto 0);
            end if;
        end if;
    end process;
    zext_ln1510_reg_3442(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln1510_1_reg_3450(8) <= '0';
    zext_ln2840_reg_3462(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln2840_1_reg_3470(8) <= '0';
    shl_ln2859_2_reg_3488(0) <= '0';
    trunc_ln2859_1_reg_3493(0) <= '0';
    shl_ln2863_reg_3549(2 downto 0) <= "000";
    zext_ln2869_1_reg_3648(12 downto 8) <= "00000";
    zext_ln2871_reg_3708(31) <= '0';
    zext_ln2871_1_reg_3714(31) <= '0';
    zext_ln757_12_reg_3754(31) <= '0';
    x_assign_95_cast_reg_3870(31 downto 8) <= "000000000000000000000000";
    x_assign_cast26_reg_3875(61 downto 8) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln1510_2_reg_3881(8) <= '0';
    zext_ln2932_reg_3887(12 downto 8) <= "00000";
    zext_ln2932_1_reg_3896(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln2932_2_reg_3901(12 downto 8) <= "00000";
    zext_ln1507_reg_3928(31) <= '0';
    zext_ln1507_1_reg_3944(31) <= '0';
    zext_ln757_11_reg_3955(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, out_ntt, ap_CS_fsm_state10, out_ntt_read_read_fu_200_p2, ap_CS_fsm_state2, compare_src_dst_fu_1148_p2, compare_src_dst_reg_3554, compare_n_to_0_fu_1154_p2, compare_n_to_0_reg_3558, empty_357_reg_3607, ap_CS_fsm_state4, empty_346_fu_1347_p2, ap_CS_fsm_state6, icmp_ln2869_fu_1438_p2, ap_CS_fsm_state11, icmp_ln2880_fu_1617_p2, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln2886_fu_1780_p2, ap_CS_fsm_state18, ap_CS_fsm_state19, icmp_ln2898_fu_1920_p2, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2904_fu_2038_p2, ap_CS_fsm_state32, ap_CS_fsm_state33, icmp_ln2932_fu_2210_p2, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, ap_CS_fsm_state42, icmp_ln2943_fu_2450_p2, icmp_ln1520_reg_4011, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, icmp_ln2947_fu_2763_p2, ap_CS_fsm_state50, icmp_ln2956_fu_2898_p2, icmp_ln1520_1_reg_4108, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state55, icmp_ln2961_fu_3211_p2, grp_zint_rebuild_CRT_1_fu_780_ap_done, grp_modp_mkgm2_1_fu_826_ap_done, grp_modp_NTT2_ext_1_fu_841_ap_done, grp_modp_iNTT2_ext_1_fu_854_ap_done, ap_block_state14_on_subcall_done, ap_block_state18_on_subcall_done, ap_block_state21_on_subcall_done, ap_CS_fsm_state41, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, ap_block_state29_on_subcall_done, ap_block_state60_on_subcall_done, ap_block_state25_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((compare_n_to_0_fu_1154_p2 = ap_const_lv1_0) and (compare_src_dst_fu_1148_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((compare_n_to_0_reg_3558 = ap_const_lv1_1) or ((empty_346_fu_1347_p2 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_1))) or ((empty_357_reg_3607 = ap_const_lv1_1) and (compare_src_dst_reg_3554 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((empty_346_fu_1347_p2 = ap_const_lv1_0) and (compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln2869_fu_1438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln2880_fu_1617_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln2886_fu_1780_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state18 => 
                if (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln2898_fu_1920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state21 => 
                if (((ap_const_boolean_0 = ap_block_state21_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln2904_fu_2038_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state25 => 
                if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25) and (out_ntt_read_read_fu_200_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                elsif (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25) and (out_ntt = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((icmp_ln2932_fu_2210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln2943_fu_2450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((icmp_ln1520_reg_4011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state46 => 
                if (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln2947_fu_2763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state50 => 
                if (((icmp_ln2956_fu_2898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((icmp_ln1520_1_reg_4108 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state54 => 
                if (((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                if (((icmp_ln2961_fu_3211_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (out_ntt_read_read_fu_200_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                elsif (((icmp_ln2961_fu_3211_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55) and (out_ntt = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state58 => 
                if (((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((ap_const_boolean_0 = ap_block_state60_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    MAX_BL_SMALL_address0 <= zext_ln2850_fu_917_p1(4 - 1 downto 0);
    MAX_BL_SMALL_address1 <= zext_ln2849_fu_906_p1(4 - 1 downto 0);

    MAX_BL_SMALL_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            MAX_BL_SMALL_ce0 <= ap_const_logic_1;
        else 
            MAX_BL_SMALL_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    MAX_BL_SMALL_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            MAX_BL_SMALL_ce1 <= ap_const_logic_1;
        else 
            MAX_BL_SMALL_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_g_address0_assign_proc : process(ap_CS_fsm_state6, zext_ln2932_1_reg_3896, ap_CS_fsm_state38, zext_ln2869_fu_1428_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            PRIMES_g_address0 <= zext_ln2932_1_reg_3896(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            PRIMES_g_address0 <= zext_ln2869_fu_1428_p1(10 - 1 downto 0);
        else 
            PRIMES_g_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_g_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            PRIMES_g_ce0 <= ap_const_logic_1;
        else 
            PRIMES_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    PRIMES_p_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln2869_fu_1438_p2, ap_CS_fsm_state32, zext_ln2932_1_fu_2201_p1, ap_CS_fsm_state33, ap_CS_fsm_state30, zext_ln2869_fu_1428_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            PRIMES_p_address0 <= zext_ln2932_1_fu_2201_p1(10 - 1 downto 0);
        elsif (((icmp_ln2869_fu_1438_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            PRIMES_p_address0 <= zext_ln2869_fu_1428_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            PRIMES_p_address0 <= ap_const_lv10_0;
        else 
            PRIMES_p_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    PRIMES_p_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln2869_fu_1438_p2, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((icmp_ln2869_fu_1438_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            PRIMES_p_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            PRIMES_p_ce0 <= ap_const_logic_0;
        else 
            PRIMES_p_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln152431_fu_2474_p2 <= std_logic_vector(unsigned(add_ln1524_fu_2469_p2) + unsigned(trunc_ln2935_reg_3996));
    add_ln1524_3_fu_2487_p2 <= std_logic_vector(unsigned(shl_ln80_fu_2479_p3) + unsigned(empty_reg_3383));
    add_ln1524_4_fu_2921_p2 <= std_logic_vector(unsigned(add_ln2859_1_reg_3504) + unsigned(sext_ln1524_fu_2917_p1));
    add_ln1524_5_fu_2939_p2 <= std_logic_vector(unsigned(shl_ln1524_1_fu_2931_p3) + unsigned(empty_reg_3383));
    add_ln1524_6_fu_2926_p2 <= std_logic_vector(unsigned(add_ln1524_4_fu_2921_p2) + unsigned(trunc_ln2935_2_reg_4087));
    add_ln1524_fu_2469_p2 <= std_logic_vector(unsigned(trunc_ln2859_1_reg_3493) + unsigned(sext_ln1524_1_fu_2465_p1));
    add_ln1544_3_fu_2619_p2 <= std_logic_vector(unsigned(shl_ln84_fu_2611_p3) + unsigned(empty_reg_3383));
    add_ln1544_4_fu_3058_p2 <= std_logic_vector(unsigned(trunc_ln2956_fu_3054_p1) + unsigned(zext_ln2932_reg_3887));
    add_ln1544_5_fu_3071_p2 <= std_logic_vector(unsigned(shl_ln1544_1_fu_3063_p3) + unsigned(empty_reg_3383));
    add_ln1544_fu_2606_p2 <= std_logic_vector(unsigned(trunc_ln2943_fu_2602_p1) + unsigned(zext_ln2932_reg_3887));
    add_ln2841_fu_1012_p2 <= std_logic_vector(unsigned(trunc_ln2858_1_fu_998_p3) + unsigned(empty_fu_922_p1));
    add_ln2850_fu_911_p2 <= std_logic_vector(unsigned(depth) + unsigned(ap_const_lv4_1));
    add_ln2859_1_fu_1054_p2 <= std_logic_vector(unsigned(trunc_ln2859_1_fu_1032_p3) + unsigned(trunc_ln2859_2_fu_1044_p1));
    add_ln2859_fu_1048_p2 <= std_logic_vector(unsigned(shl_ln2859_2_fu_1024_p3) + unsigned(trunc_ln2859_fu_1040_p1));
    add_ln2860_fu_1074_p2 <= std_logic_vector(unsigned(add_ln2859_1_fu_1054_p2) + unsigned(trunc_ln2859_2_fu_1044_p1));
    add_ln2861_fu_1098_p2 <= std_logic_vector(unsigned(add_ln2860_fu_1074_p2) + unsigned(trunc_ln2861_fu_1094_p1));
    add_ln2862_fu_1118_p2 <= std_logic_vector(unsigned(add_ln2861_fu_1098_p2) + unsigned(trunc_ln2861_fu_1094_p1));
    add_ln2872_1_fu_1632_p2 <= std_logic_vector(unsigned(trunc_ln2872_fu_1628_p1) + unsigned(add_ln2872_reg_3720));
    add_ln2872_3_fu_1884_p2 <= std_logic_vector(unsigned(trunc_ln2872_1_reg_3773) + unsigned(zext_ln2869_1_reg_3648));
    add_ln2872_5_fu_1916_p2 <= std_logic_vector(unsigned(zext_ln2869_1_reg_3648) + unsigned(add_ln2859_1_reg_3504));
    add_ln2872_6_fu_1935_p2 <= std_logic_vector(unsigned(trunc_ln2872_2_fu_1931_p1) + unsigned(add_ln2872_5_reg_3793));
    add_ln2872_8_fu_2053_p2 <= std_logic_vector(unsigned(trunc_ln2872_3_fu_2049_p1) + unsigned(add_ln2872_9_reg_3827));
    add_ln2872_9_fu_2021_p2 <= std_logic_vector(unsigned(zext_ln2869_1_reg_3648) + unsigned(trunc_ln2858_reg_3475));
    add_ln2872_fu_1613_p2 <= std_logic_vector(unsigned(zext_ln2869_1_reg_3648) + unsigned(trunc_ln2859_1_reg_3493));
    add_ln2880_2_fu_1669_p2 <= std_logic_vector(unsigned(zext_ln1510_reg_3442) + unsigned(idx_reg_509));
    add_ln2881_1_fu_1686_p2 <= std_logic_vector(unsigned(shl_ln75_fu_1678_p3) + unsigned(empty_reg_3383));
    add_ln2881_fu_1674_p2 <= std_logic_vector(unsigned(trunc_ln2881_reg_3739) + unsigned(add_ln2862_reg_3528));
    add_ln2886_1_fu_1879_p2 <= std_logic_vector(unsigned(zext_ln2840_reg_3462) + unsigned(idx177_reg_531));
    add_ln2889_1_fu_1820_p2 <= std_logic_vector(unsigned(shl_ln2889_1_fu_1812_p3) + unsigned(empty_reg_3383));
    add_ln2889_fu_1807_p2 <= std_logic_vector(unsigned(shl_ln78_fu_1799_p3) + unsigned(add_ln2862_reg_3528));
    add_ln2890_1_fu_1859_p2 <= std_logic_vector(unsigned(shl_ln79_fu_1851_p3) + unsigned(empty_reg_3383));
    add_ln2890_fu_1846_p2 <= std_logic_vector(unsigned(or_ln2890_fu_1840_p2) + unsigned(add_ln2862_reg_3528));
    add_ln2898_2_fu_1972_p2 <= std_logic_vector(unsigned(zext_ln1510_reg_3442) + unsigned(idx179_reg_553));
    add_ln2899_1_fu_2001_p2 <= std_logic_vector(unsigned(shl_ln87_fu_1993_p3) + unsigned(empty_reg_3383));
    add_ln2899_fu_1989_p2 <= std_logic_vector(unsigned(trunc_ln2899_reg_3812) + unsigned(add_ln2862_reg_3528));
    add_ln2904_1_fu_2142_p2 <= std_logic_vector(unsigned(zext_ln2840_reg_3462) + unsigned(idx181_reg_575));
    add_ln2907_1_fu_2083_p2 <= std_logic_vector(unsigned(shl_ln2907_1_fu_2075_p3) + unsigned(empty_reg_3383));
    add_ln2907_fu_2070_p2 <= std_logic_vector(unsigned(shl_ln93_fu_2062_p3) + unsigned(add_ln2862_reg_3528));
    add_ln2908_1_fu_2122_p2 <= std_logic_vector(unsigned(shl_ln94_fu_2114_p3) + unsigned(empty_reg_3383));
    add_ln2908_fu_2109_p2 <= std_logic_vector(unsigned(or_ln2908_fu_2103_p2) + unsigned(add_ln2862_reg_3528));
    add_ln2935_2_fu_3226_p2 <= std_logic_vector(unsigned(trunc_ln2935_3_fu_3222_p1) + unsigned(add_ln2935_3_reg_4092));
    add_ln2935_3_fu_2913_p2 <= std_logic_vector(unsigned(zext_ln2932_2_reg_3901) + unsigned(trunc_ln2858_reg_3475));
    add_ln2935_fu_2867_p2 <= std_logic_vector(unsigned(trunc_ln2935_1_reg_4054) + unsigned(zext_ln2932_2_reg_3901));
    add_ln2943_1_fu_2643_p2 <= std_logic_vector(unsigned(zext_ln1510_reg_3442) + unsigned(idx183_reg_650));
    add_ln2943_fu_2648_p2 <= std_logic_vector(unsigned(x_assign_cast26_reg_3875) + unsigned(indvars_iv62_reg_628));
    add_ln2944_1_fu_2727_p2 <= std_logic_vector(unsigned(shl_ln85_fu_2719_p3) + unsigned(empty_reg_3383));
    add_ln2944_fu_2715_p2 <= std_logic_vector(unsigned(trunc_ln2944_reg_4026) + unsigned(add_ln2862_reg_3528));
    add_ln2947_1_fu_2862_p2 <= std_logic_vector(unsigned(zext_ln2840_reg_3462) + unsigned(idx185_reg_693));
    add_ln2951_1_fu_2803_p2 <= std_logic_vector(unsigned(shl_ln2951_1_fu_2795_p3) + unsigned(empty_reg_3383));
    add_ln2951_fu_2790_p2 <= std_logic_vector(unsigned(shl_ln82_fu_2782_p3) + unsigned(add_ln2862_reg_3528));
    add_ln2952_1_fu_2842_p2 <= std_logic_vector(unsigned(shl_ln83_fu_2834_p3) + unsigned(empty_reg_3383));
    add_ln2952_fu_2829_p2 <= std_logic_vector(unsigned(or_ln2952_fu_2823_p2) + unsigned(add_ln2862_reg_3528));
    add_ln2956_1_fu_3123_p2 <= std_logic_vector(unsigned(zext_ln1510_reg_3442) + unsigned(idx187_reg_726));
    add_ln2956_fu_3128_p2 <= std_logic_vector(unsigned(x_assign_cast26_reg_3875) + unsigned(indvars_iv_reg_704));
    add_ln2958_1_fu_3108_p2 <= std_logic_vector(unsigned(shl_ln92_fu_3100_p3) + unsigned(empty_reg_3383));
    add_ln2958_fu_3095_p2 <= std_logic_vector(unsigned(trunc_ln2958_fu_3091_p1) + unsigned(add_ln2862_reg_3528));
    add_ln2961_1_fu_3338_p2 <= std_logic_vector(unsigned(zext_ln2840_reg_3462) + unsigned(idx189_reg_769));
    add_ln2965_1_fu_3269_p2 <= std_logic_vector(unsigned(shl_ln2965_1_fu_3261_p3) + unsigned(empty_reg_3383));
    add_ln2965_fu_3256_p2 <= std_logic_vector(unsigned(shl_ln90_fu_3248_p3) + unsigned(add_ln2862_reg_3528));
    add_ln2966_1_fu_3308_p2 <= std_logic_vector(unsigned(shl_ln91_fu_3300_p3) + unsigned(empty_reg_3383));
    add_ln2966_fu_3295_p2 <= std_logic_vector(unsigned(or_ln2966_fu_3289_p2) + unsigned(add_ln2862_reg_3528));
    add_ln685_16_fu_2560_p2 <= std_logic_vector(unsigned(add_ln685_fu_2554_p2) + unsigned(grp_fu_866_p2));
    add_ln685_18_fu_3006_p2 <= std_logic_vector(unsigned(w_62_fu_2971_p2) + unsigned(zext_ln1521_1_fu_3002_p1));
    add_ln685_19_fu_3012_p2 <= std_logic_vector(unsigned(add_ln685_18_fu_3006_p2) + unsigned(grp_fu_866_p2));
    add_ln685_fu_2554_p2 <= std_logic_vector(unsigned(w_fu_2519_p2) + unsigned(zext_ln1521_fu_2550_p1));
    add_ln757_4_fu_1744_p2 <= std_logic_vector(unsigned(zext_ln2880_fu_1728_p1) + unsigned(grp_modp_montymul_fu_265_p_dout0));
    add_ln757_fu_2398_p2 <= std_logic_vector(unsigned(zext_ln757_fu_2394_p1) + unsigned(grp_modp_montymul_fu_265_p_dout0));
    and_ln1525_1_fu_2992_p2 <= (select_ln1525_1_fu_2984_p3 and reg_881);
    and_ln1525_fu_2540_p2 <= (select_ln1525_fu_2532_p3 and reg_881);
    and_ln1544_1_fu_3147_p2 <= (z_126_reg_606 and sext_ln1544_1_fu_3143_p1);
    and_ln1544_fu_2667_p2 <= (z_126_reg_606 and sext_ln1544_fu_2663_p1);
    and_ln685_7_fu_2350_p2 <= (select_ln685_9_fu_2342_p3 and reg_881);
    and_ln685_8_fu_2582_p2 <= (select_ln685_10_fu_2574_p3 and reg_881);
    and_ln685_9_fu_3034_p2 <= (select_ln685_11_fu_3026_p3 and reg_881);
    and_ln685_fu_1591_p2 <= (select_ln685_fu_1583_p3 and reg_881);
    and_ln697_2_fu_3174_p2 <= (select_ln697_3_fu_3166_p3 and reg_881);
    and_ln697_fu_2694_p2 <= (select_ln697_fu_2686_p3 and reg_881);
    and_ln757_4_fu_1718_p2 <= (select_ln757_4_fu_1710_p3 and reg_881);
    and_ln757_fu_2384_p2 <= (select_ln757_fu_2376_p3 and reg_881);
    and_ln781_fu_2439_p2 <= (u_133_reg_3865 and trunc_ln779_fu_2424_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_modp_mkgm2_1_fu_826_ap_done)
    begin
        if ((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state14_on_subcall_done)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(ap_block_state18_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state18_on_subcall_done)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(ap_block_state21_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state21_on_subcall_done)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(ap_block_state25_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state25_on_subcall_done)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
        if ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(ap_block_state29_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state29_on_subcall_done)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_780_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(grp_zint_rebuild_CRT_1_fu_780_ap_done)
    begin
        if ((grp_zint_rebuild_CRT_1_fu_780_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(grp_modp_mkgm2_1_fu_826_ap_done)
    begin
        if ((grp_modp_mkgm2_1_fu_826_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;

    ap_ST_fsm_state46_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_841_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_modp_NTT2_ext_1_fu_841_ap_done)
    begin
        if ((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
        if ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state60_blk_assign_proc : process(ap_block_state60_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state60_on_subcall_done)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state14_on_subcall_done_assign_proc : process(in_ntt, grp_modp_NTT2_ext_1_fu_841_ap_done)
    begin
                ap_block_state14_on_subcall_done <= ((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_0));
    end process;


    ap_block_state18_on_subcall_done_assign_proc : process(in_ntt, grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
                ap_block_state18_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_1));
    end process;


    ap_block_state21_on_subcall_done_assign_proc : process(in_ntt, grp_modp_NTT2_ext_1_fu_841_ap_done)
    begin
                ap_block_state21_on_subcall_done <= ((grp_modp_NTT2_ext_1_fu_841_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_0));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(in_ntt, grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
                ap_block_state25_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0) and (in_ntt = ap_const_lv1_1));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(out_ntt, grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
                ap_block_state29_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0) and (out_ntt = ap_const_lv1_0));
    end process;


    ap_block_state60_on_subcall_done_assign_proc : process(out_ntt, grp_modp_iNTT2_ext_1_fu_854_ap_done)
    begin
                ap_block_state60_on_subcall_done <= ((grp_modp_iNTT2_ext_1_fu_854_ap_done = ap_const_logic_0) and (out_ntt = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33, icmp_ln2932_fu_2210_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln2932_fu_2210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state33, icmp_ln2932_fu_2210_p2)
    begin
        if (((icmp_ln2932_fu_2210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compare_n_to_0_fu_1154_p2 <= "1" when (trunc_ln2863_fu_1138_p1 = ap_const_lv61_0) else "0";
    compare_src_dst_fu_1148_p2 <= "1" when (unsigned(fs_fu_1006_p2) > unsigned(data)) else "0";
    empty_336_fu_1169_p1 <= data(2 - 1 downto 0);
    empty_337_fu_1371_p1 <= empty_335_fu_182(2 - 1 downto 0);
    empty_338_fu_1375_p1 <= empty_335_fu_182(15 - 1 downto 0);
    empty_339_fu_1385_p2 <= std_logic_vector(unsigned(index_ptr_cast_fu_1379_p2) + unsigned(empty_reg_3383));
    empty_340_fu_1405_p2 <= std_logic_vector(unsigned(tmp1_reg_3581) + unsigned(empty_337_fu_1371_p1));
    empty_341_fu_1312_p2 <= std_logic_vector(shift_right(unsigned(vla18_q0),to_integer(unsigned('0' & p_cast22_fu_1308_p1(31-1 downto 0)))));
    empty_342_fu_1318_p1 <= empty_341_fu_1312_p2(8 - 1 downto 0);
    empty_343_fu_1410_p2 <= std_logic_vector(unsigned(index_ptr_cast_fu_1379_p2) + unsigned(add_ln2841_reg_3481));
    empty_344_fu_1329_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & p_cast23_fu_1326_p1(4-1 downto 0)))));
    empty_345_fu_1336_p2 <= std_logic_vector(shift_left(unsigned(p_cast6_cast_fu_1322_p1),to_integer(unsigned('0' & p_cast22_fu_1308_p1(31-1 downto 0)))));
    empty_346_fu_1347_p2 <= "1" when (index_ptr_fu_1296_p2 = ap_const_lv64_0) else "0";
    empty_347_fu_1160_p1 <= data(2 - 1 downto 0);
    empty_348_fu_1187_p1 <= index_ptr53_fu_178(15 - 1 downto 0);
    empty_349_fu_1191_p1 <= index_ptr53_fu_178(2 - 1 downto 0);
    empty_350_fu_1195_p2 <= std_logic_vector(unsigned(empty_348_fu_1187_p1) + unsigned(empty_reg_3383));
    empty_351_fu_1215_p2 <= std_logic_vector(unsigned(empty_349_fu_1191_p1) + unsigned(empty_347_reg_3569));
    empty_352_fu_1257_p2 <= std_logic_vector(shift_right(unsigned(vla18_q0),to_integer(unsigned('0' & p_cast24_fu_1253_p1(31-1 downto 0)))));
    empty_353_fu_1263_p1 <= empty_352_fu_1257_p2(8 - 1 downto 0);
    empty_354_fu_1220_p2 <= std_logic_vector(unsigned(empty_348_fu_1187_p1) + unsigned(add_ln2841_reg_3481));
    empty_355_fu_1274_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & p_cast25_fu_1271_p1(4-1 downto 0)))));
    empty_356_fu_1281_p2 <= std_logic_vector(shift_left(unsigned(p_cast11_cast_fu_1267_p1),to_integer(unsigned('0' & p_cast24_fu_1253_p1(31-1 downto 0)))));
    empty_357_fu_1241_p2 <= "1" when (index_increment_fu_1235_p2 = shl_ln2863_reg_3549) else "0";
    empty_fu_922_p1 <= data(15 - 1 downto 0);
    fs_fu_1006_p2 <= std_logic_vector(unsigned(shl_ln_fu_986_p3) + unsigned(data));
    gm_fu_1088_p2 <= std_logic_vector(unsigned(shl_ln69_fu_1080_p3) + unsigned(empty_fu_922_p1));
    grp_fu_866_p2 <= std_logic_vector(unsigned(grp_modp_montymul_fu_255_p_dout0) - unsigned(zext_ln1507_reg_3928));
    grp_fu_871_p4 <= vla18_q1(31 downto 30);
    grp_modp_NTT2_ext_1_fu_841_ap_start <= grp_modp_NTT2_ext_1_fu_841_ap_start_reg;

    grp_modp_NTT2_ext_1_fu_841_p0i_assign_proc : process(in_ntt, p0i_reg_3700, ap_CS_fsm_state14, ap_CS_fsm_state21, p0i_4_reg_3937, ap_CS_fsm_state46, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_modp_NTT2_ext_1_fu_841_p0i <= p0i_4_reg_3937;
        elsif ((((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            grp_modp_NTT2_ext_1_fu_841_p0i <= p0i_reg_3700;
        else 
            grp_modp_NTT2_ext_1_fu_841_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_854_a_assign_proc : process(in_ntt, out_ntt, x_62_reg_3749, x_45_reg_3760, ap_CS_fsm_state18, x_63_reg_3822, x_58_reg_3832, x_46_reg_4041, x_55_reg_4138, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0))) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_55_reg_4138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_46_reg_4041;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0))) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_58_reg_3832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_45_reg_3760;
        elsif (((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_63_reg_3822;
        elsif (((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_modp_iNTT2_ext_1_fu_854_a <= x_62_reg_3749;
        else 
            grp_modp_iNTT2_ext_1_fu_854_a <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_iNTT2_ext_1_fu_854_ap_start <= grp_modp_iNTT2_ext_1_fu_854_ap_start_reg;

    grp_modp_iNTT2_ext_1_fu_854_logn_assign_proc : process(logn, in_ntt, out_ntt, sub_reg_3621, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            grp_modp_iNTT2_ext_1_fu_854_logn <= sub_reg_3621;
        elsif ((((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            grp_modp_iNTT2_ext_1_fu_854_logn <= logn;
        else 
            grp_modp_iNTT2_ext_1_fu_854_logn <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_854_p0i_assign_proc : process(in_ntt, out_ntt, p0i_reg_3700, ap_CS_fsm_state18, p0i_4_reg_3937, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)))) then 
            grp_modp_iNTT2_ext_1_fu_854_p0i <= p0i_4_reg_3937;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            grp_modp_iNTT2_ext_1_fu_854_p0i <= p0i_reg_3700;
        else 
            grp_modp_iNTT2_ext_1_fu_854_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_iNTT2_ext_1_fu_854_stride_assign_proc : process(in_ntt, out_ntt, zext_ln1510_1_reg_3450, zext_ln2840_1_reg_3470, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            grp_modp_iNTT2_ext_1_fu_854_stride <= zext_ln2840_1_reg_3470;
        elsif ((((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            grp_modp_iNTT2_ext_1_fu_854_stride <= zext_ln1510_1_reg_3450;
        else 
            grp_modp_iNTT2_ext_1_fu_854_stride <= "XXXXXXXXX";
        end if; 
    end process;

    grp_modp_mkgm2_1_fu_826_ap_start <= grp_modp_mkgm2_1_fu_826_ap_start_reg;

    grp_modp_mkgm2_1_fu_826_p0i_assign_proc : process(ap_CS_fsm_state10, p0i_reg_3700, p0i_4_reg_3937, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_modp_mkgm2_1_fu_826_p0i <= p0i_4_reg_3937;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_modp_mkgm2_1_fu_826_p0i <= p0i_reg_3700;
        else 
            grp_modp_mkgm2_1_fu_826_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_modp_montymul_fu_255_p_din1 <= grp_modp_montymul_fu_797_a;
    grp_modp_montymul_fu_255_p_din2 <= grp_modp_montymul_fu_797_b;
    grp_modp_montymul_fu_255_p_din3 <= grp_modp_montymul_fu_797_p;
    grp_modp_montymul_fu_255_p_din4 <= grp_modp_montymul_fu_797_p0i;
    grp_modp_montymul_fu_265_p_din1 <= grp_modp_montymul_fu_805_a;
    grp_modp_montymul_fu_265_p_din2 <= grp_modp_montymul_fu_805_b;
    grp_modp_montymul_fu_265_p_din3 <= grp_modp_montymul_fu_805_p;
    grp_modp_montymul_fu_265_p_din4 <= grp_modp_montymul_fu_805_p0i;

    grp_modp_montymul_fu_797_a_assign_proc : process(vla18_q0, vla18_q1, reg_893, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state35, ap_CS_fsm_state48, reg_899, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, ap_CS_fsm_state13, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, icmp_ln781_fu_2444_p2, ap_CS_fsm_state44, ap_CS_fsm_state52, ap_CS_fsm_state17, z_126_reg_606, x_32_reg_671, ap_CS_fsm_state49, x_39_reg_747, z_fu_1605_p2, z_113_fu_2364_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_modp_montymul_fu_797_a <= x_39_reg_747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_modp_montymul_fu_797_a <= x_32_reg_671;
        elsif (((icmp_ln781_fu_2444_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            grp_modp_montymul_fu_797_a <= z_126_reg_606;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_modp_montymul_fu_797_a <= z_113_fu_2364_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_modp_montymul_fu_797_a <= vla18_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_797_a <= vla18_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_modp_montymul_fu_797_a <= reg_899;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_797_a <= reg_893;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_a <= z_fu_1605_p2;
        else 
            grp_modp_montymul_fu_797_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_b_assign_proc : process(vla18_q0, vla18_q1, reg_893, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state35, ap_CS_fsm_state48, reg_899, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, ap_CS_fsm_state13, zext_ln757_12_reg_3754, zext_ln757_11_reg_3955, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, icmp_ln781_fu_2444_p2, ap_CS_fsm_state44, ap_CS_fsm_state52, ap_CS_fsm_state17, r_16_reg_597, ap_CS_fsm_state49, z_fu_1605_p2, z_113_fu_2364_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_modp_montymul_fu_797_b <= zext_ln757_11_reg_3955;
        elsif (((icmp_ln781_fu_2444_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            grp_modp_montymul_fu_797_b <= r_16_reg_597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_modp_montymul_fu_797_b <= z_113_fu_2364_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_modp_montymul_fu_797_b <= vla18_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_modp_montymul_fu_797_b <= zext_ln757_12_reg_3754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_modp_montymul_fu_797_b <= vla18_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_modp_montymul_fu_797_b <= reg_899;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_797_b <= reg_893;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_b <= z_fu_1605_p2;
        else 
            grp_modp_montymul_fu_797_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_p_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state35, ap_CS_fsm_state48, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, zext_ln2871_fu_1544_p1, zext_ln2871_reg_3708, ap_CS_fsm_state13, zext_ln1507_fu_2269_p1, zext_ln1507_reg_3928, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, icmp_ln781_fu_2444_p2, ap_CS_fsm_state44, ap_CS_fsm_state52, ap_CS_fsm_state17, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state48) or ((icmp_ln781_fu_2444_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_modp_montymul_fu_797_p <= zext_ln1507_reg_3928;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_modp_montymul_fu_797_p <= zext_ln1507_fu_2269_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_modp_montymul_fu_797_p <= zext_ln2871_reg_3708;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_p <= zext_ln2871_fu_1544_p1;
        else 
            grp_modp_montymul_fu_797_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_797_p0i_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state35, ap_CS_fsm_state48, ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, zext_ln2871_1_fu_1548_p1, zext_ln2871_1_reg_3714, ap_CS_fsm_state13, zext_ln1507_1_fu_2311_p1, zext_ln1507_1_reg_3944, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, icmp_ln781_fu_2444_p2, ap_CS_fsm_state44, ap_CS_fsm_state52, ap_CS_fsm_state17, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state48) or ((icmp_ln781_fu_2444_p2 = ap_const_lv1_0) and (icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln1507_1_reg_3944;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln1507_1_fu_2311_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln2871_1_reg_3714;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_modp_montymul_fu_797_p0i <= zext_ln2871_1_fu_1548_p1;
        else 
            grp_modp_montymul_fu_797_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_805_a_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, ap_CS_fsm_state13, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, r_16_reg_597, grp_modp_montymul_fu_255_p_dout0)
    begin
        if (((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            grp_modp_montymul_fu_805_a <= r_16_reg_597;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_805_a <= grp_modp_montymul_fu_255_p_dout0;
        else 
            grp_modp_montymul_fu_805_a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_805_b_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, ap_CS_fsm_state13, zext_ln757_12_reg_3754, zext_ln757_11_reg_3955, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2, r_16_reg_597, grp_modp_montymul_fu_255_p_dout0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_modp_montymul_fu_805_b <= zext_ln757_11_reg_3955;
        elsif (((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            grp_modp_montymul_fu_805_b <= r_16_reg_597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_modp_montymul_fu_805_b <= zext_ln757_12_reg_3754;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_805_b <= grp_modp_montymul_fu_255_p_dout0;
        else 
            grp_modp_montymul_fu_805_b <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_805_p_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, zext_ln2871_reg_3708, ap_CS_fsm_state13, zext_ln1507_reg_3928, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or ((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_modp_montymul_fu_805_p <= zext_ln1507_reg_3928;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_805_p <= zext_ln2871_reg_3708;
        else 
            grp_modp_montymul_fu_805_p <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_modp_montymul_fu_805_p0i_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state56, zext_ln2871_1_reg_3714, ap_CS_fsm_state13, zext_ln1507_1_reg_3944, ap_CS_fsm_state37, ap_CS_fsm_state38, icmp_ln779_fu_2428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state36) or ((icmp_ln779_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_modp_montymul_fu_805_p0i <= zext_ln1507_1_reg_3944;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_modp_montymul_fu_805_p0i <= zext_ln2871_1_reg_3714;
        else 
            grp_modp_montymul_fu_805_p0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_zint_rebuild_CRT_1_fu_780_ap_start <= grp_zint_rebuild_CRT_1_fu_780_ap_start_reg;

    grp_zint_rebuild_CRT_1_fu_780_xx_assign_proc : process(add_ln2841_reg_3481, x_61_reg_3510, ap_CS_fsm_state32, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_zint_rebuild_CRT_1_fu_780_xx <= x_61_reg_3510;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_zint_rebuild_CRT_1_fu_780_xx <= add_ln2841_reg_3481;
        else 
            grp_zint_rebuild_CRT_1_fu_780_xx <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_15_fu_2433_p2 <= std_logic_vector(unsigned(i_reg_586) + unsigned(ap_const_lv32_1));
    icmp_ln1520_1_fu_2965_p2 <= "1" when (u_208_reg_738 = ap_const_lv9_0) else "0";
    icmp_ln1520_fu_2513_p2 <= "1" when (u_reg_662 = ap_const_lv9_0) else "0";
    icmp_ln2869_fu_1438_p2 <= "1" when (u_134_fu_186 = u_204_reg_3434) else "0";
    icmp_ln2880_fu_1617_p2 <= "1" when (v_reg_498 = n_reg_3417) else "0";
    icmp_ln2886_fu_1780_p2 <= "1" when (v_38_reg_520 = trunc_ln_reg_3426) else "0";
    icmp_ln2898_fu_1920_p2 <= "1" when (v_42_reg_542 = n_reg_3417) else "0";
    icmp_ln2904_fu_2038_p2 <= "1" when (v_48_reg_564 = trunc_ln_reg_3426) else "0";
    icmp_ln2932_fu_2210_p2 <= "1" when (unsigned(u_135_fu_190) < unsigned(tlen_reg_3457)) else "0";
    icmp_ln2943_fu_2450_p2 <= "1" when (v_37_reg_638 = n_reg_3417) else "0";
    icmp_ln2947_fu_2763_p2 <= "1" when (v_40_reg_682 = trunc_ln_reg_3426) else "0";
    icmp_ln2956_fu_2898_p2 <= "1" when (v_44_reg_714 = n_reg_3417) else "0";
    icmp_ln2961_fu_3211_p2 <= "1" when (v_46_reg_758 = trunc_ln_reg_3426) else "0";
    icmp_ln779_fu_2428_p2 <= "1" when (unsigned(shl_ln779_fu_2418_p2) > unsigned(x_assign_95_cast_reg_3870)) else "0";
    icmp_ln781_fu_2444_p2 <= "1" when (and_ln781_fu_2439_p2 = ap_const_lv8_0) else "0";
    igm_fu_1112_p2 <= std_logic_vector(unsigned(shl_ln70_fu_1104_p3) + unsigned(empty_fu_922_p1));
    index_increment_fu_1235_p2 <= std_logic_vector(unsigned(index_ptr53_fu_178) + unsigned(ap_const_lv64_1));
    index_ptr_cast_fu_1379_p2 <= std_logic_vector(unsigned(empty_338_fu_1375_p1) + unsigned(ap_const_lv15_7FFF));
    index_ptr_fu_1296_p2 <= std_logic_vector(unsigned(empty_335_fu_182) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    lshr_ln1524_1_fu_2944_p4 <= add_ln1524_5_fu_2939_p2(14 downto 2);
    lshr_ln1544_3_fu_2624_p4 <= add_ln1544_3_fu_2619_p2(14 downto 2);
    lshr_ln1544_4_fu_3076_p4 <= add_ln1544_5_fu_3071_p2(14 downto 2);
    lshr_ln2881_1_fu_1691_p4 <= add_ln2881_1_fu_1686_p2(14 downto 2);
    lshr_ln2899_1_fu_2006_p4 <= add_ln2899_1_fu_2001_p2(14 downto 2);
    lshr_ln68_fu_1825_p4 <= add_ln2889_1_fu_1820_p2(14 downto 2);
    lshr_ln69_fu_1864_p4 <= add_ln2890_1_fu_1859_p2(14 downto 2);
    lshr_ln70_fu_1901_p4 <= x_50_fu_1896_p2(14 downto 2);
    lshr_ln71_fu_2492_p4 <= add_ln1524_3_fu_2487_p2(14 downto 2);
    lshr_ln72_fu_2808_p4 <= add_ln2951_1_fu_2803_p2(14 downto 2);
    lshr_ln73_fu_2847_p4 <= add_ln2952_1_fu_2842_p2(14 downto 2);
    lshr_ln74_fu_2883_p4 <= x_53_fu_2878_p2(14 downto 2);
    lshr_ln75_fu_2732_p4 <= add_ln2944_1_fu_2727_p2(14 downto 2);
    lshr_ln76_fu_1953_p4 <= x_54_fu_1948_p2(14 downto 2);
    lshr_ln77_fu_3274_p4 <= add_ln2965_1_fu_3269_p2(14 downto 2);
    lshr_ln78_fu_3313_p4 <= add_ln2966_1_fu_3308_p2(14 downto 2);
    lshr_ln81_fu_2088_p4 <= add_ln2907_1_fu_2083_p2(14 downto 2);
    lshr_ln82_fu_2127_p4 <= add_ln2908_1_fu_2122_p2(14 downto 2);
    lshr_ln83_fu_2159_p4 <= x_60_fu_2154_p2(14 downto 2);
    lshr_ln_fu_1650_p4 <= x_fu_1645_p2(14 downto 2);
    mul_ln2858_fu_976_p0 <= mul_ln2858_fu_976_p00(8 - 1 downto 0);
    mul_ln2858_fu_976_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),61));
    mul_ln2858_fu_976_p1 <= n_fu_930_p2(61 downto 1);
    mul_ln656_14_fu_2233_p0 <= sext_ln1507_fu_2219_p1(25 - 1 downto 0);
    mul_ln656_14_fu_2233_p1 <= zext_ln656_4_fu_2229_p1(24 - 1 downto 0);
    mul_ln656_fu_1471_p1 <= zext_ln656_fu_1467_p1(24 - 1 downto 0);
    mul_ln657_14_fu_2251_p0 <= sext_ln1507_fu_2219_p1(25 - 1 downto 0);
    mul_ln657_fu_1489_p0 <= sext_ln2871_reg_3686(25 - 1 downto 0);
    mul_ln658_14_fu_2273_p0 <= sext_ln1507_reg_3915(25 - 1 downto 0);
    mul_ln658_fu_1504_p0 <= sext_ln2871_reg_3686(25 - 1 downto 0);
    mul_ln659_5_fu_2288_p0 <= sext_ln1507_reg_3915(25 - 1 downto 0);
    mul_ln659_fu_1521_p0 <= sext_ln2871_reg_3686(25 - 1 downto 0);
    n_fu_930_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1),to_integer(unsigned('0' & zext_ln2847_fu_926_p1(31-1 downto 0)))));
    or_ln2890_fu_1840_p2 <= (shl_ln78_fu_1799_p3 or ap_const_lv13_1);
    or_ln2908_fu_2103_p2 <= (shl_ln93_fu_2062_p3 or ap_const_lv13_1);
    or_ln2952_fu_2823_p2 <= (shl_ln82_fu_2782_p3 or ap_const_lv13_1);
    or_ln2966_fu_3289_p2 <= (shl_ln90_fu_3248_p3 or ap_const_lv13_1);
    out_ntt_read_read_fu_200_p2 <= out_ntt;
    p0i_4_fu_2305_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_5_fu_2288_p2));
    p0i_4_fu_2305_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_69_fu_2283_p2));
    p0i_fu_1538_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_fu_1521_p2));
    p0i_fu_1538_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_65_fu_1515_p2));
    p_cast11_cast_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_353_fu_1263_p1),32));
    p_cast12_cast_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_169_reg_3597),64));
    p_cast22_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_165_fu_1301_p3),32));
    p_cast23_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_340_reg_3634),4));
    p_cast24_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_168_fu_1246_p3),32));
    p_cast25_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_351_reg_3591),4));
    p_cast4_cast_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_fu_1390_p4),64));
    p_cast6_cast_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_342_fu_1318_p1),32));
    p_cast7_cast_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_reg_3640),64));
    p_cast9_cast_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_fu_1200_p4),64));
    r_17_fu_2404_p4 <= add_ln757_fu_2398_p2(31 downto 1);
    select_ln1525_1_fu_2984_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_200_fu_2976_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln1525_fu_2532_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_197_fu_2524_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_10_fu_2574_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_198_fu_2566_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_11_fu_3026_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_201_fu_3018_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_9_fu_2342_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_196_fu_2334_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln685_fu_1583_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_195_fu_1575_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_3_fu_3166_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_202_fu_3158_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln697_fu_2686_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_199_fu_2678_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_4_fu_1710_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln757_fu_1706_p1(0) = '1') else 
        ap_const_lv25_0;
    select_ln757_fu_2376_p3 <= 
        ap_const_lv25_1FFFFFF when (trunc_ln735_fu_2372_p1(0) = '1') else 
        ap_const_lv25_0;
    sext_ln1507_fu_2219_p0 <= PRIMES_p_q0;
        sext_ln1507_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1507_fu_2219_p0),31));

        sext_ln1521_1_fu_2998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1525_1_fu_2992_p2),31));

        sext_ln1521_fu_2546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln1525_fu_2540_p2),31));

        sext_ln1524_1_fu_2465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(u_reg_662),13));

        sext_ln1524_fu_2917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(u_208_reg_738),13));

        sext_ln1544_1_fu_3143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1544_1_fu_3137_p2),32));

        sext_ln1544_fu_2663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1544_fu_2657_p2),32));

    sext_ln2871_fu_1457_p0 <= PRIMES_p_q0;
        sext_ln2871_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln2871_fu_1457_p0),31));

        sext_ln2880_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_4_fu_1718_p2),31));

        sext_ln685_7_fu_2356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_7_fu_2350_p2),31));

        sext_ln685_8_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_8_fu_2582_p2),31));

        sext_ln685_9_fu_3040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_9_fu_3034_p2),31));

        sext_ln685_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln685_fu_1591_p2),31));

        sext_ln697_2_fu_3180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_2_fu_3174_p2),31));

        sext_ln697_fu_2700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln697_fu_2694_p2),31));

        sext_ln757_fu_2390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(and_ln757_fu_2384_p2),31));

    shl_ln1524_1_fu_2931_p3 <= (add_ln1524_6_fu_2926_p2 & ap_const_lv2_0);
    shl_ln1544_1_fu_3063_p3 <= (add_ln1544_4_fu_3058_p2 & ap_const_lv2_0);
    shl_ln2859_1_fu_1060_p3 <= (add_ln2859_1_fu_1054_p2 & ap_const_lv2_0);
    shl_ln2859_2_fu_1024_p3 <= (mul_ln2858_fu_976_p2 & ap_const_lv1_0);
    shl_ln2859_fu_1018_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1510_fu_956_p1),to_integer(unsigned('0' & zext_ln2847_fu_926_p1(31-1 downto 0)))));
    shl_ln2863_fu_1142_p2 <= std_logic_vector(shift_left(unsigned(shl_ln2859_fu_1018_p2),to_integer(unsigned('0' & ap_const_lv64_3(31-1 downto 0)))));
    shl_ln2872_1_fu_1888_p3 <= (add_ln2872_3_fu_1884_p2 & ap_const_lv2_0);
    shl_ln2872_2_fu_1940_p3 <= (add_ln2872_6_fu_1935_p2 & ap_const_lv2_0);
    shl_ln2872_3_fu_2147_p3 <= (add_ln2872_8_reg_3845 & ap_const_lv2_0);
    shl_ln2889_1_fu_1812_p3 <= (add_ln2889_fu_1807_p2 & ap_const_lv2_0);
    shl_ln2907_1_fu_2075_p3 <= (add_ln2907_fu_2070_p2 & ap_const_lv2_0);
    shl_ln2935_1_fu_3231_p3 <= (add_ln2935_2_fu_3226_p2 & ap_const_lv2_0);
    shl_ln2951_1_fu_2795_p3 <= (add_ln2951_fu_2790_p2 & ap_const_lv2_0);
    shl_ln2965_1_fu_3261_p3 <= (add_ln2965_fu_3256_p2 & ap_const_lv2_0);
    shl_ln685_fu_2322_p2 <= std_logic_vector(shift_left(unsigned(z_110_fu_2316_p2),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln69_fu_1080_p3 <= (add_ln2860_fu_1074_p2 & ap_const_lv2_0);
    shl_ln70_fu_1104_p3 <= (add_ln2861_fu_1098_p2 & ap_const_lv2_0);
    shl_ln71_fu_1124_p3 <= (add_ln2862_fu_1118_p2 & ap_const_lv2_0);
    shl_ln72_fu_1557_p3 <= (sub_ln685_6_fu_1552_p2 & ap_const_lv1_0);
    shl_ln73_fu_1732_p3 <= (add_ln2872_reg_3720 & ap_const_lv2_0);
    shl_ln74_fu_1637_p3 <= (add_ln2872_1_fu_1632_p2 & ap_const_lv2_0);
    shl_ln75_fu_1678_p3 <= (add_ln2881_fu_1674_p2 & ap_const_lv2_0);
    shl_ln76_fu_1764_p3 <= (u_134_fu_186 & ap_const_lv2_0);
    shl_ln779_fu_2418_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & i_reg_586(31-1 downto 0)))));
    shl_ln77_fu_2747_p3 <= (u_135_fu_190 & ap_const_lv2_0);
    shl_ln78_fu_1799_p3 <= (trunc_ln2889_fu_1795_p1 & ap_const_lv1_0);
    shl_ln79_fu_1851_p3 <= (add_ln2890_fu_1846_p2 & ap_const_lv2_0);
    shl_ln80_fu_2479_p3 <= (add_ln152431_fu_2474_p2 & ap_const_lv2_0);
    shl_ln81_fu_2871_p3 <= (add_ln2935_reg_4074 & ap_const_lv2_0);
    shl_ln82_fu_2782_p3 <= (trunc_ln2951_fu_2778_p1 & ap_const_lv1_0);
    shl_ln83_fu_2834_p3 <= (add_ln2952_fu_2829_p2 & ap_const_lv2_0);
    shl_ln84_fu_2611_p3 <= (add_ln1544_fu_2606_p2 & ap_const_lv2_0);
    shl_ln85_fu_2719_p3 <= (add_ln2944_fu_2715_p2 & ap_const_lv2_0);
    shl_ln86_fu_1977_p3 <= (add_ln2872_5_reg_3793 & ap_const_lv2_0);
    shl_ln87_fu_1993_p3 <= (add_ln2899_fu_1989_p2 & ap_const_lv2_0);
    shl_ln88_fu_3199_p3 <= (add_ln2935_3_reg_4092 & ap_const_lv2_0);
    shl_ln89_fu_2025_p3 <= (add_ln2872_9_fu_2021_p2 & ap_const_lv2_0);
    shl_ln90_fu_3248_p3 <= (trunc_ln2965_fu_3244_p1 & ap_const_lv1_0);
    shl_ln91_fu_3300_p3 <= (add_ln2966_fu_3295_p2 & ap_const_lv2_0);
    shl_ln92_fu_3100_p3 <= (add_ln2958_fu_3095_p2 & ap_const_lv2_0);
    shl_ln93_fu_2062_p3 <= (trunc_ln2907_fu_2058_p1 & ap_const_lv1_0);
    shl_ln94_fu_2114_p3 <= (add_ln2908_fu_2109_p2 & ap_const_lv2_0);
    shl_ln_fu_986_p3 <= (mul_ln2858_fu_976_p2 & ap_const_lv3_0);
    sub_fu_1358_p2 <= std_logic_vector(unsigned(logn) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_ln1544_1_fu_3137_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1544_6_fu_3133_p1));
    sub_ln1544_fu_2657_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(zext_ln1544_4_fu_2653_p1));
    sub_ln685_5_fu_2328_p2 <= std_logic_vector(unsigned(shl_ln685_fu_2322_p2) - unsigned(zext_ln1507_fu_2269_p1));
    sub_ln685_6_fu_1552_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(trunc_ln2871_reg_3681));
    sub_ln685_fu_1569_p2 <= std_logic_vector(unsigned(zext_ln685_fu_1565_p1) - unsigned(zext_ln2871_fu_1544_p1));
    sub_ln697_3_fu_3153_p2 <= std_logic_vector(unsigned(x_65_reg_4112) - unsigned(and_ln1544_1_fu_3147_p2));
    sub_ln697_fu_2673_p2 <= std_logic_vector(unsigned(x_64_reg_4015) - unsigned(and_ln1544_fu_2667_p2));
    t1_fu_1132_p2 <= std_logic_vector(unsigned(shl_ln71_fu_1124_p3) + unsigned(empty_fu_922_p1));
    tmp1_fu_1173_p2 <= std_logic_vector(unsigned(empty_336_fu_1169_p1) + unsigned(ap_const_lv2_3));
    tmp_164_fu_1390_p4 <= empty_339_fu_1385_p2(14 downto 2);
    tmp_165_fu_1301_p3 <= (empty_340_reg_3634 & ap_const_lv3_0);
    tmp_167_fu_1200_p4 <= empty_350_fu_1195_p2(14 downto 2);
    tmp_168_fu_1246_p3 <= (empty_351_reg_3591 & ap_const_lv3_0);
    tmp_195_fu_1575_p3 <= sub_ln685_fu_1569_p2(31 downto 31);
    tmp_196_fu_2334_p3 <= sub_ln685_5_fu_2328_p2(31 downto 31);
    tmp_197_fu_2524_p3 <= w_fu_2519_p2(31 downto 31);
    tmp_198_fu_2566_p3 <= add_ln685_16_fu_2560_p2(31 downto 31);
    tmp_199_fu_2678_p3 <= sub_ln697_fu_2673_p2(31 downto 31);
    tmp_200_fu_2976_p3 <= w_62_fu_2971_p2(31 downto 31);
    tmp_201_fu_3018_p3 <= add_ln685_19_fu_3012_p2(31 downto 31);
    tmp_202_fu_3158_p3 <= sub_ln697_3_fu_3153_p2(31 downto 31);
    trunc_ln1507_fu_2215_p0 <= PRIMES_p_q0;
    trunc_ln1507_fu_2215_p1 <= trunc_ln1507_fu_2215_p0(24 - 1 downto 0);
    trunc_ln2858_1_fu_998_p3 <= (trunc_ln2858_2_fu_994_p1 & ap_const_lv3_0);
    trunc_ln2858_2_fu_994_p1 <= mul_ln2858_fu_976_p2(12 - 1 downto 0);
    trunc_ln2858_fu_982_p1 <= mul_ln2858_fu_976_p2(13 - 1 downto 0);
    trunc_ln2859_1_fu_1032_p3 <= (trunc_ln2858_2_fu_994_p1 & ap_const_lv1_0);
    trunc_ln2859_2_fu_1044_p1 <= shl_ln2859_fu_1018_p2(13 - 1 downto 0);
    trunc_ln2859_fu_1040_p1 <= shl_ln2859_fu_1018_p2(62 - 1 downto 0);
    trunc_ln2861_fu_1094_p1 <= n_fu_930_p2(13 - 1 downto 0);
    trunc_ln2863_fu_1138_p1 <= shl_ln2859_fu_1018_p2(61 - 1 downto 0);
    trunc_ln2871_fu_1453_p0 <= PRIMES_p_q0;
    trunc_ln2871_fu_1453_p1 <= trunc_ln2871_fu_1453_p0(24 - 1 downto 0);
    trunc_ln2872_1_fu_1791_p1 <= idx177_reg_531(13 - 1 downto 0);
    trunc_ln2872_2_fu_1931_p1 <= idx179_reg_553(13 - 1 downto 0);
    trunc_ln2872_3_fu_2049_p1 <= idx181_reg_575(13 - 1 downto 0);
    trunc_ln2872_fu_1628_p1 <= idx_reg_509(13 - 1 downto 0);
    trunc_ln2881_fu_1665_p1 <= v_reg_498(13 - 1 downto 0);
    trunc_ln2889_fu_1795_p1 <= v_38_reg_520(12 - 1 downto 0);
    trunc_ln2899_fu_1968_p1 <= v_42_reg_542(13 - 1 downto 0);
    trunc_ln2907_fu_2058_p1 <= v_48_reg_564(12 - 1 downto 0);
    trunc_ln2935_1_fu_2774_p1 <= idx185_reg_693(13 - 1 downto 0);
    trunc_ln2935_2_fu_2909_p1 <= idx187_reg_726(13 - 1 downto 0);
    trunc_ln2935_3_fu_3222_p1 <= idx189_reg_769(13 - 1 downto 0);
    trunc_ln2935_fu_2461_p1 <= idx183_reg_650(13 - 1 downto 0);
    trunc_ln2943_fu_2602_p1 <= indvars_iv62_reg_628(13 - 1 downto 0);
    trunc_ln2944_fu_2639_p1 <= v_37_reg_638(13 - 1 downto 0);
    trunc_ln2951_fu_2778_p1 <= v_40_reg_682(12 - 1 downto 0);
    trunc_ln2956_fu_3054_p1 <= indvars_iv_reg_704(13 - 1 downto 0);
    trunc_ln2958_fu_3091_p1 <= v_44_reg_714(13 - 1 downto 0);
    trunc_ln2965_fu_3244_p1 <= v_46_reg_758(12 - 1 downto 0);
    trunc_ln735_fu_2372_p1 <= grp_modp_montymul_fu_265_p_dout0(1 - 1 downto 0);
    trunc_ln757_fu_1706_p1 <= grp_modp_montymul_fu_265_p_dout0(1 - 1 downto 0);
    trunc_ln779_fu_2424_p1 <= shl_ln779_fu_2418_p2(8 - 1 downto 0);
    u_133_fu_2178_p2 <= std_logic_vector(unsigned(u_204_reg_3434) + unsigned(ap_const_lv8_FF));
    u_207_fu_2507_p2 <= std_logic_vector(signed(u_reg_662) + signed(ap_const_lv9_1FF));
    u_209_fu_2959_p2 <= std_logic_vector(signed(u_208_reg_738) + signed(ap_const_lv9_1FF));
    u_210_fu_3347_p2 <= std_logic_vector(unsigned(u_135_fu_190) + unsigned(ap_const_lv8_1));
    u_211_fu_1443_p2 <= std_logic_vector(unsigned(u_134_fu_186) + unsigned(ap_const_lv8_1));
    v_39_fu_1622_p2 <= std_logic_vector(unsigned(v_reg_498) + unsigned(ap_const_lv64_1));
    v_41_fu_1785_p2 <= std_logic_vector(unsigned(v_38_reg_520) + unsigned(ap_const_lv63_1));
    v_43_fu_2768_p2 <= std_logic_vector(unsigned(v_40_reg_682) + unsigned(ap_const_lv63_1));
    v_45_fu_2455_p2 <= std_logic_vector(unsigned(v_37_reg_638) + unsigned(ap_const_lv64_1));
    v_47_fu_1925_p2 <= std_logic_vector(unsigned(v_42_reg_542) + unsigned(ap_const_lv64_1));
    v_49_fu_3216_p2 <= std_logic_vector(unsigned(v_46_reg_758) + unsigned(ap_const_lv63_1));
    v_50_fu_2903_p2 <= std_logic_vector(unsigned(v_44_reg_714) + unsigned(ap_const_lv64_1));
    v_51_fu_2043_p2 <= std_logic_vector(unsigned(v_48_reg_564) + unsigned(ap_const_lv63_1));

    vla18_address0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3554, compare_n_to_0_reg_3558, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln2886_fu_1780_p2, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2904_fu_2038_p2, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state51, ap_CS_fsm_state54, ap_CS_fsm_state55, icmp_ln2961_fu_3211_p2, grp_zint_rebuild_CRT_1_fu_780_vla18_address0, grp_modp_mkgm2_1_fu_826_vla18_address0, grp_modp_NTT2_ext_1_fu_841_vla18_address0, grp_modp_iNTT2_ext_1_fu_854_vla18_address0, ap_CS_fsm_state12, ap_CS_fsm_state45, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, p_cast9_cast_fu_1210_p1, p_cast12_cast_fu_1288_p1, p_cast7_cast_fu_1343_p1, p_cast4_cast_fu_1400_p1, zext_ln2881_fu_1660_p1, zext_ln2881_1_fu_1701_p1, zext_ln2890_fu_1874_p1, zext_ln2907_fu_2098_p1, zext_ln2944_fu_2742_p1, zext_ln2951_fu_2818_p1, zext_ln1524_1_fu_2954_p1, zext_ln2958_fu_3195_p1, zext_ln2965_fu_3284_p1)
    begin
        if (((icmp_ln2961_fu_3211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            vla18_address0 <= zext_ln2965_fu_3284_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            vla18_address0 <= zext_ln2958_fu_3195_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            vla18_address0 <= zext_ln1524_1_fu_2954_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            vla18_address0 <= zext_ln2951_fu_2818_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            vla18_address0 <= zext_ln2944_fu_2742_p1(13 - 1 downto 0);
        elsif (((icmp_ln2904_fu_2038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_address0 <= zext_ln2907_fu_2098_p1(13 - 1 downto 0);
        elsif (((icmp_ln2886_fu_1780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            vla18_address0 <= zext_ln2890_fu_1874_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vla18_address0 <= zext_ln2881_1_fu_1701_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            vla18_address0 <= zext_ln2881_fu_1660_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vla18_address0 <= p_cast4_cast_fu_1400_p1(13 - 1 downto 0);
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_address0 <= p_cast7_cast_fu_1343_p1(13 - 1 downto 0);
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_address0 <= p_cast12_cast_fu_1288_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            vla18_address0 <= p_cast9_cast_fu_1210_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_address0 <= grp_modp_iNTT2_ext_1_fu_854_vla18_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_address0 <= grp_modp_NTT2_ext_1_fu_841_vla18_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla18_address0 <= grp_modp_mkgm2_1_fu_826_vla18_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_address0 <= grp_zint_rebuild_CRT_1_fu_780_vla18_address0;
        else 
            vla18_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_address1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln2886_fu_1780_p2, ap_CS_fsm_state18, ap_CS_fsm_state19, icmp_ln2898_fu_1920_p2, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2904_fu_2038_p2, ap_CS_fsm_state32, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state55, icmp_ln2961_fu_3211_p2, grp_zint_rebuild_CRT_1_fu_780_vla18_address1, grp_modp_NTT2_ext_1_fu_841_vla18_address1, grp_modp_iNTT2_ext_1_fu_854_vla18_address1, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state49, ap_CS_fsm_state57, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, zext_ln2889_fu_1835_p1, zext_ln2891_fu_1911_p1, zext_ln2899_fu_1963_p1, zext_ln2899_1_fu_2016_p1, zext_ln2908_fu_2137_p1, zext_ln2909_fu_2169_p1, zext_ln1524_fu_2502_p1, zext_ln1544_fu_2634_p1, zext_ln2952_fu_2857_p1, zext_ln2953_fu_2893_p1, zext_ln1544_5_fu_3086_p1, zext_ln2966_fu_3323_p1, zext_ln2967_fu_3343_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            vla18_address1 <= zext_ln2967_fu_3343_p1(13 - 1 downto 0);
        elsif (((icmp_ln2961_fu_3211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            vla18_address1 <= zext_ln2966_fu_3323_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            vla18_address1 <= zext_ln1544_5_fu_3086_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            vla18_address1 <= zext_ln2953_fu_2893_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            vla18_address1 <= zext_ln2952_fu_2857_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            vla18_address1 <= zext_ln1544_fu_2634_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            vla18_address1 <= zext_ln1524_fu_2502_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla18_address1 <= zext_ln2909_fu_2169_p1(13 - 1 downto 0);
        elsif (((icmp_ln2904_fu_2038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            vla18_address1 <= zext_ln2908_fu_2137_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_address1 <= zext_ln2899_1_fu_2016_p1(13 - 1 downto 0);
        elsif (((icmp_ln2898_fu_1920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            vla18_address1 <= zext_ln2899_fu_1963_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            vla18_address1 <= zext_ln2891_fu_1911_p1(13 - 1 downto 0);
        elsif (((icmp_ln2886_fu_1780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            vla18_address1 <= zext_ln2889_fu_1835_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_address1 <= grp_modp_iNTT2_ext_1_fu_854_vla18_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_address1 <= grp_modp_NTT2_ext_1_fu_841_vla18_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_address1 <= grp_zint_rebuild_CRT_1_fu_780_vla18_address1;
        else 
            vla18_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_ce0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3554, compare_n_to_0_reg_3558, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln2886_fu_1780_p2, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2904_fu_2038_p2, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state51, ap_CS_fsm_state54, ap_CS_fsm_state55, icmp_ln2961_fu_3211_p2, grp_zint_rebuild_CRT_1_fu_780_vla18_ce0, grp_modp_mkgm2_1_fu_826_vla18_ce0, grp_modp_NTT2_ext_1_fu_841_vla18_ce0, grp_modp_iNTT2_ext_1_fu_854_vla18_ce0, ap_CS_fsm_state12, ap_CS_fsm_state45, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln2961_fu_3211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln2904_fu_2038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln2886_fu_1780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            vla18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_ce0 <= grp_modp_iNTT2_ext_1_fu_854_vla18_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_ce0 <= grp_modp_NTT2_ext_1_fu_841_vla18_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla18_ce0 <= grp_modp_mkgm2_1_fu_826_vla18_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_ce0 <= grp_zint_rebuild_CRT_1_fu_780_vla18_ce0;
        else 
            vla18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_ce1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln2886_fu_1780_p2, ap_CS_fsm_state18, ap_CS_fsm_state19, icmp_ln2898_fu_1920_p2, ap_CS_fsm_state21, ap_CS_fsm_state22, icmp_ln2904_fu_2038_p2, ap_CS_fsm_state32, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state55, icmp_ln2961_fu_3211_p2, grp_zint_rebuild_CRT_1_fu_780_vla18_ce1, grp_modp_NTT2_ext_1_fu_841_vla18_ce1, grp_modp_iNTT2_ext_1_fu_854_vla18_ce1, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state49, ap_CS_fsm_state57, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((icmp_ln2961_fu_3211_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln2904_fu_2038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln2898_fu_1920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln2886_fu_1780_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            vla18_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_ce1 <= grp_modp_iNTT2_ext_1_fu_854_vla18_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_ce1 <= grp_modp_NTT2_ext_1_fu_841_vla18_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_ce1 <= grp_zint_rebuild_CRT_1_fu_780_vla18_ce1;
        else 
            vla18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_d0_assign_proc : process(vla18_q0, in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3554, compare_n_to_0_reg_3558, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state54, grp_zint_rebuild_CRT_1_fu_780_vla18_d0, grp_modp_mkgm2_1_fu_826_vla18_d0, grp_modp_NTT2_ext_1_fu_841_vla18_d0, grp_modp_iNTT2_ext_1_fu_854_vla18_d0, ap_CS_fsm_state12, ap_CS_fsm_state45, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, empty_356_fu_1281_p2, empty_345_fu_1336_p2, z_121_fu_2708_p2, z_123_fu_3188_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            vla18_d0 <= z_123_fu_3188_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            vla18_d0 <= z_121_fu_2708_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vla18_d0 <= vla18_q0;
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_d0 <= empty_345_fu_1336_p2;
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_d0 <= empty_356_fu_1281_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_d0 <= grp_modp_iNTT2_ext_1_fu_854_vla18_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_d0 <= grp_modp_NTT2_ext_1_fu_841_vla18_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla18_d0 <= grp_modp_mkgm2_1_fu_826_vla18_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_d0 <= grp_zint_rebuild_CRT_1_fu_780_vla18_d0;
        else 
            vla18_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_d1_assign_proc : process(vla18_q1, in_ntt, out_ntt, reg_899, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state54, grp_zint_rebuild_CRT_1_fu_780_vla18_d1, grp_modp_NTT2_ext_1_fu_841_vla18_d1, grp_modp_iNTT2_ext_1_fu_854_vla18_d1, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state49, ap_CS_fsm_state57, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, grp_modp_montymul_fu_255_p_dout0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            vla18_d1 <= reg_899;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            vla18_d1 <= vla18_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            vla18_d1 <= grp_modp_montymul_fu_255_p_dout0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_d1 <= grp_modp_iNTT2_ext_1_fu_854_vla18_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_d1 <= grp_modp_NTT2_ext_1_fu_841_vla18_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_d1 <= grp_zint_rebuild_CRT_1_fu_780_vla18_d1;
        else 
            vla18_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_we0_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state10, compare_src_dst_reg_3554, compare_n_to_0_reg_3558, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state54, grp_zint_rebuild_CRT_1_fu_780_vla18_we0, grp_modp_mkgm2_1_fu_826_vla18_we0, grp_modp_NTT2_ext_1_fu_841_vla18_we0, grp_modp_iNTT2_ext_1_fu_854_vla18_we0, ap_CS_fsm_state12, ap_CS_fsm_state45, ap_CS_fsm_state41, ap_CS_fsm_state53, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60, empty_355_fu_1274_p2, empty_344_fu_1329_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            vla18_we0 <= ap_const_lv4_F;
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_we0 <= empty_344_fu_1329_p2;
        elsif (((compare_n_to_0_reg_3558 = ap_const_lv1_0) and (compare_src_dst_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_we0 <= empty_355_fu_1274_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_we0 <= grp_modp_iNTT2_ext_1_fu_854_vla18_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_we0 <= grp_modp_NTT2_ext_1_fu_841_vla18_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            vla18_we0 <= grp_modp_mkgm2_1_fu_826_vla18_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_we0 <= grp_zint_rebuild_CRT_1_fu_780_vla18_we0;
        else 
            vla18_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla18_we1_assign_proc : process(in_ntt, out_ntt, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state32, ap_CS_fsm_state46, ap_CS_fsm_state54, grp_zint_rebuild_CRT_1_fu_780_vla18_we1, grp_modp_NTT2_ext_1_fu_841_vla18_we1, grp_modp_iNTT2_ext_1_fu_854_vla18_we1, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state49, ap_CS_fsm_state57, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            vla18_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state27) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((in_ntt = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state60) and (out_ntt = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (out_ntt = ap_const_lv1_0)))) then 
            vla18_we1 <= grp_modp_iNTT2_ext_1_fu_854_vla18_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((in_ntt = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            vla18_we1 <= grp_modp_NTT2_ext_1_fu_841_vla18_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            vla18_we1 <= grp_zint_rebuild_CRT_1_fu_780_vla18_we1;
        else 
            vla18_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    w_62_fu_2971_p2 <= std_logic_vector(unsigned(vla18_q0) - unsigned(zext_ln1507_reg_3928));
    w_fu_2519_p2 <= std_logic_vector(unsigned(vla18_q1) - unsigned(zext_ln1507_reg_3928));
    x_45_fu_1775_p2 <= std_logic_vector(unsigned(zext_ln2886_fu_1771_p1) + unsigned(empty_reg_3383));
    x_46_fu_2758_p2 <= std_logic_vector(unsigned(zext_ln2947_fu_2754_p1) + unsigned(empty_reg_3383));
    x_50_fu_1896_p2 <= std_logic_vector(unsigned(shl_ln2872_1_fu_1888_p3) + unsigned(empty_reg_3383));
    x_53_fu_2878_p2 <= std_logic_vector(unsigned(shl_ln81_fu_2871_p3) + unsigned(empty_reg_3383));
    x_54_fu_1948_p2 <= std_logic_vector(unsigned(shl_ln2872_2_fu_1940_p3) + unsigned(empty_reg_3383));
    x_55_fu_3206_p2 <= std_logic_vector(unsigned(shl_ln88_fu_3199_p3) + unsigned(empty_reg_3383));
    x_58_fu_2033_p2 <= std_logic_vector(unsigned(shl_ln89_fu_2025_p3) + unsigned(empty_reg_3383));
    x_59_fu_3239_p2 <= std_logic_vector(unsigned(shl_ln2935_1_fu_3231_p3) + unsigned(empty_reg_3383));
    x_60_fu_2154_p2 <= std_logic_vector(unsigned(shl_ln2872_3_fu_2147_p3) + unsigned(empty_reg_3383));
    x_61_fu_1068_p2 <= std_logic_vector(unsigned(shl_ln2859_1_fu_1060_p3) + unsigned(empty_fu_922_p1));
    x_62_fu_1739_p2 <= std_logic_vector(unsigned(shl_ln73_fu_1732_p3) + unsigned(empty_reg_3383));
    x_63_fu_1984_p2 <= std_logic_vector(unsigned(shl_ln86_fu_1977_p3) + unsigned(empty_reg_3383));
    x_64_fu_2596_p2 <= std_logic_vector(unsigned(zext_ln685_11_fu_2592_p1) + unsigned(add_ln685_16_fu_2560_p2));
    x_65_fu_3048_p2 <= std_logic_vector(unsigned(zext_ln685_12_fu_3044_p1) + unsigned(add_ln685_19_fu_3012_p2));
    x_assign_95_cast_fu_2183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_133_fu_2178_p2),32));
    x_assign_cast26_fu_2187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_204_reg_3434),62));
    x_fu_1645_p2 <= std_logic_vector(unsigned(shl_ln74_fu_1637_p3) + unsigned(empty_reg_3383));
    y_61_fu_1483_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_1471_p2));
    y_61_fu_1483_p1 <= zext_ln656_fu_1467_p1(24 - 1 downto 0);
    y_64_fu_1499_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_1489_p2));
    y_65_fu_1515_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_fu_1504_p2));
    y_66_fu_2223_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln1507_fu_2215_p1));
    y_67_fu_2245_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_14_fu_2233_p2));
    y_67_fu_2245_p1 <= zext_ln656_4_fu_2229_p1(24 - 1 downto 0);
    y_68_fu_2263_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_14_fu_2251_p2));
    y_69_fu_2283_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_14_fu_2273_p2));
    y_fu_1461_p2 <= std_logic_vector(unsigned(ap_const_lv24_2) - unsigned(trunc_ln2871_fu_1453_p1));
    z_110_fu_2316_p2 <= std_logic_vector(signed(ap_const_lv32_80000000) - signed(zext_ln1507_fu_2269_p1));
    z_113_fu_2364_p2 <= std_logic_vector(unsigned(zext_ln685_10_fu_2360_p1) + unsigned(sub_ln685_5_fu_2328_p2));
    z_121_fu_2708_p2 <= std_logic_vector(unsigned(zext_ln697_fu_2704_p1) + unsigned(sub_ln697_fu_2673_p2));
    z_123_fu_3188_p2 <= std_logic_vector(unsigned(zext_ln697_2_fu_3184_p1) + unsigned(sub_ln697_3_fu_3153_p2));
    z_125_fu_1750_p4 <= add_ln757_4_fu_1744_p2(31 downto 1);
    z_fu_1605_p2 <= std_logic_vector(unsigned(zext_ln685_9_fu_1601_p1) + unsigned(sub_ln685_fu_1569_p2));
    zext_ln1507_1_fu_2311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_4_fu_2305_p2),32));
    zext_ln1507_fu_2269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1507_reg_3915),32));
    zext_ln1510_1_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q1),9));
    zext_ln1510_2_fu_2190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_133_fu_2178_p2),9));
    zext_ln1510_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q1),64));
    zext_ln1521_1_fu_3002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1521_1_fu_2998_p1),32));
    zext_ln1521_fu_2550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1521_fu_2546_p1),32));
    zext_ln1524_1_fu_2954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1524_1_fu_2944_p4),64));
    zext_ln1524_fu_2502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln71_fu_2492_p4),64));
    zext_ln1544_4_fu_2653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_871_p4),3));
    zext_ln1544_5_fu_3086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1544_4_fu_3076_p4),64));
    zext_ln1544_6_fu_3133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_871_p4),3));
    zext_ln1544_fu_2634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1544_3_fu_2624_p4),64));
    zext_ln2840_1_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),9));
    zext_ln2840_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(MAX_BL_SMALL_q0),64));
    zext_ln2847_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logn),64));
    zext_ln2849_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(depth),64));
    zext_ln2850_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2850_fu_911_p2),64));
    zext_ln2869_1_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_134_fu_186),13));
    zext_ln2869_fu_1428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_134_fu_186),64));
    zext_ln2871_1_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p0i_reg_3700),32));
    zext_ln2871_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2871_reg_3686),32));
    zext_ln2880_fu_1728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2880_fu_1724_p1),32));
    zext_ln2881_1_fu_1701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2881_1_fu_1691_p4),64));
    zext_ln2881_fu_1660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1650_p4),64));
    zext_ln2886_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln76_fu_1764_p3),15));
    zext_ln2889_fu_1835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln68_fu_1825_p4),64));
    zext_ln2890_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln69_fu_1864_p4),64));
    zext_ln2891_fu_1911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln70_fu_1901_p4),64));
    zext_ln2899_1_fu_2016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2899_1_fu_2006_p4),64));
    zext_ln2899_fu_1963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln76_fu_1953_p4),64));
    zext_ln2907_fu_2098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln81_fu_2088_p4),64));
    zext_ln2908_fu_2137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln82_fu_2127_p4),64));
    zext_ln2909_fu_2169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln83_fu_2159_p4),64));
    zext_ln2932_1_fu_2201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_135_fu_190),64));
    zext_ln2932_2_fu_2206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_135_fu_190),13));
    zext_ln2932_fu_2194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(u_133_fu_2178_p2),13));
    zext_ln2944_fu_2742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln75_fu_2732_p4),64));
    zext_ln2947_fu_2754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln77_fu_2747_p3),15));
    zext_ln2951_fu_2818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln72_fu_2808_p4),64));
    zext_ln2952_fu_2857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln73_fu_2847_p4),64));
    zext_ln2953_fu_2893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln74_fu_2883_p4),64));
    zext_ln2958_fu_3195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln80_reg_4123),64));
    zext_ln2965_fu_3284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln77_fu_3274_p4),64));
    zext_ln2966_fu_3323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln78_fu_3313_p4),64));
    zext_ln2967_fu_3343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln79_reg_4161),64));
    zext_ln656_4_fu_2229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_66_fu_2223_p2),31));
    zext_ln656_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_1461_p2),31));
    zext_ln685_10_fu_2360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_7_fu_2356_p1),32));
    zext_ln685_11_fu_2592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_8_fu_2588_p1),32));
    zext_ln685_12_fu_3044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_9_fu_3040_p1),32));
    zext_ln685_9_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln685_fu_1597_p1),32));
    zext_ln685_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln72_fu_1557_p3),32));
    zext_ln697_2_fu_3184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_2_fu_3180_p1),32));
    zext_ln697_fu_2704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln697_fu_2700_p1),32));
    zext_ln757_11_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_17_fu_2404_p4),32));
    zext_ln757_12_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z_125_fu_1750_p4),32));
    zext_ln757_fu_2394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln757_fu_2390_p1),32));
end behav;
