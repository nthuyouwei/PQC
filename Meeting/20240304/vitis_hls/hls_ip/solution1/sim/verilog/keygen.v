// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="keygen_keygen,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=100.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=73.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=115,HLS_SYN_DSP=0,HLS_SYN_FF=86089,HLS_SYN_LUT=170029,HLS_VERSION=2022_1}" *)

module keygen (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 117'd1;
parameter    ap_ST_fsm_state2 = 117'd2;
parameter    ap_ST_fsm_state3 = 117'd4;
parameter    ap_ST_fsm_state4 = 117'd8;
parameter    ap_ST_fsm_state5 = 117'd16;
parameter    ap_ST_fsm_state6 = 117'd32;
parameter    ap_ST_fsm_state7 = 117'd64;
parameter    ap_ST_fsm_state8 = 117'd128;
parameter    ap_ST_fsm_state9 = 117'd256;
parameter    ap_ST_fsm_state10 = 117'd512;
parameter    ap_ST_fsm_state11 = 117'd1024;
parameter    ap_ST_fsm_state12 = 117'd2048;
parameter    ap_ST_fsm_state13 = 117'd4096;
parameter    ap_ST_fsm_state14 = 117'd8192;
parameter    ap_ST_fsm_state15 = 117'd16384;
parameter    ap_ST_fsm_state16 = 117'd32768;
parameter    ap_ST_fsm_state17 = 117'd65536;
parameter    ap_ST_fsm_state18 = 117'd131072;
parameter    ap_ST_fsm_state19 = 117'd262144;
parameter    ap_ST_fsm_state20 = 117'd524288;
parameter    ap_ST_fsm_state21 = 117'd1048576;
parameter    ap_ST_fsm_state22 = 117'd2097152;
parameter    ap_ST_fsm_state23 = 117'd4194304;
parameter    ap_ST_fsm_state24 = 117'd8388608;
parameter    ap_ST_fsm_state25 = 117'd16777216;
parameter    ap_ST_fsm_state26 = 117'd33554432;
parameter    ap_ST_fsm_state27 = 117'd67108864;
parameter    ap_ST_fsm_state28 = 117'd134217728;
parameter    ap_ST_fsm_state29 = 117'd268435456;
parameter    ap_ST_fsm_state30 = 117'd536870912;
parameter    ap_ST_fsm_state31 = 117'd1073741824;
parameter    ap_ST_fsm_state32 = 117'd2147483648;
parameter    ap_ST_fsm_state33 = 117'd4294967296;
parameter    ap_ST_fsm_state34 = 117'd8589934592;
parameter    ap_ST_fsm_state35 = 117'd17179869184;
parameter    ap_ST_fsm_state36 = 117'd34359738368;
parameter    ap_ST_fsm_state37 = 117'd68719476736;
parameter    ap_ST_fsm_state38 = 117'd137438953472;
parameter    ap_ST_fsm_state39 = 117'd274877906944;
parameter    ap_ST_fsm_state40 = 117'd549755813888;
parameter    ap_ST_fsm_state41 = 117'd1099511627776;
parameter    ap_ST_fsm_state42 = 117'd2199023255552;
parameter    ap_ST_fsm_state43 = 117'd4398046511104;
parameter    ap_ST_fsm_state44 = 117'd8796093022208;
parameter    ap_ST_fsm_state45 = 117'd17592186044416;
parameter    ap_ST_fsm_state46 = 117'd35184372088832;
parameter    ap_ST_fsm_state47 = 117'd70368744177664;
parameter    ap_ST_fsm_state48 = 117'd140737488355328;
parameter    ap_ST_fsm_state49 = 117'd281474976710656;
parameter    ap_ST_fsm_state50 = 117'd562949953421312;
parameter    ap_ST_fsm_state51 = 117'd1125899906842624;
parameter    ap_ST_fsm_state52 = 117'd2251799813685248;
parameter    ap_ST_fsm_state53 = 117'd4503599627370496;
parameter    ap_ST_fsm_state54 = 117'd9007199254740992;
parameter    ap_ST_fsm_state55 = 117'd18014398509481984;
parameter    ap_ST_fsm_state56 = 117'd36028797018963968;
parameter    ap_ST_fsm_state57 = 117'd72057594037927936;
parameter    ap_ST_fsm_state58 = 117'd144115188075855872;
parameter    ap_ST_fsm_state59 = 117'd288230376151711744;
parameter    ap_ST_fsm_state60 = 117'd576460752303423488;
parameter    ap_ST_fsm_state61 = 117'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 117'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 117'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 117'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 117'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 117'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 117'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 117'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 117'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 117'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 117'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 117'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 117'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 117'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 117'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 117'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 117'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 117'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 117'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 117'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 117'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 117'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 117'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 117'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 117'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 117'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 117'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 117'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 117'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 117'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 117'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 117'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 117'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 117'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 117'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 117'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 117'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 117'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 117'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 117'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 117'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 117'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 117'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 117'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 117'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 117'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 117'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 117'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 117'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 117'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 117'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 117'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 117'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 117'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 117'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 117'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 117'd83076749736557242056487941267521536;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [116:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] f_out;
wire   [63:0] g_out;
wire   [63:0] F_upper_out;
wire   [63:0] G_upper_out;
wire   [63:0] h_out;
wire   [63:0] seed;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state5;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_state12;
reg    gmem0_blk_n_AW;
wire    ap_CS_fsm_state78;
reg    gmem0_blk_n_W;
wire    ap_CS_fsm_state79;
reg    gmem0_blk_n_B;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state117;
reg   [63:0] reg_1615;
wire    ap_CS_fsm_state15;
wire    grp_poly_small_mkgauss_fu_1282_ap_done;
wire    ap_CS_fsm_state16;
reg   [63:0] reg_1620;
reg   [63:0] reg_1625;
reg   [63:0] reg_1630;
reg   [63:0] reg_1635;
reg   [63:0] reg_1640;
reg   [63:0] reg_1645;
reg   [63:0] reg_1650;
reg   [63:0] reg_1655;
reg   [63:0] reg_1660;
reg   [63:0] reg_1665;
reg   [63:0] reg_1670;
reg   [63:0] reg_1675;
reg   [63:0] reg_1680;
reg   [63:0] reg_1685;
reg   [63:0] reg_1690;
reg   [63:0] reg_1695;
reg   [63:0] reg_1700;
reg   [63:0] reg_1705;
reg   [63:0] reg_1710;
reg   [63:0] reg_1715;
reg   [63:0] reg_1720;
reg   [63:0] reg_1725;
reg   [63:0] reg_1730;
reg   [63:0] reg_1735;
reg   [63:0] reg_1740;
wire   [63:0] rt1_q1;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state53;
wire   [63:0] rt1_q0;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire   [63:0] rt2_q1;
wire    ap_CS_fsm_state56;
wire   [63:0] rt2_q0;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state68;
wire   [63:0] grp_fu_1422_p2;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state69;
wire   [63:0] grp_fu_1429_p2;
wire   [63:0] grp_fu_1436_p2;
wire   [63:0] grp_fu_1443_p2;
wire   [63:0] grp_fu_1393_p2;
reg   [63:0] reg_1805;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire   [63:0] grp_fu_1397_p2;
wire   [63:0] rt3_q0;
reg   [63:0] seed_read_reg_3805;
reg   [63:0] h_out_read_reg_3811;
reg   [63:0] G_upper_out_read_reg_3816;
reg   [63:0] F_upper_out_read_reg_3822;
reg   [63:0] g_out_read_reg_3828;
reg   [63:0] f_out_read_reg_3834;
wire   [63:0] rng_st_57_0_load_reg_3843;
wire    ap_CS_fsm_state2;
wire   [63:0] rng_st_58_0_load_reg_3848;
wire   [63:0] rng_st_59_0_load_reg_3853;
wire   [63:0] rng_st_60_0_load_reg_3858;
wire   [63:0] rng_st_61_0_load_reg_3863;
wire   [63:0] rng_st_62_0_load_reg_3868;
wire   [63:0] rng_st_63_0_load_reg_3873;
wire   [63:0] rng_st_64_0_load_reg_3878;
wire   [63:0] rng_st_65_0_load_reg_3883;
wire   [63:0] rng_st_67_0_load_reg_3888;
wire   [63:0] rng_st_68_0_load_reg_3893;
wire   [63:0] rng_st_69_0_load_reg_3898;
wire   [63:0] rng_st_70_0_load_reg_3903;
wire   [63:0] rng_st_71_0_load_reg_3908;
wire   [63:0] rng_st_72_0_load_reg_3913;
wire   [63:0] rng_st_73_0_load_reg_3918;
wire   [63:0] rng_st_74_0_load_reg_3923;
wire   [4:0] empty_358_fu_1906_p2;
reg   [4:0] empty_358_reg_3931;
wire   [0:0] trunc_ln805_fu_2037_p1;
reg   [0:0] trunc_ln805_reg_3985;
wire   [0:0] exitcond19826_fu_1900_p2;
wire   [5:0] add_ln805_fu_2110_p2;
reg   [5:0] add_ln805_reg_3996;
wire    ap_CS_fsm_state4;
reg   [63:0] gmem0_addr_reg_4001;
wire   [0:0] icmp_ln805_fu_2104_p2;
reg   [2:0] lshr_ln809_2_reg_4007;
wire   [63:0] tmp_s_fu_2151_p8;
reg   [63:0] tmp_s_reg_4011;
reg   [15:0] gmem0_addr_read_reg_4204;
wire   [10:0] u_215_fu_2503_p2;
reg   [10:0] u_215_reg_4290;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln5884_fu_2497_p2;
wire   [0:0] tmp_205_fu_2509_p3;
reg   [0:0] tmp_205_reg_4305;
wire   [31:0] test_1_fu_2579_p3;
wire    ap_CS_fsm_state18;
wire   [10:0] u_216_fu_2598_p2;
reg   [10:0] u_216_reg_4317;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln2760_fu_2592_p2;
wire  signed [15:0] sext_ln2761_fu_2604_p1;
wire    ap_CS_fsm_state20;
wire  signed [25:0] grp_fu_3630_p3;
wire    ap_CS_fsm_state23;
wire   [31:0] ng_1_fu_2611_p2;
wire   [10:0] u_217_fu_2628_p2;
reg   [10:0] u_217_reg_4346;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln2760_1_fu_2622_p2;
wire   [0:0] or_ln5913_fu_2700_p2;
reg   [0:0] or_ln5913_reg_4356;
wire  signed [15:0] sext_ln2761_1_fu_2706_p1;
wire    ap_CS_fsm_state25;
wire  signed [25:0] grp_fu_3639_p3;
wire    ap_CS_fsm_state28;
wire   [31:0] ng_3_fu_2713_p2;
wire   [63:0] zext_ln2817_fu_2719_p1;
reg   [63:0] zext_ln2817_reg_4376;
wire    ap_CS_fsm_state29;
wire   [10:0] u_218_fu_2730_p2;
reg   [10:0] u_218_reg_4384;
wire   [0:0] icmp_ln2817_fu_2724_p2;
wire  signed [63:0] sext_ln2819_fu_2736_p1;
reg  signed [63:0] sext_ln2819_reg_4394;
wire    ap_CS_fsm_state30;
wire   [63:0] zext_ln2817_1_fu_2741_p1;
reg   [63:0] zext_ln2817_1_reg_4399;
wire    ap_CS_fsm_state32;
wire   [10:0] u_219_fu_2752_p2;
reg   [10:0] u_219_reg_4407;
wire   [0:0] icmp_ln2817_1_fu_2746_p2;
wire  signed [63:0] sext_ln2819_1_fu_2758_p1;
reg  signed [63:0] sext_ln2819_1_reg_4417;
wire    ap_CS_fsm_state33;
wire   [63:0] zext_ln225_fu_2763_p1;
reg   [63:0] zext_ln225_reg_4422;
wire    ap_CS_fsm_state36;
wire   [9:0] u_220_fu_2775_p2;
reg   [9:0] u_220_reg_4430;
wire   [0:0] icmp_ln225_fu_2769_p2;
wire   [63:0] grp_fu_1474_p2;
reg   [63:0] div_i_i_reg_4455;
wire    ap_CS_fsm_state46;
reg   [9:0] rt1_addr_3_reg_4463;
wire    ap_CS_fsm_state48;
wire   [0:0] icmp_ln546_fu_2798_p2;
wire   [10:0] u_221_fu_2804_p2;
reg   [10:0] u_221_reg_4469;
reg   [9:0] rt2_addr_3_reg_4477;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln546_3_fu_2830_p2;
wire   [10:0] u_222_fu_2836_p2;
reg   [10:0] u_222_reg_4483;
wire   [10:0] u_223_fu_2868_p2;
reg   [10:0] u_223_reg_4491;
wire    ap_CS_fsm_state52;
reg   [9:0] rt1_addr_4_reg_4496;
wire   [0:0] icmp_ln562_fu_2862_p2;
wire   [10:0] u_224_fu_2885_p2;
reg   [10:0] u_224_reg_4505;
wire    ap_CS_fsm_state55;
reg   [9:0] rt2_addr_4_reg_4510;
wire   [0:0] icmp_ln562_1_fu_2879_p2;
wire   [9:0] u_225_fu_2903_p2;
reg   [9:0] u_225_reg_4519;
wire    ap_CS_fsm_state58;
reg   [9:0] rt1_addr_5_reg_4524;
wire   [0:0] icmp_ln580_fu_2897_p2;
reg   [9:0] rt1_addr_6_reg_4534;
wire   [9:0] u_226_fu_2932_p2;
reg   [9:0] u_226_reg_4542;
wire    ap_CS_fsm_state61;
reg   [9:0] rt2_addr_5_reg_4547;
wire   [0:0] icmp_ln580_2_fu_2926_p2;
reg   [9:0] rt2_addr_6_reg_4557;
wire   [63:0] zext_ln5942_fu_2949_p1;
reg   [63:0] zext_ln5942_reg_4562;
wire    ap_CS_fsm_state65;
wire   [8:0] u_227_fu_2960_p2;
reg   [8:0] u_227_reg_4570;
wire   [0:0] icmp_ln5942_fu_2954_p2;
wire  signed [8:0] xor_ln5946_fu_2966_p2;
reg  signed [8:0] xor_ln5946_reg_4580;
wire   [63:0] zext_ln5946_fu_2972_p1;
reg   [63:0] zext_ln5946_reg_4585;
wire   [63:0] zext_ln5948_fu_2985_p1;
reg   [63:0] zext_ln5948_reg_4605;
wire   [63:0] zext_ln5950_fu_2993_p1;
reg   [63:0] zext_ln5950_reg_4615;
reg   [63:0] bnorm1_reg_4635;
reg   [63:0] bnorm2_reg_4640;
wire   [63:0] grp_fu_1408_p2;
wire   [63:0] grp_fu_1413_p2;
wire    ap_CS_fsm_state70;
wire   [0:0] and_ln188_fu_3034_p2;
reg   [0:0] and_ln188_reg_4665;
wire    ap_CS_fsm_state73;
wire   [0:0] grp_compute_public_1_fu_1352_ap_return;
reg   [0:0] tmp_reg_4669;
wire    ap_CS_fsm_state74;
wire   [0:0] empty_359_fu_3063_p1;
reg   [0:0] empty_359_reg_4686;
wire    ap_CS_fsm_state76;
wire   [0:0] icmp_ln5990_fu_3052_p2;
wire    ap_CS_fsm_state77;
wire   [0:0] exitcond18411_fu_3209_p2;
wire   [0:0] empty_364_fu_3230_p2;
reg   [0:0] empty_364_reg_4699;
reg   [63:0] gmem0_addr_1_reg_4705;
wire   [0:0] empty_361_fu_3260_p1;
reg   [0:0] empty_361_reg_4718;
wire   [1:0] empty_365_fu_3275_p2;
reg   [1:0] empty_365_reg_4723;
wire   [15:0] empty_366_fu_3292_p2;
reg   [15:0] empty_366_reg_4728;
wire    ap_CS_fsm_state85;
wire   [0:0] exitcond18310_fu_3306_p2;
wire   [0:0] empty_372_fu_3327_p2;
reg   [0:0] empty_372_reg_4741;
reg   [63:0] gmem0_addr_3_reg_4747;
reg   [63:0] gmem0_addr_2_reg_4760;
wire   [1:0] empty_373_fu_3388_p2;
reg   [1:0] empty_373_reg_4766;
wire   [15:0] empty_374_fu_3405_p2;
reg   [15:0] empty_374_reg_4771;
wire    ap_CS_fsm_state94;
wire   [0:0] exitcond1829_fu_3419_p2;
wire   [15:0] h_q0;
reg   [15:0] h_load_reg_4784;
wire    ap_CS_fsm_state95;
wire   [0:0] empty_380_fu_3441_p1;
reg   [0:0] empty_380_reg_4796;
wire    ap_CS_fsm_state102;
wire   [0:0] exitcond1818_fu_3452_p2;
wire   [0:0] empty_385_fu_3473_p2;
reg   [0:0] empty_385_reg_4809;
reg   [63:0] gmem0_addr_4_reg_4815;
wire   [0:0] empty_382_fu_3503_p1;
reg   [0:0] empty_382_reg_4828;
wire   [1:0] empty_386_fu_3518_p2;
reg   [1:0] empty_386_reg_4833;
wire   [15:0] empty_387_fu_3535_p2;
reg   [15:0] empty_387_reg_4838;
wire    ap_CS_fsm_state110;
wire   [0:0] exitcond7_fu_3549_p2;
wire   [0:0] empty_393_fu_3570_p2;
reg   [0:0] empty_393_reg_4851;
reg   [63:0] gmem0_addr_5_reg_4857;
wire   [1:0] empty_394_fu_3607_p2;
reg   [1:0] empty_394_reg_4863;
wire   [15:0] empty_395_fu_3624_p2;
reg   [15:0] empty_395_reg_4868;
wire   [15:0] tmp2108_q0;
reg   [9:0] f_address0;
reg    f_ce0;
reg    f_we0;
wire   [7:0] f_q0;
reg   [9:0] g_address0;
reg    g_ce0;
reg    g_we0;
wire   [7:0] g_q0;
reg   [9:0] F_upper_address0;
reg    F_upper_ce0;
reg    F_upper_we0;
wire   [7:0] F_upper_q0;
reg   [9:0] G_upper_address0;
reg    G_upper_ce0;
reg    G_upper_we0;
wire   [7:0] G_upper_q0;
reg   [9:0] h_address0;
reg    h_ce0;
reg    h_we0;
reg    h_ce1;
reg    h_we1;
wire   [15:0] h_q1;
reg   [9:0] rt1_address0;
reg    rt1_ce0;
reg    rt1_we0;
reg   [63:0] rt1_d0;
reg   [9:0] rt1_address1;
reg    rt1_ce1;
reg    rt1_we1;
reg   [63:0] rt1_d1;
reg   [9:0] rt2_address0;
reg    rt2_ce0;
reg    rt2_we0;
reg   [63:0] rt2_d0;
reg   [9:0] rt2_address1;
reg    rt2_ce1;
reg    rt2_we1;
reg   [63:0] rt2_d1;
reg   [9:0] rt3_address0;
reg    rt3_ce0;
reg    rt3_we0;
wire    grp_poly_small_mkgauss_fu_1282_ap_start;
wire    grp_poly_small_mkgauss_fu_1282_ap_idle;
wire    grp_poly_small_mkgauss_fu_1282_ap_ready;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read1;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read2;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read3;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read4;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read5;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read6;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read7;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read8;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read9;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read10;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read11;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read12;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read13;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read14;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read15;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read16;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read17;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read18;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read19;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read20;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read21;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read22;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read23;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read24;
reg   [63:0] grp_poly_small_mkgauss_fu_1282_p_read25;
wire   [9:0] grp_poly_small_mkgauss_fu_1282_f_address0;
wire    grp_poly_small_mkgauss_fu_1282_f_ce0;
wire    grp_poly_small_mkgauss_fu_1282_f_we0;
wire   [7:0] grp_poly_small_mkgauss_fu_1282_f_d0;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_0;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_1;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_2;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_3;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_4;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_5;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_6;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_7;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_8;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_9;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_10;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_11;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_12;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_13;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_14;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_15;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_16;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_17;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_18;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_19;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_20;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_21;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_22;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_23;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_24;
wire   [63:0] grp_poly_small_mkgauss_fu_1282_ap_return_25;
wire    grp_fpr_of_fu_1317_ap_start;
wire    grp_fpr_of_fu_1317_ap_done;
wire    grp_fpr_of_fu_1317_ap_idle;
wire    grp_fpr_of_fu_1317_ap_ready;
reg   [63:0] grp_fpr_of_fu_1317_i;
wire   [63:0] grp_fpr_of_fu_1317_ap_return;
wire    grp_FFT_fu_1324_ap_start;
wire    grp_FFT_fu_1324_ap_done;
wire    grp_FFT_fu_1324_ap_idle;
wire    grp_FFT_fu_1324_ap_ready;
wire   [9:0] grp_FFT_fu_1324_f_address0;
wire    grp_FFT_fu_1324_f_ce0;
wire    grp_FFT_fu_1324_f_we0;
wire   [63:0] grp_FFT_fu_1324_f_d0;
wire   [9:0] grp_FFT_fu_1324_f_address1;
wire    grp_FFT_fu_1324_f_ce1;
wire    grp_FFT_fu_1324_f_we1;
wire   [63:0] grp_FFT_fu_1324_f_d1;
wire    grp_FFT_fu_1331_ap_start;
wire    grp_FFT_fu_1331_ap_done;
wire    grp_FFT_fu_1331_ap_idle;
wire    grp_FFT_fu_1331_ap_ready;
wire   [9:0] grp_FFT_fu_1331_f_address0;
wire    grp_FFT_fu_1331_f_ce0;
wire    grp_FFT_fu_1331_f_we0;
wire   [63:0] grp_FFT_fu_1331_f_d0;
wire   [9:0] grp_FFT_fu_1331_f_address1;
wire    grp_FFT_fu_1331_f_ce1;
wire    grp_FFT_fu_1331_f_we1;
wire   [63:0] grp_FFT_fu_1331_f_d1;
wire    grp_iFFT_fu_1338_ap_start;
wire    grp_iFFT_fu_1338_ap_done;
wire    grp_iFFT_fu_1338_ap_idle;
wire    grp_iFFT_fu_1338_ap_ready;
wire   [9:0] grp_iFFT_fu_1338_f_address0;
wire    grp_iFFT_fu_1338_f_ce0;
wire    grp_iFFT_fu_1338_f_we0;
wire   [63:0] grp_iFFT_fu_1338_f_d0;
wire   [9:0] grp_iFFT_fu_1338_f_address1;
wire    grp_iFFT_fu_1338_f_ce1;
wire    grp_iFFT_fu_1338_f_we1;
wire   [63:0] grp_iFFT_fu_1338_f_d1;
wire    grp_iFFT_fu_1345_ap_start;
wire    grp_iFFT_fu_1345_ap_done;
wire    grp_iFFT_fu_1345_ap_idle;
wire    grp_iFFT_fu_1345_ap_ready;
wire   [9:0] grp_iFFT_fu_1345_f_address0;
wire    grp_iFFT_fu_1345_f_ce0;
wire    grp_iFFT_fu_1345_f_we0;
wire   [63:0] grp_iFFT_fu_1345_f_d0;
wire   [9:0] grp_iFFT_fu_1345_f_address1;
wire    grp_iFFT_fu_1345_f_ce1;
wire    grp_iFFT_fu_1345_f_we1;
wire   [63:0] grp_iFFT_fu_1345_f_d1;
wire    grp_compute_public_1_fu_1352_ap_start;
wire    grp_compute_public_1_fu_1352_ap_done;
wire    grp_compute_public_1_fu_1352_ap_idle;
wire    grp_compute_public_1_fu_1352_ap_ready;
wire   [9:0] grp_compute_public_1_fu_1352_h_address0;
wire    grp_compute_public_1_fu_1352_h_ce0;
wire    grp_compute_public_1_fu_1352_h_we0;
wire   [15:0] grp_compute_public_1_fu_1352_h_d0;
wire   [9:0] grp_compute_public_1_fu_1352_h_address1;
wire    grp_compute_public_1_fu_1352_h_ce1;
wire    grp_compute_public_1_fu_1352_h_we1;
wire   [15:0] grp_compute_public_1_fu_1352_h_d1;
wire   [9:0] grp_compute_public_1_fu_1352_f_address0;
wire    grp_compute_public_1_fu_1352_f_ce0;
wire   [9:0] grp_compute_public_1_fu_1352_g_address0;
wire    grp_compute_public_1_fu_1352_g_ce0;
wire   [10:0] grp_compute_public_1_fu_1352_tmp2108_address0;
wire    grp_compute_public_1_fu_1352_tmp2108_ce0;
wire   [1:0] grp_compute_public_1_fu_1352_tmp2108_we0;
wire   [15:0] grp_compute_public_1_fu_1352_tmp2108_d0;
wire    grp_solve_NTRU_fu_1364_ap_start;
wire    grp_solve_NTRU_fu_1364_ap_done;
wire    grp_solve_NTRU_fu_1364_ap_idle;
wire    grp_solve_NTRU_fu_1364_ap_ready;
wire   [9:0] grp_solve_NTRU_fu_1364_F_upper_address0;
wire    grp_solve_NTRU_fu_1364_F_upper_ce0;
wire    grp_solve_NTRU_fu_1364_F_upper_we0;
wire   [7:0] grp_solve_NTRU_fu_1364_F_upper_d0;
wire   [9:0] grp_solve_NTRU_fu_1364_G_upper_address0;
wire    grp_solve_NTRU_fu_1364_G_upper_ce0;
wire    grp_solve_NTRU_fu_1364_G_upper_we0;
wire   [7:0] grp_solve_NTRU_fu_1364_G_upper_d0;
wire   [9:0] grp_solve_NTRU_fu_1364_f_address0;
wire    grp_solve_NTRU_fu_1364_f_ce0;
wire   [9:0] grp_solve_NTRU_fu_1364_g_address0;
wire    grp_solve_NTRU_fu_1364_g_ce0;
wire   [31:0] grp_solve_NTRU_fu_1364_ap_return_0;
wire   [31:0] grp_solve_NTRU_fu_1364_ap_return_1;
reg    gmem0_AWVALID;
wire    gmem0_AWREADY;
reg   [63:0] gmem0_AWADDR;
reg   [31:0] gmem0_AWLEN;
reg    gmem0_WVALID;
wire    gmem0_WREADY;
reg   [15:0] gmem0_WDATA;
reg   [1:0] gmem0_WSTRB;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [15:0] gmem0_RDATA;
wire   [9:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
reg    gmem0_BREADY;
reg   [31:0] test_reg_1030;
reg   [10:0] u_014_reg_1042;
reg   [31:0] ng_reg_1053;
reg  signed [25:0] s_reg_1065;
reg   [10:0] u_reg_1077;
reg   [31:0] ng_2_reg_1088;
reg  signed [25:0] s_2_reg_1100;
reg   [10:0] u_138_reg_1112;
reg   [10:0] u_140_reg_1123;
wire    ap_CS_fsm_state31;
reg   [10:0] u_142_reg_1134;
wire    ap_CS_fsm_state34;
reg   [9:0] u_144_reg_1145;
wire    ap_CS_fsm_state35;
reg    ap_block_state35_on_subcall_done;
wire    ap_CS_fsm_state47;
reg   [10:0] u_146_reg_1156;
wire    ap_CS_fsm_state49;
reg   [10:0] u_148_reg_1167;
wire    ap_CS_fsm_state51;
reg   [10:0] u_150_reg_1178;
wire    ap_CS_fsm_state54;
reg   [10:0] u_152_reg_1189;
wire    ap_CS_fsm_state57;
reg   [9:0] u_154_reg_1200;
wire    ap_CS_fsm_state60;
reg   [9:0] u_156_reg_1211;
wire    ap_CS_fsm_state63;
reg   [63:0] bnorm4_1_reg_1222;
wire    ap_CS_fsm_state64;
reg    ap_block_state64_on_subcall_done;
reg   [63:0] bnorm3_1_reg_1234;
reg   [63:0] bnorm2_1_reg_1246;
wire   [63:0] ap_phi_mux_bnorm1_1_phi_fu_1262_p4;
reg   [63:0] bnorm1_1_reg_1258;
reg   [8:0] u_116_reg_1270;
reg    grp_poly_small_mkgauss_fu_1282_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_fpr_of_fu_1317_ap_start_reg;
reg    grp_FFT_fu_1324_ap_start_reg;
reg    grp_FFT_fu_1331_ap_start_reg;
reg    grp_iFFT_fu_1338_ap_start_reg;
reg    grp_iFFT_fu_1345_ap_start_reg;
reg    grp_compute_public_1_fu_1352_ap_start_reg;
reg    grp_solve_NTRU_fu_1364_ap_start_reg;
wire    ap_CS_fsm_state75;
wire   [63:0] zext_ln5884_fu_2491_p1;
wire   [63:0] zext_ln2760_fu_2587_p1;
wire   [63:0] zext_ln2760_1_fu_2617_p1;
wire   [63:0] zext_ln228_fu_2787_p1;
wire   [63:0] zext_ln546_fu_2793_p1;
wire   [63:0] zext_ln546_1_fu_2825_p1;
wire   [63:0] zext_ln562_fu_2857_p1;
wire   [63:0] zext_ln562_1_fu_2874_p1;
wire   [63:0] zext_ln580_fu_2891_p1;
wire   [63:0] zext_ln583_fu_2915_p1;
wire   [63:0] zext_ln580_1_fu_2920_p1;
wire   [63:0] zext_ln583_4_fu_2944_p1;
wire   [63:0] loop_index12_cast12_fu_3204_p1;
wire   [63:0] loop_index9_cast15_fu_3301_p1;
wire   [63:0] loop_index6_cast_fu_3414_p1;
wire   [63:0] loop_index3_cast18_fu_3447_p1;
wire   [63:0] loop_index_cast21_fu_3544_p1;
wire  signed [63:0] sext_ln809_fu_2131_p1;
wire  signed [63:0] p_cast4_cast_fu_3245_p1;
wire  signed [63:0] p_cast6_cast_fu_3342_p1;
wire  signed [63:0] sext_ln6002_fu_3366_p1;
wire  signed [63:0] p_cast8_cast_fu_3488_p1;
wire  signed [63:0] p_cast10_cast_fu_3585_p1;
reg   [4:0] empty_fu_310;
wire    ap_CS_fsm_state3;
wire   [4:0] p_load_load_fu_1828_p1;
wire   [63:0] rng_st_0_fu_314;
wire   [63:0] rng_st_51_0_fu_318;
wire   [63:0] rng_st_52_0_fu_322;
wire   [63:0] rng_st_53_0_fu_326;
wire   [63:0] rng_st_54_0_fu_330;
wire   [63:0] rng_st_55_0_fu_334;
wire   [63:0] rng_st_56_0_fu_406;
wire   [63:0] rng_st_66_0_fu_410;
reg   [5:0] u_0_fu_450;
wire    ap_CS_fsm_state13;
reg   [63:0] rng_st_3_0_fu_454;
wire   [63:0] xor_ln809_1_fu_2348_p2;
reg   [63:0] rng_st_51_3_0_fu_458;
reg   [63:0] rng_st_52_3_0_fu_462;
reg   [63:0] rng_st_53_3_0_fu_466;
reg   [63:0] rng_st_54_3_0_fu_470;
reg   [63:0] rng_st_55_3_0_fu_474;
reg   [63:0] rng_st_1_fu_478;
reg    ap_predicate_op850_call_state76;
reg    ap_block_state76_on_subcall_done;
reg   [63:0] rng_st_7_fu_482;
reg   [63:0] rng_st_54_fu_486;
reg   [63:0] rng_st_55_fu_490;
reg   [63:0] rng_st_56_fu_494;
reg   [63:0] rng_st_57_fu_498;
reg   [63:0] rng_st_58_fu_502;
wire   [63:0] rng_st_fu_2175_p2;
reg   [63:0] rng_st_59_fu_506;
reg   [63:0] rng_st_60_fu_510;
reg   [63:0] rng_st_61_fu_514;
reg   [63:0] rng_st_62_fu_518;
reg   [63:0] rng_st_63_fu_522;
reg   [63:0] rng_st_64_fu_526;
reg   [63:0] rng_st_65_fu_530;
reg   [63:0] rng_st_66_fu_534;
reg   [63:0] rng_st_67_fu_538;
reg   [63:0] rng_st_68_fu_542;
wire   [63:0] rng_st_77_fu_2181_p2;
reg   [63:0] rng_st_69_fu_546;
reg   [63:0] rng_st_70_fu_550;
reg   [63:0] rng_st_71_fu_554;
reg   [63:0] rng_st_72_fu_558;
reg   [63:0] rng_st_73_fu_562;
reg   [63:0] rng_st_74_fu_566;
reg   [63:0] rng_st_75_fu_570;
reg   [63:0] rng_st_76_fu_574;
reg   [63:0] rng_dptr_2_fu_578;
reg   [31:0] slove_NTRU_break_0_1_fu_582;
reg   [10:0] loop_index12_fu_586;
wire   [10:0] empty_360_fu_3215_p2;
reg   [10:0] loop_index9_fu_590;
wire   [10:0] empty_369_fu_3312_p2;
reg   [10:0] loop_index6_fu_594;
wire   [10:0] empty_378_fu_3425_p2;
reg   [10:0] loop_index3_fu_598;
wire   [10:0] empty_381_fu_3458_p2;
wire    ap_CS_fsm_state97;
reg   [10:0] loop_index_fu_602;
wire   [10:0] empty_390_fu_3555_p2;
wire   [63:0] bitcast_ln147_1_fu_2820_p1;
wire   [63:0] bitcast_ln147_3_fu_2852_p1;
reg   [63:0] grp_fu_1393_p0;
reg   [63:0] grp_fu_1393_p1;
reg   [63:0] grp_fu_1397_p0;
reg   [63:0] grp_fu_1397_p1;
reg   [63:0] grp_fu_1422_p0;
reg   [63:0] grp_fu_1422_p1;
reg   [63:0] grp_fu_1429_p0;
reg   [63:0] grp_fu_1429_p1;
reg   [63:0] grp_fu_1436_p0;
reg   [63:0] grp_fu_1436_p1;
reg   [63:0] grp_fu_1443_p0;
reg   [63:0] grp_fu_1443_p1;
wire    ap_CS_fsm_state41;
wire   [63:0] zext_ln805_fu_2100_p1;
wire   [63:0] add_ln809_fu_2116_p2;
wire   [62:0] trunc_ln809_1_fu_2121_p4;
wire   [2:0] tmp_s_fu_2151_p7;
wire   [0:0] trunc_ln809_fu_2300_p1;
wire   [0:0] xor_ln809_fu_2303_p2;
wire   [3:0] shl_ln_fu_2308_p3;
wire   [15:0] zext_ln809_fu_2316_p1;
wire   [15:0] lshr_ln809_fu_2320_p2;
wire   [7:0] trunc_ln809_2_fu_2325_p1;
wire   [5:0] shl_ln809_1_fu_2333_p2;
wire   [63:0] zext_ln809_1_fu_2329_p1;
wire   [63:0] zext_ln809_2_fu_2338_p1;
wire   [63:0] shl_ln809_fu_2342_p2;
wire   [3:0] tmp_206_fu_2517_p4;
wire   [3:0] tmp_207_fu_2539_p4;
wire   [0:0] icmp_ln5890_fu_2527_p2;
wire   [0:0] icmp_ln5890_1_fu_2533_p2;
wire   [0:0] icmp_ln5891_1_fu_2555_p2;
wire   [0:0] icmp_ln5891_fu_2549_p2;
wire   [0:0] or_ln5891_1_fu_2567_p2;
wire   [0:0] or_ln5891_fu_2561_p2;
wire   [0:0] or_ln5891_2_fu_2573_p2;
wire  signed [31:0] sext_ln2765_fu_2608_p1;
wire   [0:0] tmp_208_fu_2634_p3;
wire  signed [25:0] normf_fu_2642_p3;
wire   [0:0] tmp_209_fu_2654_p3;
wire  signed [25:0] normg_fu_2662_p3;
wire  signed [26:0] sext_ln5861_1_fu_2670_p1;
wire  signed [26:0] sext_ln5861_fu_2650_p1;
wire   [25:0] or_ln5911_fu_2680_p2;
wire   [26:0] add_ln5911_fu_2674_p2;
wire   [0:0] tmp_210_fu_2686_p3;
wire   [0:0] icmp_ln5913_fu_2694_p2;
wire  signed [31:0] sext_ln2765_1_fu_2710_p1;
wire   [9:0] xor_ln228_fu_2781_p2;
wire   [63:0] bitcast_ln147_fu_2810_p1;
wire   [63:0] xor_ln147_fu_2814_p2;
wire   [63:0] bitcast_ln147_2_fu_2842_p1;
wire   [63:0] xor_ln147_3_fu_2846_p2;
wire   [9:0] xor_ln583_fu_2909_p2;
wire   [9:0] xor_ln583_1_fu_2938_p2;
wire   [9:0] zext_ln5948_cast_fu_2977_p3;
wire  signed [9:0] sext_ln5950_fu_2990_p1;
wire   [63:0] bitcast_ln188_fu_2998_p1;
wire   [10:0] tmp_92_fu_3002_p4;
wire   [51:0] trunc_ln188_fu_3012_p1;
wire   [0:0] icmp_ln188_1_fu_3022_p2;
wire   [0:0] icmp_ln188_fu_3016_p2;
wire   [0:0] or_ln188_fu_3028_p2;
wire   [0:0] tmp_93_fu_1479_p2;
wire   [0:0] empty_362_fu_3221_p1;
wire   [63:0] empty_363_fu_3225_p2;
wire   [62:0] p_cast4_fu_3235_p4;
wire   [1:0] p_cast13_fu_3272_p1;
wire   [3:0] tmp_170_fu_3281_p3;
wire   [15:0] f_load_7_cast_fu_3268_p1;
wire   [15:0] p_cast14_fu_3288_p1;
wire   [0:0] empty_370_fu_3318_p1;
wire   [63:0] empty_371_fu_3322_p2;
wire   [62:0] p_cast6_fu_3332_p4;
wire   [62:0] trunc_ln_fu_3357_p4;
wire   [1:0] p_cast16_fu_3385_p1;
wire   [3:0] tmp_171_fu_3394_p3;
wire   [15:0] g_load_7_cast_fu_3381_p1;
wire   [15:0] p_cast17_fu_3401_p1;
wire   [0:0] empty_383_fu_3464_p1;
wire   [63:0] empty_384_fu_3468_p2;
wire   [62:0] p_cast8_fu_3478_p4;
wire   [1:0] p_cast19_fu_3515_p1;
wire   [3:0] tmp_172_fu_3524_p3;
wire   [15:0] F_upper_load_cast_fu_3511_p1;
wire   [15:0] p_cast20_fu_3531_p1;
wire   [0:0] empty_391_fu_3561_p1;
wire   [63:0] empty_392_fu_3565_p2;
wire   [62:0] p_cast_fu_3575_p4;
wire   [1:0] p_cast22_fu_3604_p1;
wire   [3:0] tmp_173_fu_3613_p3;
wire   [15:0] G_upper_load_cast_fu_3600_p1;
wire   [15:0] p_cast23_fu_3620_p1;
wire  signed [7:0] grp_fu_3630_p0;
wire  signed [7:0] grp_fu_3630_p1;
wire    ap_CS_fsm_state22;
wire  signed [7:0] grp_fu_3639_p0;
wire  signed [7:0] grp_fu_3639_p1;
wire    ap_CS_fsm_state27;
reg   [116:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
reg    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
reg    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
reg    ap_ST_fsm_state78_blk;
reg    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
reg    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
reg    ap_ST_fsm_state86_blk;
reg    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
reg    ap_ST_fsm_state92_blk;
reg    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
reg    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
reg    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
reg    ap_ST_fsm_state103_blk;
reg    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
reg    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
reg    ap_ST_fsm_state111_blk;
reg    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
reg    ap_ST_fsm_state117_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 117'd1;
#0 grp_poly_small_mkgauss_fu_1282_ap_start_reg = 1'b0;
#0 grp_fpr_of_fu_1317_ap_start_reg = 1'b0;
#0 grp_FFT_fu_1324_ap_start_reg = 1'b0;
#0 grp_FFT_fu_1331_ap_start_reg = 1'b0;
#0 grp_iFFT_fu_1338_ap_start_reg = 1'b0;
#0 grp_iFFT_fu_1345_ap_start_reg = 1'b0;
#0 grp_compute_public_1_fu_1352_ap_start_reg = 1'b0;
#0 grp_solve_NTRU_fu_1364_ap_start_reg = 1'b0;
end

keygen_tmp2108_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
tmp2108_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_compute_public_1_fu_1352_tmp2108_address0),
    .ce0(grp_compute_public_1_fu_1352_tmp2108_ce0),
    .we0(grp_compute_public_1_fu_1352_tmp2108_we0),
    .d0(grp_compute_public_1_fu_1352_tmp2108_d0),
    .q0(tmp2108_q0)
);

keygen_f_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
f_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(f_address0),
    .ce0(f_ce0),
    .we0(f_we0),
    .d0(grp_poly_small_mkgauss_fu_1282_f_d0),
    .q0(f_q0)
);

keygen_f_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
g_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(g_address0),
    .ce0(g_ce0),
    .we0(g_we0),
    .d0(grp_poly_small_mkgauss_fu_1282_f_d0),
    .q0(g_q0)
);

keygen_f_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
F_upper_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(F_upper_address0),
    .ce0(F_upper_ce0),
    .we0(F_upper_we0),
    .d0(grp_solve_NTRU_fu_1364_F_upper_d0),
    .q0(F_upper_q0)
);

keygen_f_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
G_upper_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(G_upper_address0),
    .ce0(G_upper_ce0),
    .we0(G_upper_we0),
    .d0(grp_solve_NTRU_fu_1364_G_upper_d0),
    .q0(G_upper_q0)
);

keygen_h_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(h_address0),
    .ce0(h_ce0),
    .we0(h_we0),
    .d0(grp_compute_public_1_fu_1352_h_d0),
    .q0(h_q0),
    .address1(grp_compute_public_1_fu_1352_h_address1),
    .ce1(h_ce1),
    .we1(h_we1),
    .d1(grp_compute_public_1_fu_1352_h_d1),
    .q1(h_q1)
);

keygen_rt1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
rt1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(rt1_address0),
    .ce0(rt1_ce0),
    .we0(rt1_we0),
    .d0(rt1_d0),
    .q0(rt1_q0),
    .address1(rt1_address1),
    .ce1(rt1_ce1),
    .we1(rt1_we1),
    .d1(rt1_d1),
    .q1(rt1_q1)
);

keygen_rt1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
rt2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(rt2_address0),
    .ce0(rt2_ce0),
    .we0(rt2_we0),
    .d0(rt2_d0),
    .q0(rt2_q0),
    .address1(rt2_address1),
    .ce1(rt2_ce1),
    .we1(rt2_we1),
    .d1(rt2_d1),
    .q1(rt2_q1)
);

keygen_rt3_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
rt3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(rt3_address0),
    .ce0(rt3_ce0),
    .we0(rt3_we0),
    .d0(div_i_i_reg_4455),
    .q0(rt3_q0)
);

keygen_poly_small_mkgauss grp_poly_small_mkgauss_fu_1282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_poly_small_mkgauss_fu_1282_ap_start),
    .ap_done(grp_poly_small_mkgauss_fu_1282_ap_done),
    .ap_idle(grp_poly_small_mkgauss_fu_1282_ap_idle),
    .ap_ready(grp_poly_small_mkgauss_fu_1282_ap_ready),
    .p_read(grp_poly_small_mkgauss_fu_1282_p_read),
    .p_read1(grp_poly_small_mkgauss_fu_1282_p_read1),
    .p_read2(grp_poly_small_mkgauss_fu_1282_p_read2),
    .p_read3(grp_poly_small_mkgauss_fu_1282_p_read3),
    .p_read4(grp_poly_small_mkgauss_fu_1282_p_read4),
    .p_read5(grp_poly_small_mkgauss_fu_1282_p_read5),
    .p_read6(grp_poly_small_mkgauss_fu_1282_p_read6),
    .p_read7(grp_poly_small_mkgauss_fu_1282_p_read7),
    .p_read8(grp_poly_small_mkgauss_fu_1282_p_read8),
    .p_read9(grp_poly_small_mkgauss_fu_1282_p_read9),
    .p_read10(grp_poly_small_mkgauss_fu_1282_p_read10),
    .p_read11(grp_poly_small_mkgauss_fu_1282_p_read11),
    .p_read12(grp_poly_small_mkgauss_fu_1282_p_read12),
    .p_read13(grp_poly_small_mkgauss_fu_1282_p_read13),
    .p_read14(grp_poly_small_mkgauss_fu_1282_p_read14),
    .p_read15(grp_poly_small_mkgauss_fu_1282_p_read15),
    .p_read16(grp_poly_small_mkgauss_fu_1282_p_read16),
    .p_read17(grp_poly_small_mkgauss_fu_1282_p_read17),
    .p_read18(grp_poly_small_mkgauss_fu_1282_p_read18),
    .p_read19(grp_poly_small_mkgauss_fu_1282_p_read19),
    .p_read20(grp_poly_small_mkgauss_fu_1282_p_read20),
    .p_read21(grp_poly_small_mkgauss_fu_1282_p_read21),
    .p_read22(grp_poly_small_mkgauss_fu_1282_p_read22),
    .p_read23(grp_poly_small_mkgauss_fu_1282_p_read23),
    .p_read24(grp_poly_small_mkgauss_fu_1282_p_read24),
    .p_read25(grp_poly_small_mkgauss_fu_1282_p_read25),
    .f_address0(grp_poly_small_mkgauss_fu_1282_f_address0),
    .f_ce0(grp_poly_small_mkgauss_fu_1282_f_ce0),
    .f_we0(grp_poly_small_mkgauss_fu_1282_f_we0),
    .f_d0(grp_poly_small_mkgauss_fu_1282_f_d0),
    .ap_return_0(grp_poly_small_mkgauss_fu_1282_ap_return_0),
    .ap_return_1(grp_poly_small_mkgauss_fu_1282_ap_return_1),
    .ap_return_2(grp_poly_small_mkgauss_fu_1282_ap_return_2),
    .ap_return_3(grp_poly_small_mkgauss_fu_1282_ap_return_3),
    .ap_return_4(grp_poly_small_mkgauss_fu_1282_ap_return_4),
    .ap_return_5(grp_poly_small_mkgauss_fu_1282_ap_return_5),
    .ap_return_6(grp_poly_small_mkgauss_fu_1282_ap_return_6),
    .ap_return_7(grp_poly_small_mkgauss_fu_1282_ap_return_7),
    .ap_return_8(grp_poly_small_mkgauss_fu_1282_ap_return_8),
    .ap_return_9(grp_poly_small_mkgauss_fu_1282_ap_return_9),
    .ap_return_10(grp_poly_small_mkgauss_fu_1282_ap_return_10),
    .ap_return_11(grp_poly_small_mkgauss_fu_1282_ap_return_11),
    .ap_return_12(grp_poly_small_mkgauss_fu_1282_ap_return_12),
    .ap_return_13(grp_poly_small_mkgauss_fu_1282_ap_return_13),
    .ap_return_14(grp_poly_small_mkgauss_fu_1282_ap_return_14),
    .ap_return_15(grp_poly_small_mkgauss_fu_1282_ap_return_15),
    .ap_return_16(grp_poly_small_mkgauss_fu_1282_ap_return_16),
    .ap_return_17(grp_poly_small_mkgauss_fu_1282_ap_return_17),
    .ap_return_18(grp_poly_small_mkgauss_fu_1282_ap_return_18),
    .ap_return_19(grp_poly_small_mkgauss_fu_1282_ap_return_19),
    .ap_return_20(grp_poly_small_mkgauss_fu_1282_ap_return_20),
    .ap_return_21(grp_poly_small_mkgauss_fu_1282_ap_return_21),
    .ap_return_22(grp_poly_small_mkgauss_fu_1282_ap_return_22),
    .ap_return_23(grp_poly_small_mkgauss_fu_1282_ap_return_23),
    .ap_return_24(grp_poly_small_mkgauss_fu_1282_ap_return_24),
    .ap_return_25(grp_poly_small_mkgauss_fu_1282_ap_return_25)
);

keygen_fpr_of grp_fpr_of_fu_1317(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fpr_of_fu_1317_ap_start),
    .ap_done(grp_fpr_of_fu_1317_ap_done),
    .ap_idle(grp_fpr_of_fu_1317_ap_idle),
    .ap_ready(grp_fpr_of_fu_1317_ap_ready),
    .i(grp_fpr_of_fu_1317_i),
    .ap_return(grp_fpr_of_fu_1317_ap_return)
);

keygen_FFT grp_FFT_fu_1324(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_fu_1324_ap_start),
    .ap_done(grp_FFT_fu_1324_ap_done),
    .ap_idle(grp_FFT_fu_1324_ap_idle),
    .ap_ready(grp_FFT_fu_1324_ap_ready),
    .f_address0(grp_FFT_fu_1324_f_address0),
    .f_ce0(grp_FFT_fu_1324_f_ce0),
    .f_we0(grp_FFT_fu_1324_f_we0),
    .f_d0(grp_FFT_fu_1324_f_d0),
    .f_q0(rt1_q0),
    .f_address1(grp_FFT_fu_1324_f_address1),
    .f_ce1(grp_FFT_fu_1324_f_ce1),
    .f_we1(grp_FFT_fu_1324_f_we1),
    .f_d1(grp_FFT_fu_1324_f_d1),
    .f_q1(rt1_q1)
);

keygen_FFT grp_FFT_fu_1331(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_fu_1331_ap_start),
    .ap_done(grp_FFT_fu_1331_ap_done),
    .ap_idle(grp_FFT_fu_1331_ap_idle),
    .ap_ready(grp_FFT_fu_1331_ap_ready),
    .f_address0(grp_FFT_fu_1331_f_address0),
    .f_ce0(grp_FFT_fu_1331_f_ce0),
    .f_we0(grp_FFT_fu_1331_f_we0),
    .f_d0(grp_FFT_fu_1331_f_d0),
    .f_q0(rt2_q0),
    .f_address1(grp_FFT_fu_1331_f_address1),
    .f_ce1(grp_FFT_fu_1331_f_ce1),
    .f_we1(grp_FFT_fu_1331_f_we1),
    .f_d1(grp_FFT_fu_1331_f_d1),
    .f_q1(rt2_q1)
);

keygen_iFFT grp_iFFT_fu_1338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_iFFT_fu_1338_ap_start),
    .ap_done(grp_iFFT_fu_1338_ap_done),
    .ap_idle(grp_iFFT_fu_1338_ap_idle),
    .ap_ready(grp_iFFT_fu_1338_ap_ready),
    .f_address0(grp_iFFT_fu_1338_f_address0),
    .f_ce0(grp_iFFT_fu_1338_f_ce0),
    .f_we0(grp_iFFT_fu_1338_f_we0),
    .f_d0(grp_iFFT_fu_1338_f_d0),
    .f_q0(rt1_q0),
    .f_address1(grp_iFFT_fu_1338_f_address1),
    .f_ce1(grp_iFFT_fu_1338_f_ce1),
    .f_we1(grp_iFFT_fu_1338_f_we1),
    .f_d1(grp_iFFT_fu_1338_f_d1),
    .f_q1(rt1_q1)
);

keygen_iFFT grp_iFFT_fu_1345(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_iFFT_fu_1345_ap_start),
    .ap_done(grp_iFFT_fu_1345_ap_done),
    .ap_idle(grp_iFFT_fu_1345_ap_idle),
    .ap_ready(grp_iFFT_fu_1345_ap_ready),
    .f_address0(grp_iFFT_fu_1345_f_address0),
    .f_ce0(grp_iFFT_fu_1345_f_ce0),
    .f_we0(grp_iFFT_fu_1345_f_we0),
    .f_d0(grp_iFFT_fu_1345_f_d0),
    .f_q0(rt2_q0),
    .f_address1(grp_iFFT_fu_1345_f_address1),
    .f_ce1(grp_iFFT_fu_1345_f_ce1),
    .f_we1(grp_iFFT_fu_1345_f_we1),
    .f_d1(grp_iFFT_fu_1345_f_d1),
    .f_q1(rt2_q1)
);

keygen_compute_public_1 grp_compute_public_1_fu_1352(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_public_1_fu_1352_ap_start),
    .ap_done(grp_compute_public_1_fu_1352_ap_done),
    .ap_idle(grp_compute_public_1_fu_1352_ap_idle),
    .ap_ready(grp_compute_public_1_fu_1352_ap_ready),
    .h_address0(grp_compute_public_1_fu_1352_h_address0),
    .h_ce0(grp_compute_public_1_fu_1352_h_ce0),
    .h_we0(grp_compute_public_1_fu_1352_h_we0),
    .h_d0(grp_compute_public_1_fu_1352_h_d0),
    .h_q0(h_q0),
    .h_address1(grp_compute_public_1_fu_1352_h_address1),
    .h_ce1(grp_compute_public_1_fu_1352_h_ce1),
    .h_we1(grp_compute_public_1_fu_1352_h_we1),
    .h_d1(grp_compute_public_1_fu_1352_h_d1),
    .h_q1(h_q1),
    .f_address0(grp_compute_public_1_fu_1352_f_address0),
    .f_ce0(grp_compute_public_1_fu_1352_f_ce0),
    .f_q0(f_q0),
    .g_address0(grp_compute_public_1_fu_1352_g_address0),
    .g_ce0(grp_compute_public_1_fu_1352_g_ce0),
    .g_q0(g_q0),
    .tmp2108_address0(grp_compute_public_1_fu_1352_tmp2108_address0),
    .tmp2108_ce0(grp_compute_public_1_fu_1352_tmp2108_ce0),
    .tmp2108_we0(grp_compute_public_1_fu_1352_tmp2108_we0),
    .tmp2108_d0(grp_compute_public_1_fu_1352_tmp2108_d0),
    .tmp2108_q0(tmp2108_q0),
    .ap_return(grp_compute_public_1_fu_1352_ap_return)
);

keygen_solve_NTRU grp_solve_NTRU_fu_1364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solve_NTRU_fu_1364_ap_start),
    .ap_done(grp_solve_NTRU_fu_1364_ap_done),
    .ap_idle(grp_solve_NTRU_fu_1364_ap_idle),
    .ap_ready(grp_solve_NTRU_fu_1364_ap_ready),
    .F_upper_address0(grp_solve_NTRU_fu_1364_F_upper_address0),
    .F_upper_ce0(grp_solve_NTRU_fu_1364_F_upper_ce0),
    .F_upper_we0(grp_solve_NTRU_fu_1364_F_upper_we0),
    .F_upper_d0(grp_solve_NTRU_fu_1364_F_upper_d0),
    .F_upper_q0(F_upper_q0),
    .G_upper_address0(grp_solve_NTRU_fu_1364_G_upper_address0),
    .G_upper_ce0(grp_solve_NTRU_fu_1364_G_upper_ce0),
    .G_upper_we0(grp_solve_NTRU_fu_1364_G_upper_we0),
    .G_upper_d0(grp_solve_NTRU_fu_1364_G_upper_d0),
    .G_upper_q0(G_upper_q0),
    .f_address0(grp_solve_NTRU_fu_1364_f_address0),
    .f_ce0(grp_solve_NTRU_fu_1364_f_ce0),
    .f_q0(f_q0),
    .g_address0(grp_solve_NTRU_fu_1364_g_address0),
    .g_ce0(grp_solve_NTRU_fu_1364_g_ce0),
    .g_q0(g_q0),
    .p_read(slove_NTRU_break_0_1_fu_582),
    .ap_return_0(grp_solve_NTRU_fu_1364_ap_return_0),
    .ap_return_1(grp_solve_NTRU_fu_1364_ap_return_1)
);

keygen_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .f_out(f_out),
    .g_out(g_out),
    .F_upper_out(F_upper_out),
    .G_upper_out(G_upper_out),
    .h_out(h_out),
    .seed(seed),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

keygen_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 10 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_addr_reg_4001),
    .I_ARLEN(32'd1),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(gmem0_AWADDR),
    .I_AWLEN(gmem0_AWLEN),
    .I_WVALID(gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(gmem0_WDATA),
    .I_WSTRB(gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(gmem0_BREADY)
);

keygen_dadd_64ns_64ns_64_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_2_full_dsp_1_U471(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1393_p0),
    .din1(grp_fu_1393_p1),
    .ce(1'b1),
    .dout(grp_fu_1393_p2)
);

keygen_dadd_64ns_64ns_64_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_2_full_dsp_1_U472(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1397_p0),
    .din1(grp_fu_1397_p1),
    .ce(1'b1),
    .dout(grp_fu_1397_p2)
);

keygen_dadd_64ns_64ns_64_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_2_full_dsp_1_U473(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(bnorm3_1_reg_1234),
    .din1(grp_fu_1436_p2),
    .ce(1'b1),
    .dout(grp_fu_1408_p2)
);

keygen_dadd_64ns_64ns_64_2_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_2_full_dsp_1_U474(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(bnorm4_1_reg_1222),
    .din1(grp_fu_1443_p2),
    .ce(1'b1),
    .dout(grp_fu_1413_p2)
);

keygen_dmul_64ns_64ns_64_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_2_max_dsp_1_U475(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1422_p0),
    .din1(grp_fu_1422_p1),
    .ce(1'b1),
    .dout(grp_fu_1422_p2)
);

keygen_dmul_64ns_64ns_64_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_2_max_dsp_1_U476(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1429_p0),
    .din1(grp_fu_1429_p1),
    .ce(1'b1),
    .dout(grp_fu_1429_p2)
);

keygen_dmul_64ns_64ns_64_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_2_max_dsp_1_U477(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1436_p0),
    .din1(grp_fu_1436_p1),
    .ce(1'b1),
    .dout(grp_fu_1436_p2)
);

keygen_dmul_64ns_64ns_64_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_2_max_dsp_1_U478(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1443_p0),
    .din1(grp_fu_1443_p1),
    .ce(1'b1),
    .dout(grp_fu_1443_p2)
);

keygen_ddiv_64ns_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_6_no_dsp_1_U479(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(64'd4607182418800017408),
    .din1(reg_1805),
    .ce(1'b1),
    .dout(grp_fu_1474_p2)
);

keygen_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U480(
    .din0(grp_fu_1393_p2),
    .din1(64'd4670353323383631276),
    .opcode(5'd4),
    .dout(tmp_93_fu_1479_p2)
);

keygen_mux_63_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_63_64_1_1_U481(
    .din0(rng_st_3_0_fu_454),
    .din1(rng_st_51_3_0_fu_458),
    .din2(rng_st_52_3_0_fu_462),
    .din3(rng_st_53_3_0_fu_466),
    .din4(rng_st_54_3_0_fu_470),
    .din5(rng_st_55_3_0_fu_474),
    .din6(tmp_s_fu_2151_p7),
    .dout(tmp_s_fu_2151_p8)
);

keygen_mac_muladd_8s_8s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8s_8s_26s_26_4_1_U482(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3630_p0),
    .din1(grp_fu_3630_p1),
    .din2(s_reg_1065),
    .ce(1'b1),
    .dout(grp_fu_3630_p3)
);

keygen_mac_muladd_8s_8s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8s_8s_26s_26_4_1_U483(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_3639_p0),
    .din1(grp_fu_3639_p1),
    .din2(s_2_reg_1100),
    .ce(1'b1),
    .dout(grp_fu_3639_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_fu_1324_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln2817_1_fu_2746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_FFT_fu_1324_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_fu_1324_ap_ready == 1'b1)) begin
            grp_FFT_fu_1324_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_fu_1331_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln2817_1_fu_2746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_FFT_fu_1331_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_fu_1331_ap_ready == 1'b1)) begin
            grp_FFT_fu_1331_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_public_1_fu_1352_ap_start_reg <= 1'b0;
    end else begin
        if (((1'd1 == and_ln188_fu_3034_p2) & (1'b1 == ap_CS_fsm_state73))) begin
            grp_compute_public_1_fu_1352_ap_start_reg <= 1'b1;
        end else if ((grp_compute_public_1_fu_1352_ap_ready == 1'b1)) begin
            grp_compute_public_1_fu_1352_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fpr_of_fu_1317_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state30))) begin
            grp_fpr_of_fu_1317_ap_start_reg <= 1'b1;
        end else if ((grp_fpr_of_fu_1317_ap_ready == 1'b1)) begin
            grp_fpr_of_fu_1317_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_iFFT_fu_1338_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln580_2_fu_2926_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            grp_iFFT_fu_1338_ap_start_reg <= 1'b1;
        end else if ((grp_iFFT_fu_1338_ap_ready == 1'b1)) begin
            grp_iFFT_fu_1338_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_iFFT_fu_1345_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln580_2_fu_2926_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            grp_iFFT_fu_1345_ap_start_reg <= 1'b1;
        end else if ((grp_iFFT_fu_1345_ap_ready == 1'b1)) begin
            grp_iFFT_fu_1345_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_poly_small_mkgauss_fu_1282_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | ((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
            grp_poly_small_mkgauss_fu_1282_ap_start_reg <= 1'b1;
        end else if ((grp_poly_small_mkgauss_fu_1282_ap_ready == 1'b1)) begin
            grp_poly_small_mkgauss_fu_1282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solve_NTRU_fu_1364_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state75)) begin
            grp_solve_NTRU_fu_1364_ap_start_reg <= 1'b1;
        end else if ((grp_solve_NTRU_fu_1364_ap_ready == 1'b1)) begin
            grp_solve_NTRU_fu_1364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        bnorm1_1_reg_1258 <= bnorm1_reg_4635;
    end else if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
        bnorm1_1_reg_1258 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        bnorm2_1_reg_1246 <= bnorm2_reg_4640;
    end else if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
        bnorm2_1_reg_1246 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        bnorm3_1_reg_1234 <= grp_fu_1393_p2;
    end else if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
        bnorm3_1_reg_1234 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        bnorm4_1_reg_1222 <= grp_fu_1397_p2;
    end else if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
        bnorm4_1_reg_1222 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_fu_310 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_fu_310 <= empty_358_reg_3931;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5990_fu_3052_p2 == 1'd0) & (tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done))) begin
        loop_index12_fu_586 <= 11'd0;
    end else if (((exitcond18411_fu_3209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        loop_index12_fu_586 <= empty_360_fu_3215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        loop_index3_fu_598 <= 11'd0;
    end else if (((exitcond1818_fu_3452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        loop_index3_fu_598 <= empty_381_fu_3458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18310_fu_3306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        loop_index6_fu_594 <= 11'd0;
    end else if (((exitcond1829_fu_3419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state94))) begin
        loop_index6_fu_594 <= empty_378_fu_3425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18411_fu_3209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        loop_index9_fu_590 <= 11'd0;
    end else if (((exitcond18310_fu_3306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        loop_index9_fu_590 <= empty_369_fu_3312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1818_fu_3452_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        loop_index_fu_602 <= 11'd0;
    end else if (((exitcond7_fu_3549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        loop_index_fu_602 <= empty_390_fu_3555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2760_fu_2592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ng_2_reg_1088 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        ng_2_reg_1088 <= ng_3_fu_2713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_205_fu_2509_p3 == 1'd0) & (icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        ng_reg_1053 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        ng_reg_1053 <= ng_1_fu_2611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_dptr_2_fu_578 <= 64'd136;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_dptr_2_fu_578 <= reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_1_fu_478 <= rng_st_3_0_fu_454;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_1_fu_478 <= reg_1620;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_3_0_fu_454 <= rng_st_0_fu_314;
    end else if (((1'b1 == ap_CS_fsm_state13) & ((lshr_ln809_2_reg_4007 == 3'd0) | ((lshr_ln809_2_reg_4007 == 3'd6) | (lshr_ln809_2_reg_4007 == 3'd7))))) begin
        rng_st_3_0_fu_454 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_51_3_0_fu_458 <= rng_st_51_0_fu_318;
    end else if (((lshr_ln809_2_reg_4007 == 3'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        rng_st_51_3_0_fu_458 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_52_3_0_fu_462 <= rng_st_52_0_fu_322;
    end else if (((lshr_ln809_2_reg_4007 == 3'd2) & (1'b1 == ap_CS_fsm_state13))) begin
        rng_st_52_3_0_fu_462 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_53_3_0_fu_466 <= rng_st_53_0_fu_326;
    end else if (((lshr_ln809_2_reg_4007 == 3'd3) & (1'b1 == ap_CS_fsm_state13))) begin
        rng_st_53_3_0_fu_466 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_54_3_0_fu_470 <= rng_st_54_0_fu_330;
    end else if (((lshr_ln809_2_reg_4007 == 3'd4) & (1'b1 == ap_CS_fsm_state13))) begin
        rng_st_54_3_0_fu_470 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_54_fu_486 <= rng_st_52_3_0_fu_462;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_54_fu_486 <= reg_1630;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        rng_st_55_3_0_fu_474 <= rng_st_55_0_fu_334;
    end else if (((lshr_ln809_2_reg_4007 == 3'd5) & (1'b1 == ap_CS_fsm_state13))) begin
        rng_st_55_3_0_fu_474 <= xor_ln809_1_fu_2348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_55_fu_490 <= rng_st_53_3_0_fu_466;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_55_fu_490 <= reg_1635;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_56_fu_494 <= rng_st_54_3_0_fu_470;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_56_fu_494 <= reg_1640;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_57_fu_498 <= rng_st_55_3_0_fu_474;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_57_fu_498 <= reg_1645;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_58_fu_502 <= rng_st_fu_2175_p2;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_58_fu_502 <= reg_1650;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_59_fu_506 <= rng_st_57_0_load_reg_3843;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_59_fu_506 <= reg_1655;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_60_fu_510 <= rng_st_58_0_load_reg_3848;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_60_fu_510 <= reg_1660;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_61_fu_514 <= rng_st_59_0_load_reg_3853;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_61_fu_514 <= reg_1665;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_62_fu_518 <= rng_st_60_0_load_reg_3858;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_62_fu_518 <= reg_1670;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_63_fu_522 <= rng_st_61_0_load_reg_3863;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_63_fu_522 <= reg_1675;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_64_fu_526 <= rng_st_62_0_load_reg_3868;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_64_fu_526 <= reg_1680;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_65_fu_530 <= rng_st_63_0_load_reg_3873;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_65_fu_530 <= reg_1685;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_66_fu_534 <= rng_st_64_0_load_reg_3878;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_66_fu_534 <= reg_1690;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_67_fu_538 <= rng_st_65_0_load_reg_3883;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_67_fu_538 <= reg_1695;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_68_fu_542 <= rng_st_77_fu_2181_p2;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_68_fu_542 <= reg_1700;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_69_fu_546 <= rng_st_67_0_load_reg_3888;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_69_fu_546 <= reg_1705;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_70_fu_550 <= rng_st_68_0_load_reg_3893;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_70_fu_550 <= reg_1710;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_71_fu_554 <= rng_st_69_0_load_reg_3898;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_71_fu_554 <= reg_1715;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_72_fu_558 <= rng_st_70_0_load_reg_3903;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_72_fu_558 <= reg_1720;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_73_fu_562 <= rng_st_71_0_load_reg_3908;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_73_fu_562 <= reg_1725;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_74_fu_566 <= rng_st_72_0_load_reg_3913;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_74_fu_566 <= reg_1730;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_75_fu_570 <= rng_st_73_0_load_reg_3918;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_75_fu_570 <= reg_1735;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_76_fu_574 <= rng_st_74_0_load_reg_3923;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_76_fu_574 <= reg_1740;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        rng_st_7_fu_482 <= rng_st_51_3_0_fu_458;
    end else if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
        rng_st_7_fu_482 <= reg_1625;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2760_fu_2592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        s_2_reg_1100 <= 26'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        s_2_reg_1100 <= grp_fu_3639_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_205_fu_2509_p3 == 1'd0) & (icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        s_reg_1065 <= 26'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        s_reg_1065 <= grp_fu_3630_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        test_reg_1030 <= test_1_fu_2579_p3;
    end else if (((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        test_reg_1030 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        u_014_reg_1042 <= u_215_reg_4290;
    end else if (((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        u_014_reg_1042 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        u_0_fu_450 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        u_0_fu_450 <= add_ln805_reg_3996;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        u_116_reg_1270 <= u_227_reg_4570;
    end else if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
        u_116_reg_1270 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2760_fu_2592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        u_138_reg_1112 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        u_138_reg_1112 <= u_217_reg_4346;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln5913_fu_2700_p2 == 1'd0) & (icmp_ln2760_1_fu_2622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        u_140_reg_1123 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state31) & (grp_fpr_of_fu_1317_ap_done == 1'b1))) begin
        u_140_reg_1123 <= u_218_reg_4384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2817_fu_2724_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        u_142_reg_1134 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state34) & (grp_fpr_of_fu_1317_ap_done == 1'b1))) begin
        u_142_reg_1134 <= u_219_reg_4407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        u_144_reg_1145 <= u_220_reg_4430;
    end else if (((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done))) begin
        u_144_reg_1145 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_fu_2769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        u_146_reg_1156 <= 11'd512;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        u_146_reg_1156 <= u_221_reg_4469;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln546_fu_2798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        u_148_reg_1167 <= 11'd512;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        u_148_reg_1167 <= u_222_reg_4483;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln546_3_fu_2830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        u_150_reg_1178 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        u_150_reg_1178 <= u_223_reg_4491;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln562_fu_2862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        u_152_reg_1189 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        u_152_reg_1189 <= u_224_reg_4505;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln562_1_fu_2879_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        u_154_reg_1200 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        u_154_reg_1200 <= u_225_reg_4519;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_fu_2897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        u_156_reg_1211 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        u_156_reg_1211 <= u_226_reg_4542;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_205_fu_2509_p3 == 1'd0) & (icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        u_reg_1077 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        u_reg_1077 <= u_216_reg_4317;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        F_upper_out_read_reg_3822 <= F_upper_out;
        G_upper_out_read_reg_3816 <= G_upper_out;
        f_out_read_reg_3834 <= f_out;
        g_out_read_reg_3828 <= g_out;
        h_out_read_reg_3811 <= h_out;
        seed_read_reg_3805 <= seed;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln805_reg_3996 <= add_ln805_fu_2110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        and_ln188_reg_4665 <= and_ln188_fu_3034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        bnorm1_reg_4635 <= grp_fu_1393_p2;
        bnorm2_reg_4640 <= grp_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        div_i_i_reg_4455 <= grp_fu_1474_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_358_reg_3931 <= empty_358_fu_1906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5990_fu_3052_p2 == 1'd0) & (tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        empty_359_reg_4686 <= empty_359_fu_3063_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18411_fu_3209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        empty_361_reg_4718 <= empty_361_fu_3260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18411_fu_3209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        empty_364_reg_4699 <= empty_364_fu_3230_p2;
        gmem0_addr_1_reg_4705 <= p_cast4_cast_fu_3245_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        empty_365_reg_4723 <= empty_365_fu_3275_p2;
        empty_366_reg_4728 <= empty_366_fu_3292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18310_fu_3306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        empty_372_reg_4741 <= empty_372_fu_3327_p2;
        gmem0_addr_3_reg_4747 <= p_cast6_cast_fu_3342_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        empty_373_reg_4766 <= empty_373_fu_3388_p2;
        empty_374_reg_4771 <= empty_374_fu_3405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        empty_380_reg_4796 <= empty_380_fu_3441_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1818_fu_3452_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        empty_382_reg_4828 <= empty_382_fu_3503_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1818_fu_3452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        empty_385_reg_4809 <= empty_385_fu_3473_p2;
        gmem0_addr_4_reg_4815 <= p_cast8_cast_fu_3488_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        empty_386_reg_4833 <= empty_386_fu_3518_p2;
        empty_387_reg_4838 <= empty_387_fu_3535_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_3549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state110))) begin
        empty_393_reg_4851 <= empty_393_fu_3570_p2;
        gmem0_addr_5_reg_4857 <= p_cast10_cast_fu_3585_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        empty_394_reg_4863 <= empty_394_fu_3607_p2;
        empty_395_reg_4868 <= empty_395_fu_3624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond18310_fu_3306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        gmem0_addr_2_reg_4760 <= sext_ln6002_fu_3366_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gmem0_addr_read_reg_4204 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln805_fu_2104_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        gmem0_addr_reg_4001 <= sext_ln809_fu_2131_p1;
        lshr_ln809_2_reg_4007 <= {{u_0_fu_450[5:3]}};
        tmp_s_reg_4011 <= tmp_s_fu_2151_p8;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        h_load_reg_4784 <= h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2760_1_fu_2622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        or_ln5913_reg_4356 <= or_ln5913_fu_2700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        reg_1615 <= grp_poly_small_mkgauss_fu_1282_ap_return_0;
        reg_1620 <= grp_poly_small_mkgauss_fu_1282_ap_return_1;
        reg_1625 <= grp_poly_small_mkgauss_fu_1282_ap_return_2;
        reg_1630 <= grp_poly_small_mkgauss_fu_1282_ap_return_3;
        reg_1635 <= grp_poly_small_mkgauss_fu_1282_ap_return_4;
        reg_1640 <= grp_poly_small_mkgauss_fu_1282_ap_return_5;
        reg_1645 <= grp_poly_small_mkgauss_fu_1282_ap_return_6;
        reg_1650 <= grp_poly_small_mkgauss_fu_1282_ap_return_7;
        reg_1655 <= grp_poly_small_mkgauss_fu_1282_ap_return_8;
        reg_1660 <= grp_poly_small_mkgauss_fu_1282_ap_return_9;
        reg_1665 <= grp_poly_small_mkgauss_fu_1282_ap_return_10;
        reg_1670 <= grp_poly_small_mkgauss_fu_1282_ap_return_11;
        reg_1675 <= grp_poly_small_mkgauss_fu_1282_ap_return_12;
        reg_1680 <= grp_poly_small_mkgauss_fu_1282_ap_return_13;
        reg_1685 <= grp_poly_small_mkgauss_fu_1282_ap_return_14;
        reg_1690 <= grp_poly_small_mkgauss_fu_1282_ap_return_15;
        reg_1695 <= grp_poly_small_mkgauss_fu_1282_ap_return_16;
        reg_1700 <= grp_poly_small_mkgauss_fu_1282_ap_return_17;
        reg_1705 <= grp_poly_small_mkgauss_fu_1282_ap_return_18;
        reg_1710 <= grp_poly_small_mkgauss_fu_1282_ap_return_19;
        reg_1715 <= grp_poly_small_mkgauss_fu_1282_ap_return_20;
        reg_1720 <= grp_poly_small_mkgauss_fu_1282_ap_return_21;
        reg_1725 <= grp_poly_small_mkgauss_fu_1282_ap_return_22;
        reg_1730 <= grp_poly_small_mkgauss_fu_1282_ap_return_23;
        reg_1735 <= grp_poly_small_mkgauss_fu_1282_ap_return_24;
        reg_1740 <= grp_poly_small_mkgauss_fu_1282_ap_return_25;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state68))) begin
        reg_1805 <= grp_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln546_fu_2798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        rt1_addr_3_reg_4463 <= zext_ln546_fu_2793_p1;
        u_221_reg_4469 <= u_221_fu_2804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln562_fu_2862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        rt1_addr_4_reg_4496 <= zext_ln562_fu_2857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_fu_2897_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        rt1_addr_5_reg_4524 <= zext_ln580_fu_2891_p1;
        rt1_addr_6_reg_4534 <= zext_ln583_fu_2915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln546_3_fu_2830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        rt2_addr_3_reg_4477 <= zext_ln546_1_fu_2825_p1;
        u_222_reg_4483 <= u_222_fu_2836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln562_1_fu_2879_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        rt2_addr_4_reg_4510 <= zext_ln562_1_fu_2874_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_2_fu_2926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        rt2_addr_5_reg_4547 <= zext_ln580_1_fu_2920_p1;
        rt2_addr_6_reg_4557 <= zext_ln583_4_fu_2944_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sext_ln2819_1_reg_4417 <= sext_ln2819_1_fu_2758_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        sext_ln2819_reg_4394 <= sext_ln2819_fu_2736_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5990_fu_3052_p2 == 1'd1) & (tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done))) begin
        slove_NTRU_break_0_1_fu_582 <= grp_solve_NTRU_fu_1364_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        tmp_205_reg_4305 <= test_reg_1030[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        tmp_reg_4669 <= grp_compute_public_1_fu_1352_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln805_reg_3985 <= trunc_ln805_fu_2037_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        u_215_reg_4290 <= u_215_fu_2503_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        u_216_reg_4317 <= u_216_fu_2598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        u_217_reg_4346 <= u_217_fu_2628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        u_218_reg_4384 <= u_218_fu_2730_p2;
        zext_ln2817_reg_4376[10 : 0] <= zext_ln2817_fu_2719_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        u_219_reg_4407 <= u_219_fu_2752_p2;
        zext_ln2817_1_reg_4399[10 : 0] <= zext_ln2817_1_fu_2741_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        u_220_reg_4430 <= u_220_fu_2775_p2;
        zext_ln225_reg_4422[9 : 0] <= zext_ln225_fu_2763_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        u_223_reg_4491 <= u_223_fu_2868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        u_224_reg_4505 <= u_224_fu_2885_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        u_225_reg_4519 <= u_225_fu_2903_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        u_226_reg_4542 <= u_226_fu_2932_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        u_227_reg_4570 <= u_227_fu_2960_p2;
        zext_ln5942_reg_4562[8 : 0] <= zext_ln5942_fu_2949_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5942_fu_2954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        xor_ln5946_reg_4580 <= xor_ln5946_fu_2966_p2;
        zext_ln5946_reg_4585[8 : 0] <= zext_ln5946_fu_2972_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        zext_ln5948_reg_4605[8 : 0] <= zext_ln5948_fu_2985_p1[8 : 0];
        zext_ln5950_reg_4615[9 : 0] <= zext_ln5950_fu_2993_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        F_upper_address0 = loop_index3_cast18_fu_3447_p1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        F_upper_address0 = grp_solve_NTRU_fu_1364_F_upper_address0;
    end else begin
        F_upper_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        F_upper_ce0 = 1'b1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        F_upper_ce0 = grp_solve_NTRU_fu_1364_F_upper_ce0;
    end else begin
        F_upper_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        F_upper_we0 = grp_solve_NTRU_fu_1364_F_upper_we0;
    end else begin
        F_upper_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        G_upper_address0 = loop_index_cast21_fu_3544_p1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        G_upper_address0 = grp_solve_NTRU_fu_1364_G_upper_address0;
    end else begin
        G_upper_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        G_upper_ce0 = 1'b1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        G_upper_ce0 = grp_solve_NTRU_fu_1364_G_upper_ce0;
    end else begin
        G_upper_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        G_upper_we0 = grp_solve_NTRU_fu_1364_G_upper_we0;
    end else begin
        G_upper_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state101_blk = 1'b1;
    end else begin
        ap_ST_fsm_state101_blk = 1'b0;
    end
end

assign ap_ST_fsm_state102_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state103_blk = 1'b1;
    end else begin
        ap_ST_fsm_state103_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state104_blk = 1'b1;
    end else begin
        ap_ST_fsm_state104_blk = 1'b0;
    end
end

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state109_blk = 1'b1;
    end else begin
        ap_ST_fsm_state109_blk = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state111_blk = 1'b1;
    end else begin
        ap_ST_fsm_state111_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state112_blk = 1'b1;
    end else begin
        ap_ST_fsm_state112_blk = 1'b0;
    end
end

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state117_blk = 1'b1;
    end else begin
        ap_ST_fsm_state117_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((gmem0_RVALID == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

always @ (*) begin
    if ((grp_fpr_of_fu_1317_ap_done == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

always @ (*) begin
    if ((grp_fpr_of_fu_1317_ap_done == 1'b0)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state35_on_subcall_done)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state64_on_subcall_done)) begin
        ap_ST_fsm_state64_blk = 1'b1;
    end else begin
        ap_ST_fsm_state64_blk = 1'b0;
    end
end

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((grp_compute_public_1_fu_1352_ap_done == 1'b0)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

assign ap_ST_fsm_state75_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state76_on_subcall_done)) begin
        ap_ST_fsm_state76_blk = 1'b1;
    end else begin
        ap_ST_fsm_state76_blk = 1'b0;
    end
end

assign ap_ST_fsm_state77_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state78_blk = 1'b1;
    end else begin
        ap_ST_fsm_state78_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state79_blk = 1'b1;
    end else begin
        ap_ST_fsm_state79_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state84_blk = 1'b1;
    end else begin
        ap_ST_fsm_state84_blk = 1'b0;
    end
end

assign ap_ST_fsm_state85_blk = 1'b0;

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state86_blk = 1'b1;
    end else begin
        ap_ST_fsm_state86_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state87_blk = 1'b1;
    end else begin
        ap_ST_fsm_state87_blk = 1'b0;
    end
end

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

always @ (*) begin
    if ((gmem0_BVALID == 1'b0)) begin
        ap_ST_fsm_state92_blk = 1'b1;
    end else begin
        ap_ST_fsm_state92_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b0)) begin
        ap_ST_fsm_state93_blk = 1'b1;
    end else begin
        ap_ST_fsm_state93_blk = 1'b0;
    end
end

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

always @ (*) begin
    if ((gmem0_WREADY == 1'b0)) begin
        ap_ST_fsm_state96_blk = 1'b1;
    end else begin
        ap_ST_fsm_state96_blk = 1'b0;
    end
end

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((exitcond7_fu_3549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_3549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        f_address0 = loop_index12_cast12_fu_3204_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        f_address0 = zext_ln2817_fu_2719_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        f_address0 = zext_ln2760_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        f_address0 = zext_ln5884_fu_2491_p1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        f_address0 = grp_solve_NTRU_fu_1364_f_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        f_address0 = grp_compute_public_1_fu_1352_f_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        f_address0 = grp_poly_small_mkgauss_fu_1282_f_address0;
    end else begin
        f_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        f_ce0 = 1'b1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        f_ce0 = grp_solve_NTRU_fu_1364_f_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        f_ce0 = grp_compute_public_1_fu_1352_f_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        f_ce0 = grp_poly_small_mkgauss_fu_1282_f_ce0;
    end else begin
        f_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        f_we0 = grp_poly_small_mkgauss_fu_1282_f_we0;
    end else begin
        f_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        g_address0 = loop_index9_cast15_fu_3301_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        g_address0 = zext_ln2817_1_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        g_address0 = zext_ln2760_1_fu_2617_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        g_address0 = zext_ln5884_fu_2491_p1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        g_address0 = grp_solve_NTRU_fu_1364_g_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        g_address0 = grp_compute_public_1_fu_1352_g_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        g_address0 = grp_poly_small_mkgauss_fu_1282_f_address0;
    end else begin
        g_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        g_ce0 = 1'b1;
    end else if (((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76))) begin
        g_ce0 = grp_solve_NTRU_fu_1364_g_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        g_ce0 = grp_compute_public_1_fu_1352_g_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        g_ce0 = grp_poly_small_mkgauss_fu_1282_f_ce0;
    end else begin
        g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        g_we0 = grp_poly_small_mkgauss_fu_1282_f_we0;
    end else begin
        g_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (gmem0_ARREADY == 1'b1))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_AWREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state111)) begin
            gmem0_AWADDR = gmem0_addr_5_reg_4857;
        end else if ((1'b1 == ap_CS_fsm_state103)) begin
            gmem0_AWADDR = gmem0_addr_4_reg_4815;
        end else if ((1'b1 == ap_CS_fsm_state93)) begin
            gmem0_AWADDR = gmem0_addr_2_reg_4760;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            gmem0_AWADDR = gmem0_addr_3_reg_4747;
        end else if ((1'b1 == ap_CS_fsm_state78)) begin
            gmem0_AWADDR = gmem0_addr_1_reg_4705;
        end else begin
            gmem0_AWADDR = 'bx;
        end
    end else begin
        gmem0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) & (gmem0_AWREADY == 1'b1))) begin
        gmem0_AWLEN = 32'd1024;
    end else if ((((1'b1 == ap_CS_fsm_state111) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state103) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state86) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state78) & (gmem0_AWREADY == 1'b1)))) begin
        gmem0_AWLEN = 32'd1;
    end else begin
        gmem0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state111) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state103) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state93) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state86) & (gmem0_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state78) & (gmem0_AWREADY == 1'b1)))) begin
        gmem0_AWVALID = 1'b1;
    end else begin
        gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state117) & (gmem0_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state109) & (gmem0_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state101) & (gmem0_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state92) & (gmem0_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state84) & (gmem0_BVALID == 1'b1)))) begin
        gmem0_BREADY = 1'b1;
    end else begin
        gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (gmem0_RVALID == 1'b1))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        gmem0_WDATA = empty_395_reg_4868;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        gmem0_WDATA = empty_387_reg_4838;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        gmem0_WDATA = h_load_reg_4784;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        gmem0_WDATA = empty_374_reg_4771;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        gmem0_WDATA = empty_366_reg_4728;
    end else begin
        gmem0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        gmem0_WSTRB = empty_394_reg_4863;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        gmem0_WSTRB = empty_386_reg_4833;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        gmem0_WSTRB = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        gmem0_WSTRB = empty_373_reg_4766;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        gmem0_WSTRB = empty_365_reg_4723;
    end else begin
        gmem0_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state112) & (gmem0_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state104) & (gmem0_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state96) & (gmem0_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state87) & (gmem0_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state79) & (gmem0_WREADY == 1'b1)))) begin
        gmem0_WVALID = 1'b1;
    end else begin
        gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state79))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fpr_of_fu_1317_i = sext_ln2819_1_reg_4417;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fpr_of_fu_1317_i = sext_ln2819_reg_4394;
    end else begin
        grp_fpr_of_fu_1317_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1393_p0 = grp_fu_1408_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1393_p0 = bnorm1_1_reg_1258;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1393_p0 = ap_phi_mux_bnorm1_1_phi_fu_1262_p4;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1393_p0 = grp_fu_1393_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1393_p0 = grp_fu_1422_p2;
    end else begin
        grp_fu_1393_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1393_p1 = bnorm4_1_reg_1222;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_1393_p1 = bnorm3_1_reg_1234;
    end else if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1393_p1 = grp_fu_1422_p2;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1393_p1 = bnorm2_1_reg_1246;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1393_p1 = grp_fu_1397_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1393_p1 = grp_fu_1429_p2;
    end else begin
        grp_fu_1393_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1397_p0 = grp_fu_1413_p2;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_1397_p0 = grp_fu_1397_p2;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1397_p0 = bnorm2_1_reg_1246;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1397_p0 = grp_fu_1436_p2;
    end else begin
        grp_fu_1397_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1397_p1 = grp_fu_1429_p2;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1397_p1 = grp_fu_1443_p2;
    end else begin
        grp_fu_1397_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1422_p0 = rt2_q0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1422_p0 = rt1_q0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1422_p0 = rt2_q1;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_1422_p0 = rt1_q1;
    end else begin
        grp_fu_1422_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1422_p1 = rt2_q0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1422_p1 = rt1_q0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1422_p1 = rt3_q0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_1422_p1 = 64'd4667981563525332992;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1422_p1 = rt1_q1;
    end else begin
        grp_fu_1422_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1429_p0 = rt2_q1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1429_p0 = rt1_q1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1429_p0 = rt1_q0;
    end else begin
        grp_fu_1429_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_1429_p1 = rt2_q1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1429_p1 = rt1_q1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1429_p1 = rt3_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1429_p1 = rt1_q0;
    end else begin
        grp_fu_1429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1436_p0 = rt1_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1436_p0 = rt2_q1;
    end else begin
        grp_fu_1436_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1436_p1 = rt1_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1436_p1 = rt2_q1;
    end else begin
        grp_fu_1436_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1443_p0 = rt1_q1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1443_p0 = rt2_q0;
    end else begin
        grp_fu_1443_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_1443_p1 = rt1_q1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1443_p1 = rt2_q0;
    end else begin
        grp_fu_1443_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read = reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read = rng_st_1_fu_478;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read1 = reg_1625;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read1 = rng_st_7_fu_482;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read10 = reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read10 = rng_st_62_fu_518;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read11 = reg_1675;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read11 = rng_st_63_fu_522;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read12 = reg_1680;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read12 = rng_st_64_fu_526;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read13 = reg_1685;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read13 = rng_st_65_fu_530;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read13 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read14 = reg_1690;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read14 = rng_st_66_fu_534;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read14 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read15 = reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read15 = rng_st_67_fu_538;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read15 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read16 = reg_1700;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read16 = rng_st_68_fu_542;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read16 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read17 = reg_1705;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read17 = rng_st_69_fu_546;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read17 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read18 = reg_1710;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read18 = rng_st_70_fu_550;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read18 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read19 = reg_1715;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read19 = rng_st_71_fu_554;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read19 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read2 = reg_1630;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read2 = rng_st_54_fu_486;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read20 = reg_1720;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read20 = rng_st_72_fu_558;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read21 = reg_1725;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read21 = rng_st_73_fu_562;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read21 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read22 = reg_1730;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read22 = rng_st_74_fu_566;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read22 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read23 = reg_1735;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read23 = rng_st_75_fu_570;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read23 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read24 = reg_1740;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read24 = rng_st_76_fu_574;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read24 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read25 = reg_1615;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read25 = rng_dptr_2_fu_578;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read25 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read3 = reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read3 = rng_st_55_fu_490;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read4 = reg_1640;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read4 = rng_st_56_fu_494;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read5 = reg_1645;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read5 = rng_st_57_fu_498;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read6 = reg_1650;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read6 = rng_st_58_fu_502;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read7 = reg_1655;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read7 = rng_st_59_fu_506;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read8 = reg_1660;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read8 = rng_st_60_fu_510;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_poly_small_mkgauss_fu_1282_p_read9 = reg_1665;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_poly_small_mkgauss_fu_1282_p_read9 = rng_st_61_fu_514;
    end else begin
        grp_poly_small_mkgauss_fu_1282_p_read9 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        h_address0 = loop_index6_cast_fu_3414_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        h_address0 = grp_compute_public_1_fu_1352_h_address0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        h_ce0 = grp_compute_public_1_fu_1352_h_ce0;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        h_ce1 = grp_compute_public_1_fu_1352_h_ce1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        h_we0 = grp_compute_public_1_fu_1352_h_we0;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        h_we1 = grp_compute_public_1_fu_1352_h_we1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        rt1_address0 = zext_ln5948_fu_2985_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        rt1_address0 = zext_ln5942_fu_2949_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        rt1_address0 = rt1_addr_5_reg_4524;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        rt1_address0 = zext_ln580_fu_2891_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        rt1_address0 = rt1_addr_4_reg_4496;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        rt1_address0 = rt1_addr_3_reg_4463;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        rt1_address0 = zext_ln228_fu_2787_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        rt1_address0 = zext_ln2817_reg_4376;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_address0 = grp_iFFT_fu_1338_f_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_address0 = grp_FFT_fu_1324_f_address0;
    end else begin
        rt1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        rt1_address1 = zext_ln5950_fu_2993_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        rt1_address1 = zext_ln5946_fu_2972_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        rt1_address1 = rt1_addr_6_reg_4534;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        rt1_address1 = zext_ln583_fu_2915_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        rt1_address1 = zext_ln562_fu_2857_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        rt1_address1 = zext_ln546_fu_2793_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        rt1_address1 = zext_ln225_fu_2763_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_address1 = grp_iFFT_fu_1338_f_address1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_address1 = grp_FFT_fu_1324_f_address1;
    end else begin
        rt1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state31) & (grp_fpr_of_fu_1317_ap_done == 1'b1)))) begin
        rt1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_ce0 = grp_iFFT_fu_1338_f_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_ce0 = grp_FFT_fu_1324_f_ce0;
    end else begin
        rt1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60))) begin
        rt1_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_ce1 = grp_iFFT_fu_1338_f_ce1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_ce1 = grp_FFT_fu_1324_f_ce1;
    end else begin
        rt1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54))) begin
        rt1_d0 = grp_fu_1422_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        rt1_d0 = bitcast_ln147_1_fu_2820_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        rt1_d0 = grp_fpr_of_fu_1317_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_d0 = grp_iFFT_fu_1338_f_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_d0 = grp_FFT_fu_1324_f_d0;
    end else begin
        rt1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        rt1_d1 = grp_fu_1429_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_d1 = grp_iFFT_fu_1338_f_d1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_d1 = grp_FFT_fu_1324_f_d1;
    end else begin
        rt1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state31) & (grp_fpr_of_fu_1317_ap_done == 1'b1)))) begin
        rt1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_we0 = grp_iFFT_fu_1338_f_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_we0 = grp_FFT_fu_1324_f_we0;
    end else begin
        rt1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        rt1_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt1_we1 = grp_iFFT_fu_1338_f_we1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt1_we1 = grp_FFT_fu_1324_f_we1;
    end else begin
        rt1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        rt2_address0 = zext_ln5948_reg_4605;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        rt2_address0 = zext_ln5942_reg_4562;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        rt2_address0 = rt2_addr_5_reg_4547;
    end else if (((icmp_ln580_2_fu_2926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        rt2_address0 = zext_ln580_1_fu_2920_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        rt2_address0 = rt2_addr_4_reg_4510;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        rt2_address0 = rt2_addr_3_reg_4477;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        rt2_address0 = zext_ln228_fu_2787_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        rt2_address0 = zext_ln2817_1_reg_4399;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_address0 = grp_iFFT_fu_1345_f_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_address0 = grp_FFT_fu_1331_f_address0;
    end else begin
        rt2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        rt2_address1 = zext_ln5950_reg_4615;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        rt2_address1 = zext_ln5946_reg_4585;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        rt2_address1 = rt2_addr_6_reg_4557;
    end else if (((icmp_ln580_2_fu_2926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        rt2_address1 = zext_ln583_4_fu_2944_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        rt2_address1 = zext_ln562_1_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        rt2_address1 = zext_ln546_1_fu_2825_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        rt2_address1 = zext_ln225_fu_2763_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_address1 = grp_iFFT_fu_1345_f_address1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_address1 = grp_FFT_fu_1331_f_address1;
    end else begin
        rt2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state51) | ((icmp_ln580_2_fu_2926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61)) | ((1'b1 == ap_CS_fsm_state34) & (grp_fpr_of_fu_1317_ap_done == 1'b1)))) begin
        rt2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_ce0 = grp_iFFT_fu_1345_f_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_ce0 = grp_FFT_fu_1331_f_ce0;
    end else begin
        rt2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state63) | ((icmp_ln580_2_fu_2926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61)))) begin
        rt2_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_ce1 = grp_iFFT_fu_1345_f_ce1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_ce1 = grp_FFT_fu_1331_f_ce1;
    end else begin
        rt2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57))) begin
        rt2_d0 = grp_fu_1422_p2;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        rt2_d0 = bitcast_ln147_3_fu_2852_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        rt2_d0 = grp_fpr_of_fu_1317_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_d0 = grp_iFFT_fu_1345_f_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_d0 = grp_FFT_fu_1331_f_d0;
    end else begin
        rt2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        rt2_d1 = grp_fu_1429_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_d1 = grp_iFFT_fu_1345_f_d1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_d1 = grp_FFT_fu_1331_f_d1;
    end else begin
        rt2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state51) | ((1'b1 == ap_CS_fsm_state34) & (grp_fpr_of_fu_1317_ap_done == 1'b1)))) begin
        rt2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_we0 = grp_iFFT_fu_1345_f_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_we0 = grp_FFT_fu_1331_f_we0;
    end else begin
        rt2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        rt2_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        rt2_we1 = grp_iFFT_fu_1345_f_we1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        rt2_we1 = grp_FFT_fu_1331_f_we1;
    end else begin
        rt2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        rt3_address0 = zext_ln580_1_fu_2920_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        rt3_address0 = zext_ln580_fu_2891_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        rt3_address0 = zext_ln225_reg_4422;
    end else begin
        rt3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state47))) begin
        rt3_ce0 = 1'b1;
    end else begin
        rt3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        rt3_we0 = 1'b1;
    end else begin
        rt3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond19826_fu_1900_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln805_fu_2104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (gmem0_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (gmem0_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((grp_poly_small_mkgauss_fu_1282_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_205_fu_2509_p3 == 1'd0) & (icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((tmp_205_fu_2509_p3 == 1'd1) & (icmp_ln5884_fu_2497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln2760_fu_2592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state24 : begin
            if (((or_ln5913_fu_2700_p2 == 1'd0) & (icmp_ln2760_1_fu_2622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((or_ln5913_fu_2700_p2 == 1'd1) & (icmp_ln2760_1_fu_2622_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln2817_fu_2724_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (grp_fpr_of_fu_1317_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln2817_1_fu_2746_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_fpr_of_fu_1317_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (1'b0 == ap_block_state35_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln225_fu_2769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln546_fu_2798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln546_3_fu_2830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln562_fu_2862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln562_1_fu_2879_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state58 : begin
            if (((icmp_ln580_fu_2897_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state61 : begin
            if (((icmp_ln580_2_fu_2926_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (1'b0 == ap_block_state64_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((icmp_ln5942_fu_2954_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((1'd0 == and_ln188_fu_3034_p2) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            if (((grp_compute_public_1_fu_1352_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state74) & (grp_compute_public_1_fu_1352_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else if (((grp_compute_public_1_fu_1352_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state74) & (grp_compute_public_1_fu_1352_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done) & ((tmp_205_reg_4305 == 1'd1) | ((or_ln5913_reg_4356 == 1'd1) | ((1'd0 == and_ln188_reg_4665) | ((icmp_ln5990_fu_3052_p2 == 1'd1) | (tmp_reg_4669 == 1'd0))))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((icmp_ln5990_fu_3052_p2 == 1'd0) & (tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665) & (1'b1 == ap_CS_fsm_state76) & (1'b0 == ap_block_state76_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((exitcond18411_fu_3209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            if (((1'b1 == ap_CS_fsm_state79) & (gmem0_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((1'b1 == ap_CS_fsm_state84) & (gmem0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((exitcond18310_fu_3306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            if (((1'b1 == ap_CS_fsm_state86) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            if (((1'b1 == ap_CS_fsm_state87) & (gmem0_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if (((1'b1 == ap_CS_fsm_state92) & (gmem0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((1'b1 == ap_CS_fsm_state93) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            if (((exitcond1829_fu_3419_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & (gmem0_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (gmem0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            if (((exitcond1818_fu_3452_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            if (((1'b1 == ap_CS_fsm_state103) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            if (((1'b1 == ap_CS_fsm_state104) & (gmem0_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            if (((1'b1 == ap_CS_fsm_state109) & (gmem0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            if (((exitcond7_fu_3549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end
        end
        ap_ST_fsm_state111 : begin
            if (((1'b1 == ap_CS_fsm_state111) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((1'b1 == ap_CS_fsm_state112) & (gmem0_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            if (((1'b1 == ap_CS_fsm_state117) & (gmem0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F_upper_load_cast_fu_3511_p1 = F_upper_q0;

assign G_upper_load_cast_fu_3600_p1 = G_upper_q0;

assign add_ln5911_fu_2674_p2 = ($signed(sext_ln5861_1_fu_2670_p1) + $signed(sext_ln5861_fu_2650_p1));

assign add_ln805_fu_2110_p2 = (u_0_fu_450 + 6'd1);

assign add_ln809_fu_2116_p2 = (zext_ln805_fu_2100_p1 + seed_read_reg_3805);

assign and_ln188_fu_3034_p2 = (tmp_93_fu_1479_p2 & or_ln188_fu_3028_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

always @ (*) begin
    ap_block_state35_on_subcall_done = ((grp_FFT_fu_1331_ap_done == 1'b0) | (grp_FFT_fu_1324_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state64_on_subcall_done = ((grp_iFFT_fu_1345_ap_done == 1'b0) | (grp_iFFT_fu_1338_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state76_on_subcall_done = ((ap_predicate_op850_call_state76 == 1'b1) & (grp_solve_NTRU_fu_1364_ap_done == 1'b0));
end

assign ap_phi_mux_bnorm1_1_phi_fu_1262_p4 = bnorm1_1_reg_1258;

always @ (*) begin
    ap_predicate_op850_call_state76 = ((tmp_reg_4669 == 1'd1) & (or_ln5913_reg_4356 == 1'd0) & (tmp_205_reg_4305 == 1'd0) & (1'd1 == and_ln188_reg_4665));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln147_1_fu_2820_p1 = xor_ln147_fu_2814_p2;

assign bitcast_ln147_2_fu_2842_p1 = rt2_q1;

assign bitcast_ln147_3_fu_2852_p1 = xor_ln147_3_fu_2846_p2;

assign bitcast_ln147_fu_2810_p1 = rt1_q1;

assign bitcast_ln188_fu_2998_p1 = grp_fu_1393_p2;

assign empty_358_fu_1906_p2 = (empty_fu_310 + 5'd1);

assign empty_359_fu_3063_p1 = f_out_read_reg_3834[0:0];

assign empty_360_fu_3215_p2 = (loop_index12_fu_586 + 11'd1);

assign empty_361_fu_3260_p1 = g_out_read_reg_3828[0:0];

assign empty_362_fu_3221_p1 = loop_index12_fu_586[0:0];

assign empty_363_fu_3225_p2 = (loop_index12_cast12_fu_3204_p1 + f_out_read_reg_3834);

assign empty_364_fu_3230_p2 = (empty_362_fu_3221_p1 ^ empty_359_reg_4686);

assign empty_365_fu_3275_p2 = 2'd1 << p_cast13_fu_3272_p1;

assign empty_366_fu_3292_p2 = f_load_7_cast_fu_3268_p1 << p_cast14_fu_3288_p1;

assign empty_369_fu_3312_p2 = (loop_index9_fu_590 + 11'd1);

assign empty_370_fu_3318_p1 = loop_index9_fu_590[0:0];

assign empty_371_fu_3322_p2 = (loop_index9_cast15_fu_3301_p1 + g_out_read_reg_3828);

assign empty_372_fu_3327_p2 = (empty_370_fu_3318_p1 ^ empty_361_reg_4718);

assign empty_373_fu_3388_p2 = 2'd1 << p_cast16_fu_3385_p1;

assign empty_374_fu_3405_p2 = g_load_7_cast_fu_3381_p1 << p_cast17_fu_3401_p1;

assign empty_378_fu_3425_p2 = (loop_index6_fu_594 + 11'd1);

assign empty_380_fu_3441_p1 = F_upper_out_read_reg_3822[0:0];

assign empty_381_fu_3458_p2 = (loop_index3_fu_598 + 11'd1);

assign empty_382_fu_3503_p1 = G_upper_out_read_reg_3816[0:0];

assign empty_383_fu_3464_p1 = loop_index3_fu_598[0:0];

assign empty_384_fu_3468_p2 = (loop_index3_cast18_fu_3447_p1 + F_upper_out_read_reg_3822);

assign empty_385_fu_3473_p2 = (empty_383_fu_3464_p1 ^ empty_380_reg_4796);

assign empty_386_fu_3518_p2 = 2'd1 << p_cast19_fu_3515_p1;

assign empty_387_fu_3535_p2 = F_upper_load_cast_fu_3511_p1 << p_cast20_fu_3531_p1;

assign empty_390_fu_3555_p2 = (loop_index_fu_602 + 11'd1);

assign empty_391_fu_3561_p1 = loop_index_fu_602[0:0];

assign empty_392_fu_3565_p2 = (loop_index_cast21_fu_3544_p1 + G_upper_out_read_reg_3816);

assign empty_393_fu_3570_p2 = (empty_391_fu_3561_p1 ^ empty_382_reg_4828);

assign empty_394_fu_3607_p2 = 2'd1 << p_cast22_fu_3604_p1;

assign empty_395_fu_3624_p2 = G_upper_load_cast_fu_3600_p1 << p_cast23_fu_3620_p1;

assign exitcond1818_fu_3452_p2 = ((loop_index3_fu_598 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond1829_fu_3419_p2 = ((loop_index6_fu_594 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond18310_fu_3306_p2 = ((loop_index9_fu_590 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond18411_fu_3209_p2 = ((loop_index12_fu_586 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond19826_fu_1900_p2 = ((empty_fu_310 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond7_fu_3549_p2 = ((loop_index_fu_602 == 11'd1024) ? 1'b1 : 1'b0);

assign f_load_7_cast_fu_3268_p1 = f_q0;

assign g_load_7_cast_fu_3381_p1 = g_q0;

assign grp_FFT_fu_1324_ap_start = grp_FFT_fu_1324_ap_start_reg;

assign grp_FFT_fu_1331_ap_start = grp_FFT_fu_1331_ap_start_reg;

assign grp_compute_public_1_fu_1352_ap_start = grp_compute_public_1_fu_1352_ap_start_reg;

assign grp_fpr_of_fu_1317_ap_start = grp_fpr_of_fu_1317_ap_start_reg;

assign grp_fu_3630_p0 = sext_ln2761_fu_2604_p1;

assign grp_fu_3630_p1 = sext_ln2761_fu_2604_p1;

assign grp_fu_3639_p0 = sext_ln2761_1_fu_2706_p1;

assign grp_fu_3639_p1 = sext_ln2761_1_fu_2706_p1;

assign grp_iFFT_fu_1338_ap_start = grp_iFFT_fu_1338_ap_start_reg;

assign grp_iFFT_fu_1345_ap_start = grp_iFFT_fu_1345_ap_start_reg;

assign grp_poly_small_mkgauss_fu_1282_ap_start = grp_poly_small_mkgauss_fu_1282_ap_start_reg;

assign grp_solve_NTRU_fu_1364_ap_start = grp_solve_NTRU_fu_1364_ap_start_reg;

assign icmp_ln188_1_fu_3022_p2 = ((trunc_ln188_fu_3012_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_3016_p2 = ((tmp_92_fu_3002_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_2769_p2 = ((u_144_reg_1145 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln2760_1_fu_2622_p2 = ((u_138_reg_1112 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln2760_fu_2592_p2 = ((u_reg_1077 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln2817_1_fu_2746_p2 = ((u_142_reg_1134 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln2817_fu_2724_p2 = ((u_140_reg_1123 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln546_3_fu_2830_p2 = ((u_148_reg_1167 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln546_fu_2798_p2 = ((u_146_reg_1156 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln562_1_fu_2879_p2 = ((u_152_reg_1189 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln562_fu_2862_p2 = ((u_150_reg_1178 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_2926_p2 = ((u_156_reg_1211 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_2897_p2 = ((u_154_reg_1200 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln5884_fu_2497_p2 = ((u_014_reg_1042 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln5890_1_fu_2533_p2 = (($signed(f_q0) < $signed(8'd241)) ? 1'b1 : 1'b0);

assign icmp_ln5890_fu_2527_p2 = (($signed(tmp_206_fu_2517_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln5891_1_fu_2555_p2 = (($signed(g_q0) < $signed(8'd241)) ? 1'b1 : 1'b0);

assign icmp_ln5891_fu_2549_p2 = (($signed(tmp_207_fu_2539_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln5913_fu_2694_p2 = ((add_ln5911_fu_2674_p2 > 27'd16822) ? 1'b1 : 1'b0);

assign icmp_ln5942_fu_2954_p2 = ((u_116_reg_1270 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln5990_fu_3052_p2 = ((grp_solve_NTRU_fu_1364_ap_return_0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln805_fu_2104_p2 = ((u_0_fu_450 == 6'd48) ? 1'b1 : 1'b0);

assign loop_index12_cast12_fu_3204_p1 = loop_index12_fu_586;

assign loop_index3_cast18_fu_3447_p1 = loop_index3_fu_598;

assign loop_index6_cast_fu_3414_p1 = loop_index6_fu_594;

assign loop_index9_cast15_fu_3301_p1 = loop_index9_fu_590;

assign loop_index_cast21_fu_3544_p1 = loop_index_fu_602;

assign lshr_ln809_fu_2320_p2 = gmem0_addr_read_reg_4204 >> zext_ln809_fu_2316_p1;

assign ng_1_fu_2611_p2 = (sext_ln2765_fu_2608_p1 | ng_reg_1053);

assign ng_3_fu_2713_p2 = (sext_ln2765_1_fu_2710_p1 | ng_2_reg_1088);

assign normf_fu_2642_p3 = ((tmp_208_fu_2634_p3[0:0] == 1'b1) ? 26'd67108863 : s_reg_1065);

assign normg_fu_2662_p3 = ((tmp_209_fu_2654_p3[0:0] == 1'b1) ? 26'd67108863 : s_2_reg_1100);

assign or_ln188_fu_3028_p2 = (icmp_ln188_fu_3016_p2 | icmp_ln188_1_fu_3022_p2);

assign or_ln5891_1_fu_2567_p2 = (icmp_ln5891_fu_2549_p2 | icmp_ln5891_1_fu_2555_p2);

assign or_ln5891_2_fu_2573_p2 = (or_ln5891_fu_2561_p2 | or_ln5891_1_fu_2567_p2);

assign or_ln5891_fu_2561_p2 = (icmp_ln5890_fu_2527_p2 | icmp_ln5890_1_fu_2533_p2);

assign or_ln5911_fu_2680_p2 = (normg_fu_2662_p3 | normf_fu_2642_p3);

assign or_ln5913_fu_2700_p2 = (tmp_210_fu_2686_p3 | icmp_ln5913_fu_2694_p2);

assign p_cast10_cast_fu_3585_p1 = $signed(p_cast_fu_3575_p4);

assign p_cast13_fu_3272_p1 = empty_364_reg_4699;

assign p_cast14_fu_3288_p1 = tmp_170_fu_3281_p3;

assign p_cast16_fu_3385_p1 = empty_372_reg_4741;

assign p_cast17_fu_3401_p1 = tmp_171_fu_3394_p3;

assign p_cast19_fu_3515_p1 = empty_385_reg_4809;

assign p_cast20_fu_3531_p1 = tmp_172_fu_3524_p3;

assign p_cast22_fu_3604_p1 = empty_393_reg_4851;

assign p_cast23_fu_3620_p1 = tmp_173_fu_3613_p3;

assign p_cast4_cast_fu_3245_p1 = $signed(p_cast4_fu_3235_p4);

assign p_cast4_fu_3235_p4 = {{empty_363_fu_3225_p2[63:1]}};

assign p_cast6_cast_fu_3342_p1 = $signed(p_cast6_fu_3332_p4);

assign p_cast6_fu_3332_p4 = {{empty_371_fu_3322_p2[63:1]}};

assign p_cast8_cast_fu_3488_p1 = $signed(p_cast8_fu_3478_p4);

assign p_cast8_fu_3478_p4 = {{empty_384_fu_3468_p2[63:1]}};

assign p_cast_fu_3575_p4 = {{empty_392_fu_3565_p2[63:1]}};

assign p_load_load_fu_1828_p1 = empty_fu_310;

assign rng_st_0_fu_314 = 64'd0;

assign rng_st_51_0_fu_318 = 64'd0;

assign rng_st_52_0_fu_322 = 64'd0;

assign rng_st_53_0_fu_326 = 64'd0;

assign rng_st_54_0_fu_330 = 64'd0;

assign rng_st_55_0_fu_334 = 64'd0;

assign rng_st_56_0_fu_406 = 64'd0;

assign rng_st_57_0_load_reg_3843 = 64'd0;

assign rng_st_58_0_load_reg_3848 = 64'd0;

assign rng_st_59_0_load_reg_3853 = 64'd0;

assign rng_st_60_0_load_reg_3858 = 64'd0;

assign rng_st_61_0_load_reg_3863 = 64'd0;

assign rng_st_62_0_load_reg_3868 = 64'd0;

assign rng_st_63_0_load_reg_3873 = 64'd0;

assign rng_st_64_0_load_reg_3878 = 64'd0;

assign rng_st_65_0_load_reg_3883 = 64'd0;

assign rng_st_66_0_fu_410 = 64'd0;

assign rng_st_67_0_load_reg_3888 = 64'd0;

assign rng_st_68_0_load_reg_3893 = 64'd0;

assign rng_st_69_0_load_reg_3898 = 64'd0;

assign rng_st_70_0_load_reg_3903 = 64'd0;

assign rng_st_71_0_load_reg_3908 = 64'd0;

assign rng_st_72_0_load_reg_3913 = 64'd0;

assign rng_st_73_0_load_reg_3918 = 64'd0;

assign rng_st_74_0_load_reg_3923 = 64'd0;

assign rng_st_77_fu_2181_p2 = (rng_st_66_0_fu_410 ^ 64'd9223372036854775808);

assign rng_st_fu_2175_p2 = (rng_st_56_0_fu_406 ^ 64'd31);

assign sext_ln2761_1_fu_2706_p1 = $signed(g_q0);

assign sext_ln2761_fu_2604_p1 = $signed(f_q0);

assign sext_ln2765_1_fu_2710_p1 = grp_fu_3639_p3;

assign sext_ln2765_fu_2608_p1 = grp_fu_3630_p3;

assign sext_ln2819_1_fu_2758_p1 = $signed(g_q0);

assign sext_ln2819_fu_2736_p1 = $signed(f_q0);

assign sext_ln5861_1_fu_2670_p1 = normg_fu_2662_p3;

assign sext_ln5861_fu_2650_p1 = normf_fu_2642_p3;

assign sext_ln5950_fu_2990_p1 = xor_ln5946_reg_4580;

assign sext_ln6002_fu_3366_p1 = $signed(trunc_ln_fu_3357_p4);

assign sext_ln809_fu_2131_p1 = $signed(trunc_ln809_1_fu_2121_p4);

assign shl_ln809_1_fu_2333_p2 = u_0_fu_450 << 6'd3;

assign shl_ln809_fu_2342_p2 = zext_ln809_1_fu_2329_p1 << zext_ln809_2_fu_2338_p1;

assign shl_ln_fu_2308_p3 = {{xor_ln809_fu_2303_p2}, {3'd0}};

assign test_1_fu_2579_p3 = ((or_ln5891_2_fu_2573_p2[0:0] == 1'b1) ? 32'd4294967295 : test_reg_1030);

assign tmp_170_fu_3281_p3 = {{empty_364_reg_4699}, {3'd0}};

assign tmp_171_fu_3394_p3 = {{empty_372_reg_4741}, {3'd0}};

assign tmp_172_fu_3524_p3 = {{empty_385_reg_4809}, {3'd0}};

assign tmp_173_fu_3613_p3 = {{empty_393_reg_4851}, {3'd0}};

assign tmp_205_fu_2509_p3 = test_reg_1030[32'd31];

assign tmp_206_fu_2517_p4 = {{f_q0[7:4]}};

assign tmp_207_fu_2539_p4 = {{g_q0[7:4]}};

assign tmp_208_fu_2634_p3 = ng_reg_1053[32'd31];

assign tmp_209_fu_2654_p3 = ng_2_reg_1088[32'd31];

assign tmp_210_fu_2686_p3 = or_ln5911_fu_2680_p2[32'd25];

assign tmp_92_fu_3002_p4 = {{bitcast_ln188_fu_2998_p1[62:52]}};

assign tmp_s_fu_2151_p7 = {{u_0_fu_450[5:3]}};

assign trunc_ln188_fu_3012_p1 = bitcast_ln188_fu_2998_p1[51:0];

assign trunc_ln805_fu_2037_p1 = seed_read_reg_3805[0:0];

assign trunc_ln809_1_fu_2121_p4 = {{add_ln809_fu_2116_p2[63:1]}};

assign trunc_ln809_2_fu_2325_p1 = lshr_ln809_fu_2320_p2[7:0];

assign trunc_ln809_fu_2300_p1 = u_0_fu_450[0:0];

assign trunc_ln_fu_3357_p4 = {{h_out_read_reg_3811[63:1]}};

assign u_215_fu_2503_p2 = (u_014_reg_1042 + 11'd1);

assign u_216_fu_2598_p2 = (u_reg_1077 + 11'd1);

assign u_217_fu_2628_p2 = (u_138_reg_1112 + 11'd1);

assign u_218_fu_2730_p2 = (u_140_reg_1123 + 11'd1);

assign u_219_fu_2752_p2 = (u_142_reg_1134 + 11'd1);

assign u_220_fu_2775_p2 = (u_144_reg_1145 + 10'd1);

assign u_221_fu_2804_p2 = (u_146_reg_1156 + 11'd1);

assign u_222_fu_2836_p2 = (u_148_reg_1167 + 11'd1);

assign u_223_fu_2868_p2 = (u_150_reg_1178 + 11'd1);

assign u_224_fu_2885_p2 = (u_152_reg_1189 + 11'd1);

assign u_225_fu_2903_p2 = (u_154_reg_1200 + 10'd1);

assign u_226_fu_2932_p2 = (u_156_reg_1211 + 10'd1);

assign u_227_fu_2960_p2 = (u_116_reg_1270 + 9'd1);

assign xor_ln147_3_fu_2846_p2 = (bitcast_ln147_2_fu_2842_p1 ^ 64'd9223372036854775808);

assign xor_ln147_fu_2814_p2 = (bitcast_ln147_fu_2810_p1 ^ 64'd9223372036854775808);

assign xor_ln228_fu_2781_p2 = (u_144_reg_1145 ^ 10'd512);

assign xor_ln583_1_fu_2938_p2 = (u_156_reg_1211 ^ 10'd512);

assign xor_ln583_fu_2909_p2 = (u_154_reg_1200 ^ 10'd512);

assign xor_ln5946_fu_2966_p2 = (u_116_reg_1270 ^ 9'd256);

assign xor_ln809_1_fu_2348_p2 = (tmp_s_reg_4011 ^ shl_ln809_fu_2342_p2);

assign xor_ln809_fu_2303_p2 = (trunc_ln809_fu_2300_p1 ^ trunc_ln805_reg_3985);

assign zext_ln225_fu_2763_p1 = u_144_reg_1145;

assign zext_ln228_fu_2787_p1 = xor_ln228_fu_2781_p2;

assign zext_ln2760_1_fu_2617_p1 = u_138_reg_1112;

assign zext_ln2760_fu_2587_p1 = u_reg_1077;

assign zext_ln2817_1_fu_2741_p1 = u_142_reg_1134;

assign zext_ln2817_fu_2719_p1 = u_140_reg_1123;

assign zext_ln546_1_fu_2825_p1 = u_148_reg_1167;

assign zext_ln546_fu_2793_p1 = u_146_reg_1156;

assign zext_ln562_1_fu_2874_p1 = u_152_reg_1189;

assign zext_ln562_fu_2857_p1 = u_150_reg_1178;

assign zext_ln580_1_fu_2920_p1 = u_156_reg_1211;

assign zext_ln580_fu_2891_p1 = u_154_reg_1200;

assign zext_ln583_4_fu_2944_p1 = xor_ln583_1_fu_2938_p2;

assign zext_ln583_fu_2915_p1 = xor_ln583_fu_2909_p2;

assign zext_ln5884_fu_2491_p1 = u_014_reg_1042;

assign zext_ln5942_fu_2949_p1 = u_116_reg_1270;

assign zext_ln5946_fu_2972_p1 = $unsigned(xor_ln5946_fu_2966_p2);

assign zext_ln5948_cast_fu_2977_p3 = {{1'd1}, {u_116_reg_1270}};

assign zext_ln5948_fu_2985_p1 = zext_ln5948_cast_fu_2977_p3;

assign zext_ln5950_fu_2993_p1 = $unsigned(sext_ln5950_fu_2990_p1);

assign zext_ln805_fu_2100_p1 = u_0_fu_450;

assign zext_ln809_1_fu_2329_p1 = trunc_ln809_2_fu_2325_p1;

assign zext_ln809_2_fu_2338_p1 = shl_ln809_1_fu_2333_p2;

assign zext_ln809_fu_2316_p1 = shl_ln_fu_2308_p3;

always @ (posedge ap_clk) begin
    zext_ln2817_reg_4376[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln2817_1_reg_4399[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln225_reg_4422[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln5942_reg_4562[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln5946_reg_4585[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln5948_reg_4605[63:9] <= 55'b0000000000000000000000000000000000000000000000000000001;
    zext_ln5950_reg_4615[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //keygen
