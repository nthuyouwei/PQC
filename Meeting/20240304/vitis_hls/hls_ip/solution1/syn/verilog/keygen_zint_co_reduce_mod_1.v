// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keygen_zint_co_reduce_mod_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla18_address0,
        vla18_ce0,
        vla18_we0,
        vla18_d0,
        vla18_q0,
        vla18_address1,
        vla18_ce1,
        vla18_we1,
        vla18_d1,
        vla18_q1,
        a,
        b,
        m,
        m0i,
        xa,
        xb,
        ya,
        yb
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] vla18_address0;
output   vla18_ce0;
output  [3:0] vla18_we0;
output  [31:0] vla18_d0;
input  [31:0] vla18_q0;
output  [12:0] vla18_address1;
output   vla18_ce1;
output  [3:0] vla18_we1;
output  [31:0] vla18_d1;
input  [31:0] vla18_q1;
input  [8:0] a;
input  [12:0] b;
input  [11:0] m;
input  [30:0] m0i;
input  [63:0] xa;
input  [63:0] xb;
input  [63:0] ya;
input  [63:0] yb;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] vla18_address0;
reg vla18_ce0;
reg[3:0] vla18_we0;
reg[31:0] vla18_d0;
reg[12:0] vla18_address1;
reg vla18_ce1;
reg[3:0] vla18_we1;
reg[31:0] vla18_d1;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [10:0] a_cast_cast_cast_cast_fu_427_p1;
reg   [10:0] a_cast_cast_cast_cast_reg_1477;
wire   [62:0] fa_cast_fu_503_p1;
reg   [62:0] fa_cast_reg_1486;
wire   [62:0] zext_ln1840_fu_507_p1;
reg   [62:0] zext_ln1840_reg_1491;
wire   [7:0] u_26_fu_520_p2;
reg   [7:0] u_26_reg_1499;
wire    ap_CS_fsm_state3;
wire   [9:0] shl_ln_fu_526_p3;
reg   [9:0] shl_ln_reg_1504;
wire   [0:0] icmp_ln1840_fu_514_p2;
wire   [0:0] icmp_ln1850_fu_558_p2;
reg   [0:0] icmp_ln1850_reg_1516;
wire    ap_CS_fsm_state4;
wire   [63:0] mul_ln1846_fu_624_p2;
reg   [63:0] mul_ln1846_reg_1532;
wire   [63:0] mul_ln1848_fu_649_p2;
reg   [63:0] mul_ln1848_reg_1542;
wire   [63:0] za_fu_699_p2;
reg   [63:0] za_reg_1547;
wire    ap_CS_fsm_state5;
wire   [63:0] zb_fu_742_p2;
reg   [63:0] zb_reg_1552;
wire   [9:0] add_ln1851_fu_759_p2;
reg   [9:0] add_ln1851_reg_1557;
wire   [30:0] add_ln1852_1_fu_788_p2;
reg   [30:0] add_ln1852_1_reg_1562;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln1795_fu_881_p2;
wire   [0:0] cc_fu_954_p3;
wire   [31:0] select_ln1787_fu_962_p3;
reg   [31:0] select_ln1787_reg_1592;
wire   [31:0] select_ln1787_1_fu_982_p3;
reg   [31:0] select_ln1787_1_reg_1597;
wire    ap_CS_fsm_state9;
reg   [12:0] vla18_addr_22_reg_1610;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln1811_fu_1022_p2;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln1795_1_fu_1146_p2;
wire   [0:0] cc_9_fu_1219_p3;
wire   [31:0] select_ln1787_2_fu_1227_p3;
reg   [31:0] select_ln1787_2_reg_1658;
wire   [31:0] select_ln1787_3_fu_1247_p3;
reg   [31:0] select_ln1787_3_reg_1663;
wire    ap_CS_fsm_state13;
reg   [12:0] vla18_addr_26_reg_1676;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln1811_1_fu_1287_p2;
wire    ap_CS_fsm_state15;
reg   [0:0] cc_7_reg_325;
wire    ap_CS_fsm_state7;
reg   [0:0] cc_8_reg_337;
reg   [0:0] cc_10_reg_347;
reg   [0:0] cc_11_reg_359;
wire   [63:0] zext_ln1838_fu_389_p1;
wire   [63:0] zext_ln1838_1_fu_404_p1;
wire   [63:0] zext_ln1844_3_fu_553_p1;
wire   [63:0] zext_ln1857_fu_584_p1;
wire   [63:0] zext_ln1845_fu_615_p1;
wire   [63:0] zext_ln1847_fu_644_p1;
wire   [63:0] zext_ln1851_3_fu_783_p1;
wire   [63:0] zext_ln1852_1_fu_816_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln1858_fu_873_p1;
wire   [63:0] zext_ln1796_2_fu_924_p1;
wire   [63:0] zext_ln1796_3_fu_944_p1;
wire   [63:0] zext_ln1814_2_fu_1065_p1;
wire   [63:0] zext_ln1815_fu_1085_p1;
wire   [63:0] zext_ln1796_6_fu_1189_p1;
wire   [63:0] zext_ln1796_7_fu_1209_p1;
wire   [63:0] zext_ln1814_5_fu_1330_p1;
wire   [63:0] zext_ln1815_1_fu_1350_p1;
reg   [7:0] u_01_fu_108;
reg   [32:0] cca_fu_112;
reg   [32:0] ccb_fu_116;
reg   [7:0] u_fu_120;
wire   [7:0] u_25_fu_887_p2;
reg   [7:0] u_14_fu_124;
wire   [7:0] u_28_fu_1028_p2;
reg   [7:0] u_16_fu_128;
wire   [7:0] u_30_fu_1152_p2;
reg   [7:0] u_18_fu_132;
wire   [7:0] u_32_fu_1293_p2;
wire   [31:0] trunc_ln1857_fu_564_p1;
wire   [31:0] zext_ln1851_fu_754_p1;
wire   [31:0] zext_ln1852_fu_797_p1;
wire   [31:0] trunc_ln1858_fu_853_p1;
wire   [31:0] zext_ln1817_fu_1130_p1;
wire   [31:0] zext_ln1817_1_fu_1390_p1;
wire  signed [8:0] trunc_ln1838_2_fu_375_p1;
wire   [6:0] trunc_ln1838_2_fu_375_p4;
wire  signed [7:0] sext_ln1838_fu_385_p1;
wire   [10:0] lshr_ln1838_1_fu_394_p4;
wire  signed [8:0] a_cast_cast_cast_fu_424_p0;
wire  signed [9:0] a_cast_cast_cast_fu_424_p1;
wire  signed [63:0] trunc_ln1838_fu_431_p0;
wire  signed [30:0] trunc_ln1838_1_fu_435_p1;
wire  signed [30:0] mul_ln1838_fu_439_p1;
wire  signed [63:0] trunc_ln1838_3_fu_445_p0;
wire  signed [30:0] trunc_ln1838_4_fu_449_p1;
wire  signed [30:0] mul_ln1838_1_fu_453_p1;
wire   [30:0] mul_ln1838_1_fu_453_p2;
wire   [30:0] mul_ln1838_fu_439_p2;
wire  signed [30:0] fa_fu_465_p0;
wire  signed [63:0] trunc_ln1839_fu_471_p0;
wire  signed [30:0] mul_ln1839_fu_475_p1;
wire  signed [63:0] trunc_ln1839_1_fu_481_p0;
wire  signed [30:0] mul_ln1839_1_fu_485_p1;
wire   [30:0] mul_ln1839_1_fu_485_p2;
wire   [30:0] mul_ln1839_fu_475_p2;
wire  signed [30:0] fb_fu_497_p0;
wire   [30:0] fa_fu_465_p2;
wire   [30:0] fb_fu_497_p2;
wire   [10:0] zext_ln1844_2_fu_534_p1;
wire   [10:0] add_ln1844_fu_538_p2;
wire   [8:0] lshr_ln2_fu_543_p4;
wire   [10:0] add_ln1857_fu_569_p2;
wire   [8:0] lshr_ln_fu_574_p4;
wire   [12:0] zext_ln1844_1_fu_597_p1;
wire   [12:0] add_ln1845_fu_600_p2;
wire   [10:0] lshr_ln3_fu_605_p4;
wire   [31:0] mul_ln1846_fu_624_p0;
wire   [63:0] zext_ln1846_fu_620_p1;
wire   [11:0] zext_ln1844_fu_594_p1;
wire   [11:0] add_ln1847_fu_629_p2;
wire   [9:0] lshr_ln4_fu_634_p4;
wire   [31:0] mul_ln1848_fu_649_p0;
wire   [31:0] mul_ln1846_1_fu_658_p0;
wire   [63:0] zext_ln1846_1_fu_654_p1;
wire   [31:0] mul_ln1847_fu_667_p0;
wire   [62:0] zext_ln1847_1_fu_663_p1;
wire   [30:0] mul_ln1847_fu_667_p1;
wire   [62:0] mul_ln1847_fu_667_p2;
wire  signed [32:0] sext_ln1840_fu_676_p0;
wire  signed [63:0] sext_ln1840_fu_676_p1;
wire   [63:0] mul_ln1846_1_fu_658_p2;
wire   [63:0] zext_ln1847_2_fu_672_p1;
wire   [63:0] add_ln1847_1_fu_680_p2;
wire   [63:0] add_ln1847_2_fu_686_p2;
wire   [31:0] mul_ln1848_1_fu_705_p0;
wire   [31:0] mul_ln1849_fu_710_p0;
wire   [30:0] mul_ln1849_fu_710_p1;
wire   [62:0] mul_ln1849_fu_710_p2;
wire  signed [32:0] sext_ln1840_1_fu_719_p0;
wire  signed [63:0] sext_ln1840_1_fu_719_p1;
wire   [63:0] mul_ln1848_1_fu_705_p2;
wire   [63:0] zext_ln1849_fu_715_p1;
wire   [63:0] add_ln1849_fu_723_p2;
wire   [63:0] add_ln1849_1_fu_729_p2;
wire   [30:0] trunc_ln1847_1_fu_695_p1;
wire   [30:0] trunc_ln1847_fu_691_p1;
wire   [30:0] add_ln1851_2_fu_748_p2;
wire   [10:0] zext_ln1851_2_fu_764_p1;
wire   [10:0] add_ln1851_1_fu_768_p2;
wire   [8:0] lshr_ln5_fu_773_p4;
wire   [30:0] trunc_ln1849_1_fu_738_p1;
wire   [30:0] trunc_ln1849_fu_734_p1;
wire   [12:0] zext_ln1851_1_fu_794_p1;
wire   [12:0] add_ln1852_fu_801_p2;
wire   [10:0] lshr_ln6_fu_806_p4;
wire   [12:0] add_ln1858_fu_858_p2;
wire   [10:0] lshr_ln1_fu_863_p4;
wire   [9:0] shl_ln12_fu_893_p3;
wire   [10:0] zext_ln1796_1_fu_905_p1;
wire   [10:0] add_ln1796_fu_909_p2;
wire   [8:0] lshr_ln7_fu_914_p4;
wire   [11:0] zext_ln1796_fu_901_p1;
wire   [11:0] add_ln1796_1_fu_929_p2;
wire   [9:0] lshr_ln1796_1_fu_934_p4;
wire   [0:0] xor_ln1809_fu_970_p2;
wire   [0:0] ym_fu_976_p2;
wire   [31:0] zext_ln1795_fu_995_p1;
wire   [31:0] sub_ln1796_fu_999_p2;
wire   [31:0] sub_ln1796_1_fu_1005_p2;
wire   [9:0] shl_ln13_fu_1034_p3;
wire   [10:0] zext_ln1814_1_fu_1046_p1;
wire   [10:0] add_ln1814_fu_1050_p2;
wire   [8:0] lshr_ln8_fu_1055_p4;
wire   [11:0] zext_ln1814_fu_1042_p1;
wire   [11:0] add_ln1815_fu_1070_p2;
wire   [9:0] lshr_ln9_fu_1075_p4;
wire   [31:0] xor_ln1815_fu_1100_p2;
wire   [31:0] mw_fu_1105_p2;
wire   [31:0] sub_ln1816_fu_1110_p2;
wire   [31:0] zext_ln1811_fu_1116_p1;
wire   [31:0] aw_2_fu_1120_p2;
wire   [30:0] trunc_ln1812_fu_1126_p1;
wire   [9:0] shl_ln1796_1_fu_1158_p3;
wire   [12:0] zext_ln1796_5_fu_1170_p1;
wire   [12:0] add_ln1796_2_fu_1174_p2;
wire   [10:0] lshr_ln1796_3_fu_1179_p4;
wire   [11:0] zext_ln1796_4_fu_1166_p1;
wire   [11:0] add_ln1796_3_fu_1194_p2;
wire   [9:0] lshr_ln1796_4_fu_1199_p4;
wire   [0:0] xor_ln1809_1_fu_1235_p2;
wire   [0:0] ym_1_fu_1241_p2;
wire   [31:0] zext_ln1795_1_fu_1260_p1;
wire   [31:0] sub_ln1796_2_fu_1264_p2;
wire   [31:0] sub_ln1796_3_fu_1270_p2;
wire   [9:0] shl_ln1814_1_fu_1299_p3;
wire   [12:0] zext_ln1814_4_fu_1311_p1;
wire   [12:0] add_ln1814_1_fu_1315_p2;
wire   [10:0] lshr_ln1814_1_fu_1320_p4;
wire   [11:0] zext_ln1814_3_fu_1307_p1;
wire   [11:0] add_ln1815_1_fu_1335_p2;
wire   [9:0] lshr_ln1815_1_fu_1340_p4;
wire   [31:0] xor_ln1815_1_fu_1360_p2;
wire   [31:0] mw_1_fu_1365_p2;
wire   [31:0] sub_ln1816_1_fu_1370_p2;
wire   [31:0] zext_ln1811_1_fu_1376_p1;
wire   [31:0] aw_4_fu_1380_p2;
wire   [30:0] trunc_ln1812_1_fu_1386_p1;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
end

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U321(
    .din0(trunc_ln1838_1_fu_435_p1),
    .din1(mul_ln1838_fu_439_p1),
    .dout(mul_ln1838_fu_439_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U322(
    .din0(trunc_ln1838_4_fu_449_p1),
    .din1(mul_ln1838_1_fu_453_p1),
    .dout(mul_ln1838_1_fu_453_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U323(
    .din0(fa_fu_465_p0),
    .din1(m0i),
    .dout(fa_fu_465_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U324(
    .din0(trunc_ln1838_1_fu_435_p1),
    .din1(mul_ln1839_fu_475_p1),
    .dout(mul_ln1839_fu_475_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U325(
    .din0(trunc_ln1838_4_fu_449_p1),
    .din1(mul_ln1839_1_fu_485_p1),
    .dout(mul_ln1839_1_fu_485_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U326(
    .din0(fb_fu_497_p0),
    .din1(m0i),
    .dout(fb_fu_497_p2)
);

keygen_mul_32ns_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_32ns_64s_64_1_1_U327(
    .din0(mul_ln1846_fu_624_p0),
    .din1(xa),
    .dout(mul_ln1846_fu_624_p2)
);

keygen_mul_32ns_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_32ns_64s_64_1_1_U328(
    .din0(mul_ln1848_fu_649_p0),
    .din1(ya),
    .dout(mul_ln1848_fu_649_p2)
);

keygen_mul_32ns_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_32ns_64s_64_1_1_U329(
    .din0(mul_ln1846_1_fu_658_p0),
    .din1(xb),
    .dout(mul_ln1846_1_fu_658_p2)
);

keygen_mul_32ns_31ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 63 ))
mul_32ns_31ns_63_1_1_U330(
    .din0(mul_ln1847_fu_667_p0),
    .din1(mul_ln1847_fu_667_p1),
    .dout(mul_ln1847_fu_667_p2)
);

keygen_mul_32ns_64s_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_32ns_64s_64_1_1_U331(
    .din0(mul_ln1848_1_fu_705_p0),
    .din1(yb),
    .dout(mul_ln1848_1_fu_705_p2)
);

keygen_mul_32ns_31ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 63 ))
mul_32ns_31ns_63_1_1_U332(
    .din0(mul_ln1849_fu_710_p0),
    .din1(mul_ln1849_fu_710_p1),
    .dout(mul_ln1849_fu_710_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1811_fu_1022_p2 == 1'd1))) begin
        cc_10_reg_347 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        cc_10_reg_347 <= sub_ln1796_3_fu_1270_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        cc_11_reg_359 <= aw_4_fu_1380_p2[32'd31];
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1795_1_fu_1146_p2 == 1'd1))) begin
        cc_11_reg_359 <= ccb_fu_116[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cc_7_reg_325 <= sub_ln1796_1_fu_1005_p2[32'd31];
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cc_7_reg_325 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        cc_8_reg_337 <= aw_2_fu_1120_p2[32'd31];
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1795_fu_881_p2 == 1'd1))) begin
        cc_8_reg_337 <= cca_fu_112[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cca_fu_112 <= 33'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cca_fu_112 <= {{za_reg_1547[63:31]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ccb_fu_116 <= 33'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ccb_fu_116 <= {{zb_reg_1552[63:31]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_01_fu_108 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        u_01_fu_108 <= u_26_reg_1499;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1795_fu_881_p2 == 1'd1))) begin
        u_14_fu_124 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1811_fu_1022_p2 == 1'd0))) begin
        u_14_fu_124 <= u_28_fu_1028_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1811_fu_1022_p2 == 1'd1))) begin
        u_16_fu_128 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1795_1_fu_1146_p2 == 1'd0))) begin
        u_16_fu_128 <= u_30_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1795_1_fu_1146_p2 == 1'd1))) begin
        u_18_fu_132 <= 8'd0;
    end else if (((icmp_ln1811_1_fu_1287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        u_18_fu_132 <= u_32_fu_1293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        u_fu_120 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1795_fu_881_p2 == 1'd0))) begin
        u_fu_120 <= u_25_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        a_cast_cast_cast_cast_reg_1477[9 : 0] <= a_cast_cast_cast_cast_fu_427_p1[9 : 0];
        fa_cast_reg_1486[30 : 0] <= fa_cast_fu_503_p1[30 : 0];
        zext_ln1840_reg_1491[30 : 0] <= zext_ln1840_fu_507_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln1850_reg_1516 == 1'd0))) begin
        add_ln1851_reg_1557[9 : 2] <= add_ln1851_fu_759_p2[9 : 2];
        add_ln1852_1_reg_1562 <= add_ln1852_1_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1840_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln1850_reg_1516 <= icmp_ln1850_fu_558_p2;
        shl_ln_reg_1504[9 : 2] <= shl_ln_fu_526_p3[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln1846_reg_1532 <= mul_ln1846_fu_624_p2;
        mul_ln1848_reg_1542 <= mul_ln1848_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1795_fu_881_p2 == 1'd1))) begin
        select_ln1787_1_reg_1597 <= select_ln1787_1_fu_982_p3;
        select_ln1787_reg_1592[30 : 0] <= select_ln1787_fu_962_p3[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1795_1_fu_1146_p2 == 1'd1))) begin
        select_ln1787_2_reg_1658[30 : 0] <= select_ln1787_2_fu_1227_p3[30 : 0];
        select_ln1787_3_reg_1663 <= select_ln1787_3_fu_1247_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        u_26_reg_1499 <= u_26_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1811_fu_1022_p2 == 1'd0))) begin
        vla18_addr_22_reg_1610[8 : 0] <= zext_ln1814_2_fu_1065_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1811_1_fu_1287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        vla18_addr_26_reg_1676[10 : 0] <= zext_ln1814_5_fu_1330_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        za_reg_1547 <= za_fu_699_p2;
        zb_reg_1552 <= zb_fu_742_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln1811_1_fu_1287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1811_1_fu_1287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        vla18_address0 = vla18_addr_26_reg_1676;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla18_address0 = zext_ln1815_1_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla18_address0 = zext_ln1796_7_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla18_address0 = zext_ln1814_2_fu_1065_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        vla18_address0 = zext_ln1796_2_fu_924_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vla18_address0 = zext_ln1858_fu_873_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        vla18_address0 = zext_ln1845_fu_615_p1;
    end else if (((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        vla18_address0 = zext_ln1857_fu_584_p1;
    end else if (((icmp_ln1840_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        vla18_address0 = zext_ln1844_3_fu_553_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla18_address0 = zext_ln1838_1_fu_404_p1;
    end else begin
        vla18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        vla18_address1 = zext_ln1814_5_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla18_address1 = zext_ln1796_6_fu_1189_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla18_address1 = vla18_addr_22_reg_1610;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        vla18_address1 = zext_ln1815_fu_1085_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        vla18_address1 = zext_ln1796_3_fu_944_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla18_address1 = zext_ln1852_1_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla18_address1 = zext_ln1851_3_fu_783_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        vla18_address1 = zext_ln1847_fu_644_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla18_address1 = zext_ln1838_fu_389_p1;
    end else begin
        vla18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | ((icmp_ln1840_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        vla18_ce0 = 1'b1;
    end else begin
        vla18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        vla18_ce1 = 1'b1;
    end else begin
        vla18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        vla18_d0 = zext_ln1817_1_fu_1390_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vla18_d0 = trunc_ln1858_fu_853_p1;
    end else if (((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        vla18_d0 = trunc_ln1857_fu_564_p1;
    end else begin
        vla18_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        vla18_d1 = zext_ln1817_fu_1130_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        vla18_d1 = zext_ln1852_fu_797_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vla18_d1 = zext_ln1851_fu_754_p1;
    end else begin
        vla18_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        vla18_we0 = 4'd15;
    end else begin
        vla18_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln1850_reg_1516 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln1850_reg_1516 == 1'd0)))) begin
        vla18_we1 = 4'd15;
    end else begin
        vla18_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln1840_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1795_fu_881_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1811_fu_1022_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1795_1_fu_1146_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln1811_1_fu_1287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_cast_cast_cast_cast_fu_427_p1 = $unsigned(a_cast_cast_cast_fu_424_p1);

assign a_cast_cast_cast_fu_424_p0 = a;

assign a_cast_cast_cast_fu_424_p1 = a_cast_cast_cast_fu_424_p0;

assign add_ln1796_1_fu_929_p2 = (zext_ln1796_fu_901_p1 + m);

assign add_ln1796_2_fu_1174_p2 = (zext_ln1796_5_fu_1170_p1 + b);

assign add_ln1796_3_fu_1194_p2 = (zext_ln1796_4_fu_1166_p1 + m);

assign add_ln1796_fu_909_p2 = (zext_ln1796_1_fu_905_p1 + a_cast_cast_cast_cast_reg_1477);

assign add_ln1814_1_fu_1315_p2 = (zext_ln1814_4_fu_1311_p1 + b);

assign add_ln1814_fu_1050_p2 = (zext_ln1814_1_fu_1046_p1 + a_cast_cast_cast_cast_reg_1477);

assign add_ln1815_1_fu_1335_p2 = (zext_ln1814_3_fu_1307_p1 + m);

assign add_ln1815_fu_1070_p2 = (zext_ln1814_fu_1042_p1 + m);

assign add_ln1844_fu_538_p2 = (zext_ln1844_2_fu_534_p1 + a_cast_cast_cast_cast_reg_1477);

assign add_ln1845_fu_600_p2 = (zext_ln1844_1_fu_597_p1 + b);

assign add_ln1847_1_fu_680_p2 = ($signed(sext_ln1840_fu_676_p1) + $signed(mul_ln1846_1_fu_658_p2));

assign add_ln1847_2_fu_686_p2 = (mul_ln1846_reg_1532 + zext_ln1847_2_fu_672_p1);

assign add_ln1847_fu_629_p2 = (zext_ln1844_fu_594_p1 + m);

assign add_ln1849_1_fu_729_p2 = (mul_ln1848_reg_1542 + zext_ln1849_fu_715_p1);

assign add_ln1849_fu_723_p2 = ($signed(sext_ln1840_1_fu_719_p1) + $signed(mul_ln1848_1_fu_705_p2));

assign add_ln1851_1_fu_768_p2 = (zext_ln1851_2_fu_764_p1 + a_cast_cast_cast_cast_reg_1477);

assign add_ln1851_2_fu_748_p2 = (trunc_ln1847_1_fu_695_p1 + trunc_ln1847_fu_691_p1);

assign add_ln1851_fu_759_p2 = ($signed(shl_ln_reg_1504) + $signed(10'd1020));

assign add_ln1852_1_fu_788_p2 = (trunc_ln1849_1_fu_738_p1 + trunc_ln1849_fu_734_p1);

assign add_ln1852_fu_801_p2 = (zext_ln1851_1_fu_794_p1 + b);

assign add_ln1857_fu_569_p2 = (a_cast_cast_cast_cast_reg_1477 + 11'd832);

assign add_ln1858_fu_858_p2 = (b + 13'd832);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign aw_2_fu_1120_p2 = (sub_ln1816_fu_1110_p2 - zext_ln1811_fu_1116_p1);

assign aw_4_fu_1380_p2 = (sub_ln1816_1_fu_1370_p2 - zext_ln1811_1_fu_1376_p1);

assign cc_9_fu_1219_p3 = ccb_fu_116[32'd32];

assign cc_fu_954_p3 = cca_fu_112[32'd32];

assign fa_cast_fu_503_p1 = fa_fu_465_p2;

assign fa_fu_465_p0 = (mul_ln1838_1_fu_453_p2 + mul_ln1838_fu_439_p2);

assign fb_fu_497_p0 = (mul_ln1839_1_fu_485_p2 + mul_ln1839_fu_475_p2);

assign icmp_ln1795_1_fu_1146_p2 = ((u_16_fu_128 == 8'd209) ? 1'b1 : 1'b0);

assign icmp_ln1795_fu_881_p2 = ((u_fu_120 == 8'd209) ? 1'b1 : 1'b0);

assign icmp_ln1811_1_fu_1287_p2 = ((u_18_fu_132 == 8'd209) ? 1'b1 : 1'b0);

assign icmp_ln1811_fu_1022_p2 = ((u_14_fu_124 == 8'd209) ? 1'b1 : 1'b0);

assign icmp_ln1840_fu_514_p2 = ((u_01_fu_108 == 8'd209) ? 1'b1 : 1'b0);

assign icmp_ln1850_fu_558_p2 = ((u_01_fu_108 == 8'd0) ? 1'b1 : 1'b0);

assign lshr_ln1796_1_fu_934_p4 = {{add_ln1796_1_fu_929_p2[11:2]}};

assign lshr_ln1796_3_fu_1179_p4 = {{add_ln1796_2_fu_1174_p2[12:2]}};

assign lshr_ln1796_4_fu_1199_p4 = {{add_ln1796_3_fu_1194_p2[11:2]}};

assign lshr_ln1814_1_fu_1320_p4 = {{add_ln1814_1_fu_1315_p2[12:2]}};

assign lshr_ln1815_1_fu_1340_p4 = {{add_ln1815_1_fu_1335_p2[11:2]}};

assign lshr_ln1838_1_fu_394_p4 = {{b[12:2]}};

assign lshr_ln1_fu_863_p4 = {{add_ln1858_fu_858_p2[12:2]}};

assign lshr_ln2_fu_543_p4 = {{add_ln1844_fu_538_p2[10:2]}};

assign lshr_ln3_fu_605_p4 = {{add_ln1845_fu_600_p2[12:2]}};

assign lshr_ln4_fu_634_p4 = {{add_ln1847_fu_629_p2[11:2]}};

assign lshr_ln5_fu_773_p4 = {{add_ln1851_1_fu_768_p2[10:2]}};

assign lshr_ln6_fu_806_p4 = {{add_ln1852_fu_801_p2[12:2]}};

assign lshr_ln7_fu_914_p4 = {{add_ln1796_fu_909_p2[10:2]}};

assign lshr_ln8_fu_1055_p4 = {{add_ln1814_fu_1050_p2[10:2]}};

assign lshr_ln9_fu_1075_p4 = {{add_ln1815_fu_1070_p2[11:2]}};

assign lshr_ln_fu_574_p4 = {{add_ln1857_fu_569_p2[10:2]}};

assign mul_ln1838_1_fu_453_p1 = trunc_ln1838_3_fu_445_p0[30:0];

assign mul_ln1838_fu_439_p1 = trunc_ln1838_fu_431_p0[30:0];

assign mul_ln1839_1_fu_485_p1 = trunc_ln1839_1_fu_481_p0[30:0];

assign mul_ln1839_fu_475_p1 = trunc_ln1839_fu_471_p0[30:0];

assign mul_ln1846_1_fu_658_p0 = zext_ln1846_1_fu_654_p1;

assign mul_ln1846_fu_624_p0 = zext_ln1846_fu_620_p1;

assign mul_ln1847_fu_667_p0 = zext_ln1847_1_fu_663_p1;

assign mul_ln1847_fu_667_p1 = fa_cast_reg_1486;

assign mul_ln1848_1_fu_705_p0 = zext_ln1846_1_fu_654_p1;

assign mul_ln1848_fu_649_p0 = zext_ln1846_fu_620_p1;

assign mul_ln1849_fu_710_p0 = zext_ln1847_1_fu_663_p1;

assign mul_ln1849_fu_710_p1 = zext_ln1840_reg_1491;

assign mw_1_fu_1365_p2 = (xor_ln1815_1_fu_1360_p2 & select_ln1787_3_reg_1663);

assign mw_fu_1105_p2 = (xor_ln1815_fu_1100_p2 & select_ln1787_1_reg_1597);

assign select_ln1787_1_fu_982_p3 = ((ym_fu_976_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln1787_2_fu_1227_p3 = ((cc_9_fu_1219_p3[0:0] == 1'b1) ? 32'd2147483647 : 32'd0);

assign select_ln1787_3_fu_1247_p3 = ((ym_1_fu_1241_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln1787_fu_962_p3 = ((cc_fu_954_p3[0:0] == 1'b1) ? 32'd2147483647 : 32'd0);

assign sext_ln1838_fu_385_p1 = $signed(trunc_ln1838_2_fu_375_p4);

assign sext_ln1840_1_fu_719_p0 = ccb_fu_116;

assign sext_ln1840_1_fu_719_p1 = sext_ln1840_1_fu_719_p0;

assign sext_ln1840_fu_676_p0 = cca_fu_112;

assign sext_ln1840_fu_676_p1 = sext_ln1840_fu_676_p0;

assign shl_ln12_fu_893_p3 = {{u_fu_120}, {2'd0}};

assign shl_ln13_fu_1034_p3 = {{u_14_fu_124}, {2'd0}};

assign shl_ln1796_1_fu_1158_p3 = {{u_16_fu_128}, {2'd0}};

assign shl_ln1814_1_fu_1299_p3 = {{u_18_fu_132}, {2'd0}};

assign shl_ln_fu_526_p3 = {{u_01_fu_108}, {2'd0}};

assign sub_ln1796_1_fu_1005_p2 = (sub_ln1796_fu_999_p2 - vla18_q1);

assign sub_ln1796_2_fu_1264_p2 = (vla18_q1 - zext_ln1795_1_fu_1260_p1);

assign sub_ln1796_3_fu_1270_p2 = (sub_ln1796_2_fu_1264_p2 - vla18_q0);

assign sub_ln1796_fu_999_p2 = (vla18_q0 - zext_ln1795_fu_995_p1);

assign sub_ln1816_1_fu_1370_p2 = (vla18_q1 - mw_1_fu_1365_p2);

assign sub_ln1816_fu_1110_p2 = (vla18_q0 - mw_fu_1105_p2);

assign trunc_ln1812_1_fu_1386_p1 = aw_4_fu_1380_p2[30:0];

assign trunc_ln1812_fu_1126_p1 = aw_2_fu_1120_p2[30:0];

assign trunc_ln1838_1_fu_435_p1 = vla18_q1[30:0];

assign trunc_ln1838_2_fu_375_p1 = a;

assign trunc_ln1838_2_fu_375_p4 = {{trunc_ln1838_2_fu_375_p1[8:2]}};

assign trunc_ln1838_3_fu_445_p0 = xb;

assign trunc_ln1838_4_fu_449_p1 = vla18_q0[30:0];

assign trunc_ln1838_fu_431_p0 = xa;

assign trunc_ln1839_1_fu_481_p0 = yb;

assign trunc_ln1839_fu_471_p0 = ya;

assign trunc_ln1847_1_fu_695_p1 = add_ln1847_2_fu_686_p2[30:0];

assign trunc_ln1847_fu_691_p1 = add_ln1847_1_fu_680_p2[30:0];

assign trunc_ln1849_1_fu_738_p1 = add_ln1849_1_fu_729_p2[30:0];

assign trunc_ln1849_fu_734_p1 = add_ln1849_fu_723_p2[30:0];

assign trunc_ln1857_fu_564_p1 = cca_fu_112[31:0];

assign trunc_ln1858_fu_853_p1 = ccb_fu_116[31:0];

assign u_25_fu_887_p2 = (u_fu_120 + 8'd1);

assign u_26_fu_520_p2 = (u_01_fu_108 + 8'd1);

assign u_28_fu_1028_p2 = (u_14_fu_124 + 8'd1);

assign u_30_fu_1152_p2 = (u_16_fu_128 + 8'd1);

assign u_32_fu_1293_p2 = (u_18_fu_132 + 8'd1);

assign xor_ln1809_1_fu_1235_p2 = (cc_10_reg_347 ^ 1'd1);

assign xor_ln1809_fu_970_p2 = (cc_7_reg_325 ^ 1'd1);

assign xor_ln1815_1_fu_1360_p2 = (vla18_q0 ^ select_ln1787_2_reg_1658);

assign xor_ln1815_fu_1100_p2 = (vla18_q1 ^ select_ln1787_reg_1592);

assign ym_1_fu_1241_p2 = (xor_ln1809_1_fu_1235_p2 | cc_9_fu_1219_p3);

assign ym_fu_976_p2 = (xor_ln1809_fu_970_p2 | cc_fu_954_p3);

assign za_fu_699_p2 = (add_ln1847_2_fu_686_p2 + add_ln1847_1_fu_680_p2);

assign zb_fu_742_p2 = (add_ln1849_1_fu_729_p2 + add_ln1849_fu_723_p2);

assign zext_ln1795_1_fu_1260_p1 = cc_10_reg_347;

assign zext_ln1795_fu_995_p1 = cc_7_reg_325;

assign zext_ln1796_1_fu_905_p1 = shl_ln12_fu_893_p3;

assign zext_ln1796_2_fu_924_p1 = lshr_ln7_fu_914_p4;

assign zext_ln1796_3_fu_944_p1 = lshr_ln1796_1_fu_934_p4;

assign zext_ln1796_4_fu_1166_p1 = shl_ln1796_1_fu_1158_p3;

assign zext_ln1796_5_fu_1170_p1 = shl_ln1796_1_fu_1158_p3;

assign zext_ln1796_6_fu_1189_p1 = lshr_ln1796_3_fu_1179_p4;

assign zext_ln1796_7_fu_1209_p1 = lshr_ln1796_4_fu_1199_p4;

assign zext_ln1796_fu_901_p1 = shl_ln12_fu_893_p3;

assign zext_ln1811_1_fu_1376_p1 = cc_11_reg_359;

assign zext_ln1811_fu_1116_p1 = cc_8_reg_337;

assign zext_ln1814_1_fu_1046_p1 = shl_ln13_fu_1034_p3;

assign zext_ln1814_2_fu_1065_p1 = lshr_ln8_fu_1055_p4;

assign zext_ln1814_3_fu_1307_p1 = shl_ln1814_1_fu_1299_p3;

assign zext_ln1814_4_fu_1311_p1 = shl_ln1814_1_fu_1299_p3;

assign zext_ln1814_5_fu_1330_p1 = lshr_ln1814_1_fu_1320_p4;

assign zext_ln1814_fu_1042_p1 = shl_ln13_fu_1034_p3;

assign zext_ln1815_1_fu_1350_p1 = lshr_ln1815_1_fu_1340_p4;

assign zext_ln1815_fu_1085_p1 = lshr_ln9_fu_1075_p4;

assign zext_ln1817_1_fu_1390_p1 = trunc_ln1812_1_fu_1386_p1;

assign zext_ln1817_fu_1130_p1 = trunc_ln1812_fu_1126_p1;

assign zext_ln1838_1_fu_404_p1 = lshr_ln1838_1_fu_394_p4;

assign zext_ln1838_fu_389_p1 = $unsigned(sext_ln1838_fu_385_p1);

assign zext_ln1840_fu_507_p1 = fb_fu_497_p2;

assign zext_ln1844_1_fu_597_p1 = shl_ln_reg_1504;

assign zext_ln1844_2_fu_534_p1 = shl_ln_fu_526_p3;

assign zext_ln1844_3_fu_553_p1 = lshr_ln2_fu_543_p4;

assign zext_ln1844_fu_594_p1 = shl_ln_reg_1504;

assign zext_ln1845_fu_615_p1 = lshr_ln3_fu_605_p4;

assign zext_ln1846_1_fu_654_p1 = vla18_q0;

assign zext_ln1846_fu_620_p1 = vla18_q0;

assign zext_ln1847_1_fu_663_p1 = vla18_q1;

assign zext_ln1847_2_fu_672_p1 = mul_ln1847_fu_667_p2;

assign zext_ln1847_fu_644_p1 = lshr_ln4_fu_634_p4;

assign zext_ln1849_fu_715_p1 = mul_ln1849_fu_710_p2;

assign zext_ln1851_1_fu_794_p1 = add_ln1851_reg_1557;

assign zext_ln1851_2_fu_764_p1 = add_ln1851_fu_759_p2;

assign zext_ln1851_3_fu_783_p1 = lshr_ln5_fu_773_p4;

assign zext_ln1851_fu_754_p1 = add_ln1851_2_fu_748_p2;

assign zext_ln1852_1_fu_816_p1 = lshr_ln6_fu_806_p4;

assign zext_ln1852_fu_797_p1 = add_ln1852_1_reg_1562;

assign zext_ln1857_fu_584_p1 = lshr_ln_fu_574_p4;

assign zext_ln1858_fu_873_p1 = lshr_ln1_fu_863_p4;

always @ (posedge ap_clk) begin
    a_cast_cast_cast_cast_reg_1477[10] <= 1'b0;
    fa_cast_reg_1486[62:31] <= 32'b00000000000000000000000000000000;
    zext_ln1840_reg_1491[62:31] <= 32'b00000000000000000000000000000000;
    shl_ln_reg_1504[1:0] <= 2'b00;
    add_ln1851_reg_1557[1:0] <= 2'b00;
    select_ln1787_reg_1592[31] <= 1'b0;
    vla18_addr_22_reg_1610[12:9] <= 4'b0000;
    select_ln1787_2_reg_1658[31] <= 1'b0;
    vla18_addr_26_reg_1676[12:11] <= 2'b00;
end

endmodule //keygen_zint_co_reduce_mod_1
