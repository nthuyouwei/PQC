// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keygen_zint_rebuild_CRT_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vla18_address0,
        vla18_ce0,
        vla18_we0,
        vla18_d0,
        vla18_q0,
        vla18_address1,
        vla18_ce1,
        vla18_we1,
        vla18_d1,
        vla18_q1,
        xx,
        xlen,
        xstride,
        num,
        normalize_signed,
        tmp
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] vla18_address0;
output   vla18_ce0;
output  [3:0] vla18_we0;
output  [31:0] vla18_d0;
input  [31:0] vla18_q0;
output  [12:0] vla18_address1;
output   vla18_ce1;
output  [3:0] vla18_we1;
output  [31:0] vla18_d1;
input  [31:0] vla18_q1;
input  [14:0] xx;
input  [8:0] xlen;
input  [8:0] xstride;
input  [63:0] num;
input  [0:0] normalize_signed;
input  [14:0] tmp;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] vla18_address0;
reg vla18_ce0;
reg[3:0] vla18_we0;
reg[31:0] vla18_d0;
reg[12:0] vla18_address1;
reg vla18_ce1;
reg[3:0] vla18_we1;
reg[31:0] vla18_d1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] PRIMES_p_address0;
reg    PRIMES_p_ce0;
wire   [24:0] PRIMES_p_q0;
wire   [9:0] PRIMES_s_address0;
reg    PRIMES_s_ce0;
wire   [30:0] PRIMES_s_q0;
wire   [31:0] grp_modp_montymul_fu_442_ap_return;
reg   [31:0] reg_464;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state9;
wire   [0:0] normalize_signed_read_read_fu_146_p2;
wire   [63:0] xstride_cast_fu_470_p1;
reg   [63:0] xstride_cast_reg_1641;
wire   [9:0] xlen_cast_fu_474_p1;
reg   [9:0] xlen_cast_reg_1647;
wire   [63:0] zext_ln1646_fu_501_p1;
reg   [63:0] zext_ln1646_reg_1655;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1646_fu_506_p2;
reg  signed [24:0] p_reg_1683;
wire    ap_CS_fsm_state3;
wire   [23:0] trunc_ln1657_fu_521_p1;
reg   [23:0] trunc_ln1657_reg_1692;
wire  signed [30:0] sext_ln1657_fu_525_p1;
reg  signed [30:0] sext_ln1657_reg_1697;
wire  signed [30:0] y_2_fu_569_p2;
reg  signed [30:0] y_2_reg_1705;
wire   [31:0] zext_ln1657_fu_575_p1;
reg   [31:0] zext_ln1657_reg_1711;
wire   [31:0] zext_ln1657_2_fu_617_p1;
reg   [31:0] zext_ln1657_2_reg_1719;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_modp_montymul_fu_450_ap_return;
reg   [31:0] z_3_reg_1730;
wire   [31:0] zext_ln1657_1_fu_682_p1;
reg   [31:0] zext_ln1657_1_reg_1736;
wire    ap_CS_fsm_state6;
wire   [31:0] zext_ln757_1_fu_727_p1;
reg   [31:0] zext_ln757_1_reg_1741;
wire   [12:0] zext_ln1665_fu_731_p1;
reg   [12:0] zext_ln1665_reg_1746;
wire   [63:0] v_1_fu_739_p2;
reg   [63:0] v_1_reg_1754;
wire    ap_CS_fsm_state7;
wire   [12:0] trunc_ln1673_fu_745_p1;
reg   [12:0] trunc_ln1673_reg_1759;
wire   [0:0] icmp_ln1665_fu_734_p2;
reg   [12:0] vla18_addr_1_reg_1765;
wire   [62:0] zext_ln1487_fu_782_p1;
reg   [62:0] zext_ln1487_reg_1770;
reg   [31:0] xp_reg_1775;
wire    ap_CS_fsm_state8;
wire   [12:0] add_ln1524_fu_785_p2;
reg   [12:0] add_ln1524_reg_1780;
wire   [63:0] u_13_fu_794_p2;
reg   [63:0] u_13_reg_1785;
wire   [0:0] icmp_ln1520_fu_833_p2;
reg   [0:0] icmp_ln1520_reg_1795;
wire   [31:0] x_3_fu_919_p2;
wire    ap_CS_fsm_state10;
wire   [62:0] zext_ln1560_fu_966_p1;
reg   [62:0] zext_ln1560_reg_1804;
wire   [8:0] u_18_fu_975_p2;
reg   [8:0] u_18_reg_1812;
wire    ap_CS_fsm_state11;
reg   [12:0] vla18_addr_7_reg_1817;
wire   [0:0] icmp_ln1560_fu_970_p2;
wire   [63:0] add_ln1665_1_fu_1050_p2;
wire    ap_CS_fsm_state12;
wire   [8:0] u_16_fu_1112_p2;
reg   [8:0] u_16_reg_1841;
wire    ap_CS_fsm_state13;
reg   [12:0] vla18_addr_4_reg_1846;
wire   [0:0] icmp_ln1487_fu_1107_p2;
wire    ap_CS_fsm_state14;
wire   [63:0] u_19_fu_1237_p2;
reg   [63:0] u_19_reg_1860;
wire    ap_CS_fsm_state15;
wire   [12:0] trunc_ln1598_fu_1243_p1;
reg   [12:0] trunc_ln1598_reg_1865;
wire   [0:0] icmp_ln1693_fu_1232_p2;
wire   [12:0] add_ln1598_fu_1247_p2;
reg   [12:0] add_ln1598_reg_1870;
wire   [9:0] u_fu_1257_p2;
reg   [9:0] u_reg_1875;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln1591_fu_1328_p2;
reg   [0:0] icmp_ln1591_reg_1890;
wire   [0:0] bb_1_fu_1338_p1;
wire    ap_CS_fsm_state17;
wire   [31:0] r_1_fu_1434_p2;
wire   [31:0] select_ln1464_fu_1448_p3;
reg   [31:0] select_ln1464_reg_1904;
wire   [8:0] u_21_fu_1461_p2;
reg   [8:0] u_21_reg_1912;
wire    ap_CS_fsm_state18;
reg   [12:0] vla18_addr_9_reg_1917;
wire   [0:0] icmp_ln1465_fu_1456_p2;
wire    ap_CS_fsm_state19;
wire    grp_modp_montymul_fu_442_ap_ready;
reg   [31:0] grp_modp_montymul_fu_442_a;
reg   [31:0] grp_modp_montymul_fu_442_b;
reg   [31:0] grp_modp_montymul_fu_442_p;
reg   [31:0] grp_modp_montymul_fu_442_p0i;
wire    grp_modp_montymul_fu_450_ap_ready;
reg   [63:0] v_reg_297;
reg   [63:0] idx_reg_308;
reg   [63:0] dec4_i_in_reg_320;
reg   [31:0] x_reg_329;
reg   [31:0] cc_4_reg_340;
reg   [8:0] u_17_reg_353;
reg   [31:0] cc_reg_364;
reg   [8:0] u_4_reg_377;
reg  signed [9:0] phi_ln1580_reg_388;
reg   [0:0] bb_reg_397;
reg   [31:0] r_reg_408;
reg   [0:0] cc_6_reg_419;
reg   [8:0] u_20_reg_431;
wire   [31:0] z_fu_674_p2;
wire   [31:0] add_ln697_fu_959_p2;
wire   [63:0] zext_ln1645_fu_488_p1;
wire   [63:0] zext_ln1673_fu_777_p1;
wire   [63:0] zext_ln1524_fu_828_p1;
wire   [63:0] zext_ln1564_1_fu_1013_p1;
wire   [63:0] zext_ln1565_1_fu_1045_p1;
wire   [63:0] zext_ln1490_1_fu_1145_p1;
wire   [63:0] zext_ln1686_1_fu_1176_p1;
wire   [63:0] zext_ln1598_fu_1291_p1;
wire   [63:0] zext_ln1599_fu_1323_p1;
wire   [63:0] zext_ln1468_1_fu_1499_p1;
wire   [63:0] zext_ln1469_1_fu_1531_p1;
reg   [8:0] u_1_fu_128;
wire   [8:0] u_15_fu_1181_p2;
reg   [63:0] idx71_fu_132;
wire   [63:0] add_ln1693_1_fu_1536_p2;
reg   [63:0] u_2_fu_136;
wire   [31:0] zext_ln1567_fu_1092_p1;
wire   [31:0] zext_ln1491_fu_1214_p1;
wire   [31:0] aw_1_fu_1593_p2;
wire   [12:0] lshr_ln_fu_478_p4;
wire  signed [24:0] trunc_ln1657_fu_521_p0;
wire  signed [24:0] sext_ln1657_fu_525_p0;
wire   [23:0] y_fu_529_p2;
wire  signed [24:0] mul_ln656_fu_539_p0;
wire   [23:0] mul_ln656_fu_539_p1;
wire   [30:0] zext_ln656_fu_535_p1;
wire   [30:0] mul_ln656_fu_539_p2;
wire  signed [30:0] y_1_fu_551_p0;
wire   [23:0] y_1_fu_551_p1;
wire  signed [24:0] mul_ln657_fu_557_p0;
wire  signed [30:0] y_1_fu_551_p2;
wire   [30:0] mul_ln657_fu_557_p2;
wire  signed [30:0] y_2_fu_569_p0;
wire  signed [24:0] mul_ln658_fu_579_p0;
wire   [30:0] mul_ln658_fu_579_p2;
wire  signed [30:0] y_3_fu_589_p0;
wire  signed [24:0] mul_ln659_fu_594_p0;
wire  signed [30:0] y_3_fu_589_p2;
wire   [30:0] mul_ln659_fu_594_p2;
wire  signed [30:0] p0i_fu_611_p0;
wire  signed [30:0] p0i_fu_611_p1;
wire   [30:0] p0i_fu_611_p2;
wire   [23:0] sub_ln685_1_fu_622_p2;
wire   [24:0] shl_ln_fu_627_p3;
wire   [31:0] zext_ln685_fu_635_p1;
wire   [31:0] sub_ln685_fu_639_p2;
wire   [0:0] tmp_1_fu_645_p3;
wire   [24:0] select_ln685_fu_653_p3;
wire   [24:0] and_ln685_fu_661_p2;
wire  signed [30:0] sext_ln685_fu_666_p1;
wire   [31:0] zext_ln685_1_fu_670_p1;
wire   [0:0] trunc_ln735_fu_686_p1;
wire   [24:0] select_ln757_fu_690_p3;
wire   [24:0] and_ln757_fu_698_p2;
wire  signed [30:0] sext_ln757_fu_703_p1;
wire   [31:0] zext_ln757_fu_707_p1;
wire   [31:0] add_ln757_fu_711_p2;
wire   [30:0] z_9_fu_717_p4;
wire   [12:0] add_ln1673_fu_749_p2;
wire   [14:0] shl_ln1_fu_754_p3;
wire   [14:0] add_ln1673_1_fu_762_p2;
wire   [12:0] lshr_ln1_fu_767_p4;
wire   [12:0] trunc_ln1510_fu_790_p1;
wire   [12:0] add_ln1524_2_fu_800_p2;
wire   [14:0] shl_ln2_fu_805_p3;
wire   [14:0] add_ln1524_1_fu_813_p2;
wire   [12:0] lshr_ln2_fu_818_p4;
wire   [31:0] w_fu_839_p2;
wire   [0:0] tmp_2_fu_844_p3;
wire   [24:0] select_ln1525_fu_852_p3;
wire   [24:0] and_ln1525_fu_860_p2;
wire  signed [30:0] sext_ln1521_fu_865_p1;
wire   [31:0] zext_ln1521_fu_869_p1;
wire   [31:0] add_ln685_fu_878_p2;
wire   [31:0] w_3_fu_873_p2;
wire   [31:0] add_ln685_1_fu_884_p2;
wire   [0:0] tmp_3_fu_890_p3;
wire   [24:0] select_ln685_1_fu_898_p3;
wire   [24:0] and_ln685_1_fu_906_p2;
wire  signed [30:0] sext_ln685_1_fu_911_p1;
wire   [31:0] zext_ln685_2_fu_915_p1;
wire   [31:0] sub_ln697_fu_925_p2;
wire   [0:0] tmp_4_fu_930_p3;
wire   [24:0] select_ln697_fu_938_p3;
wire   [24:0] and_ln697_fu_946_p2;
wire  signed [30:0] sext_ln697_fu_951_p1;
wire   [31:0] zext_ln697_fu_955_p1;
wire   [12:0] zext_ln1564_fu_981_p1;
wire   [12:0] add_ln1564_fu_985_p2;
wire   [14:0] shl_ln7_fu_990_p3;
wire   [14:0] add_ln1564_1_fu_998_p2;
wire   [12:0] lshr_ln6_fu_1003_p4;
wire   [10:0] shl_ln8_fu_1018_p3;
wire   [14:0] zext_ln1565_fu_1026_p1;
wire   [14:0] add_ln1565_fu_1030_p2;
wire   [12:0] lshr_ln7_fu_1035_p4;
wire   [31:0] mul_ln1566_fu_1059_p0;
wire   [31:0] mul_ln1566_fu_1059_p1;
wire   [32:0] zext_ln1566_1_fu_1064_p1;
wire   [32:0] zext_ln1566_2_fu_1068_p1;
wire   [32:0] add_ln1566_fu_1072_p2;
wire   [62:0] zext_ln1566_3_fu_1078_p1;
wire   [62:0] mul_ln1566_fu_1059_p2;
wire   [62:0] z_8_fu_1082_p2;
wire   [30:0] trunc_ln1567_fu_1088_p1;
wire   [10:0] shl_ln4_fu_1118_p3;
wire   [14:0] zext_ln1490_fu_1126_p1;
wire   [14:0] add_ln1490_fu_1130_p2;
wire   [12:0] lshr_ln4_fu_1135_p4;
wire   [10:0] shl_ln3_fu_1150_p3;
wire   [14:0] zext_ln1686_fu_1157_p1;
wire   [14:0] add_ln1686_fu_1161_p2;
wire   [12:0] lshr_ln3_fu_1166_p4;
wire   [31:0] mul_ln1490_fu_1195_p0;
wire   [30:0] mul_ln1490_fu_1195_p1;
wire   [62:0] mul_ln1490_fu_1195_p2;
wire   [62:0] zext_ln1490_3_fu_1200_p1;
wire   [62:0] z_7_fu_1204_p2;
wire   [30:0] trunc_ln1491_fu_1210_p1;
wire  signed [12:0] sext_ln1580_fu_1253_p1;
wire   [12:0] add_ln1598_2_fu_1263_p2;
wire   [14:0] shl_ln5_fu_1268_p3;
wire   [14:0] add_ln1598_1_fu_1276_p2;
wire   [12:0] lshr_ln5_fu_1281_p4;
wire   [11:0] shl_ln1599_1_fu_1296_p3;
wire  signed [14:0] sext_ln1599_fu_1304_p1;
wire   [14:0] add_ln1599_fu_1308_p2;
wire   [12:0] lshr_ln1599_1_fu_1313_p4;
wire   [30:0] trunc_ln1599_1_fu_1342_p4;
wire   [30:0] shl_ln6_fu_1352_p3;
wire   [30:0] wp_fu_1360_p2;
wire   [31:0] zext_ln1592_fu_1366_p1;
wire   [31:0] cc_2_fu_1370_p2;
wire   [31:0] sub_ln1607_fu_1376_p2;
wire   [0:0] tmp_5_fu_1382_p3;
wire   [0:0] tmp_6_fu_1394_p3;
wire   [1:0] zext_ln1607_fu_1390_p1;
wire   [0:0] trunc_ln1580_fu_1334_p1;
wire   [0:0] xor_ln1613_fu_1410_p2;
wire   [1:0] cc_3_fu_1402_p3;
wire   [1:0] select_ln1613_fu_1416_p3;
wire   [1:0] and_ln1613_fu_1424_p2;
wire  signed [31:0] sext_ln1613_fu_1430_p1;
wire   [0:0] m_fu_1440_p3;
wire   [12:0] zext_ln1468_fu_1467_p1;
wire   [12:0] add_ln1468_fu_1471_p2;
wire   [14:0] shl_ln9_fu_1476_p3;
wire   [14:0] add_ln1468_1_fu_1484_p2;
wire   [12:0] lshr_ln8_fu_1489_p4;
wire   [10:0] shl_ln10_fu_1504_p3;
wire   [14:0] zext_ln1469_fu_1512_p1;
wire   [14:0] add_ln1469_fu_1516_p2;
wire   [12:0] lshr_ln9_fu_1521_p4;
wire   [31:0] sub_ln1469_fu_1550_p2;
wire   [31:0] zext_ln1465_fu_1556_p1;
wire   [31:0] w_2_fu_1560_p2;
wire   [30:0] trunc_ln1466_fu_1566_p1;
wire   [31:0] zext_ln1471_fu_1578_p1;
wire   [31:0] xor_ln1471_fu_1582_p2;
wire   [31:0] and_ln1471_fu_1588_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire   [62:0] mul_ln1490_fu_1195_p00;
wire   [62:0] mul_ln1566_fu_1059_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

keygen_zint_rebuild_CRT_1_PRIMES_p_ROM_AUTO_1R #(
    .DataWidth( 25 ),
    .AddressRange( 522 ),
    .AddressWidth( 10 ))
PRIMES_p_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PRIMES_p_address0),
    .ce0(PRIMES_p_ce0),
    .q0(PRIMES_p_q0)
);

keygen_zint_rebuild_CRT_1_PRIMES_s_ROM_AUTO_1R #(
    .DataWidth( 31 ),
    .AddressRange( 522 ),
    .AddressWidth( 10 ))
PRIMES_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PRIMES_s_address0),
    .ce0(PRIMES_s_ce0),
    .q0(PRIMES_s_q0)
);

keygen_modp_montymul grp_modp_montymul_fu_442(
    .ap_ready(grp_modp_montymul_fu_442_ap_ready),
    .a(grp_modp_montymul_fu_442_a),
    .b(grp_modp_montymul_fu_442_b),
    .p(grp_modp_montymul_fu_442_p),
    .p0i(grp_modp_montymul_fu_442_p0i),
    .ap_return(grp_modp_montymul_fu_442_ap_return)
);

keygen_modp_montymul grp_modp_montymul_fu_450(
    .ap_ready(grp_modp_montymul_fu_450_ap_ready),
    .a(grp_modp_montymul_fu_442_ap_return),
    .b(grp_modp_montymul_fu_442_ap_return),
    .p(zext_ln1657_reg_1711),
    .p0i(zext_ln1657_2_reg_1719),
    .ap_return(grp_modp_montymul_fu_450_ap_return)
);

keygen_mul_25s_24ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 31 ))
mul_25s_24ns_31_1_1_U248(
    .din0(mul_ln656_fu_539_p0),
    .din1(mul_ln656_fu_539_p1),
    .dout(mul_ln656_fu_539_p2)
);

keygen_mul_31s_24ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 31 ))
mul_31s_24ns_31_1_1_U249(
    .din0(y_1_fu_551_p0),
    .din1(y_1_fu_551_p1),
    .dout(y_1_fu_551_p2)
);

keygen_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U250(
    .din0(mul_ln657_fu_557_p0),
    .din1(y_1_fu_551_p2),
    .dout(mul_ln657_fu_557_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U251(
    .din0(y_2_fu_569_p0),
    .din1(y_1_fu_551_p2),
    .dout(y_2_fu_569_p2)
);

keygen_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U252(
    .din0(mul_ln658_fu_579_p0),
    .din1(y_2_reg_1705),
    .dout(mul_ln658_fu_579_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U253(
    .din0(y_3_fu_589_p0),
    .din1(y_2_reg_1705),
    .dout(y_3_fu_589_p2)
);

keygen_mul_25s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_25s_31s_31_1_1_U254(
    .din0(mul_ln659_fu_594_p0),
    .din1(y_3_fu_589_p2),
    .dout(mul_ln659_fu_594_p2)
);

keygen_mul_31s_31s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
mul_31s_31s_31_1_1_U255(
    .din0(p0i_fu_611_p0),
    .din1(p0i_fu_611_p1),
    .dout(p0i_fu_611_p2)
);

keygen_mul_32ns_32ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 63 ))
mul_32ns_32ns_63_1_1_U256(
    .din0(mul_ln1566_fu_1059_p0),
    .din1(mul_ln1566_fu_1059_p1),
    .dout(mul_ln1566_fu_1059_p2)
);

keygen_mul_32ns_31ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 63 ))
mul_32ns_31ns_63_1_1_U257(
    .din0(mul_ln1490_fu_1195_p0),
    .din1(mul_ln1490_fu_1195_p1),
    .dout(mul_ln1490_fu_1195_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (icmp_ln1693_fu_1232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        bb_reg_397 <= 1'd0;
    end else if (((icmp_ln1591_reg_1890 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        bb_reg_397 <= bb_1_fu_1338_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        cc_4_reg_340 <= {{z_8_fu_1082_p2[62:31]}};
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
        cc_4_reg_340 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        cc_6_reg_419 <= w_2_fu_1560_p2[32'd31];
    end else if (((icmp_ln1591_reg_1890 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        cc_6_reg_419 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cc_reg_364 <= {{z_7_fu_1204_p2[62:31]}};
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1665_fu_734_p2 == 1'd1))) begin
        cc_reg_364 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd0))) begin
        dec4_i_in_reg_320 <= u_13_reg_1785;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dec4_i_in_reg_320 <= zext_ln1646_reg_1655;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln1646_fu_506_p2 == 1'd0))) begin
        idx71_fu_132 <= 64'd0;
    end else if (((icmp_ln1465_fu_1456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        idx71_fu_132 <= add_ln1693_1_fu_1536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        idx_reg_308 <= add_ln1665_1_fu_1050_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        idx_reg_308 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (icmp_ln1693_fu_1232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        phi_ln1580_reg_388 <= xlen_cast_reg_1647;
    end else if (((icmp_ln1591_reg_1890 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_ln1580_reg_388 <= u_reg_1875;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (icmp_ln1693_fu_1232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        r_reg_408 <= 32'd0;
    end else if (((icmp_ln1591_reg_1890 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        r_reg_408 <= r_1_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        u_17_reg_353 <= u_18_reg_1812;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
        u_17_reg_353 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        u_1_fu_128 <= 9'd1;
    end else if (((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        u_1_fu_128 <= u_15_fu_1181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        u_20_reg_431 <= u_21_reg_1912;
    end else if (((icmp_ln1591_reg_1890 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        u_20_reg_431 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln1646_fu_506_p2 == 1'd0))) begin
        u_2_fu_136 <= 64'd0;
    end else if (((icmp_ln1465_fu_1456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        u_2_fu_136 <= u_19_reg_1860;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        u_4_reg_377 <= u_16_reg_1841;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1665_fu_734_p2 == 1'd1))) begin
        u_4_reg_377 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        v_reg_297 <= v_1_reg_1754;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v_reg_297 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd0))) begin
        x_reg_329 <= x_3_fu_919_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_reg_329 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln1524_reg_1780 <= add_ln1524_fu_785_p2;
        xp_reg_1775 <= vla18_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (icmp_ln1693_fu_1232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln1598_reg_1870 <= add_ln1598_fu_1247_p2;
        trunc_ln1598_reg_1865 <= trunc_ln1598_fu_1243_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln1520_reg_1795 <= icmp_ln1520_fu_833_p2;
        u_13_reg_1785 <= u_13_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        icmp_ln1591_reg_1890 <= icmp_ln1591_fu_1328_p2;
        u_reg_1875 <= u_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_reg_1683 <= PRIMES_p_q0;
        sext_ln1657_reg_1697 <= sext_ln1657_fu_525_p1;
        trunc_ln1657_reg_1692 <= trunc_ln1657_fu_521_p1;
        y_2_reg_1705 <= y_2_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_464 <= grp_modp_montymul_fu_442_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1591_reg_1890 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        select_ln1464_reg_1904 <= select_ln1464_fu_1448_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1665_fu_734_p2 == 1'd0))) begin
        trunc_ln1673_reg_1759 <= trunc_ln1673_fu_745_p1;
        vla18_addr_1_reg_1765 <= zext_ln1673_fu_777_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        u_16_reg_1841 <= u_16_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        u_18_reg_1812 <= u_18_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((normalize_signed_read_read_fu_146_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        u_19_reg_1860 <= u_19_fu_1237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        u_21_reg_1912 <= u_21_fu_1461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v_1_reg_1754 <= v_1_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1487_fu_1107_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        vla18_addr_4_reg_1846 <= zext_ln1490_1_fu_1145_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1560_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        vla18_addr_7_reg_1817 <= zext_ln1564_1_fu_1013_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1465_fu_1456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        vla18_addr_9_reg_1917 <= zext_ln1468_1_fu_1499_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        xlen_cast_reg_1647[8 : 0] <= xlen_cast_fu_474_p1[8 : 0];
        xstride_cast_reg_1641[8 : 0] <= xstride_cast_fu_470_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_3_reg_1730 <= grp_modp_montymul_fu_450_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1665_fu_734_p2 == 1'd1))) begin
        zext_ln1487_reg_1770[30 : 0] <= zext_ln1487_fu_782_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
        zext_ln1560_reg_1804[31 : 0] <= zext_ln1560_fu_966_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln1646_reg_1655[8 : 0] <= zext_ln1646_fu_501_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        zext_ln1657_1_reg_1736[30 : 0] <= zext_ln1657_1_fu_682_p1[30 : 0];
        zext_ln1665_reg_1746[8 : 0] <= zext_ln1665_fu_731_p1[8 : 0];
        zext_ln757_1_reg_1741[30 : 0] <= zext_ln757_1_fu_727_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln1657_2_reg_1719[30 : 0] <= zext_ln1657_2_fu_617_p1[30 : 0];
        zext_ln1657_reg_1711[30 : 0] <= zext_ln1657_fu_575_p1[30 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        PRIMES_p_ce0 = 1'b1;
    end else begin
        PRIMES_p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        PRIMES_s_ce0 = 1'b1;
    end else begin
        PRIMES_s_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state15) & ((normalize_signed_read_read_fu_146_p2 == 1'd0) | (icmp_ln1693_fu_1232_p2 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((normalize_signed_read_read_fu_146_p2 == 1'd0) | (icmp_ln1693_fu_1232_p2 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
        grp_modp_montymul_fu_442_a = zext_ln1657_1_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_modp_montymul_fu_442_a = x_reg_329;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_modp_montymul_fu_442_a = z_3_reg_1730;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_a = reg_464;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_modp_montymul_fu_442_a = z_fu_674_p2;
    end else begin
        grp_modp_montymul_fu_442_a = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
        grp_modp_montymul_fu_442_b = add_ln697_fu_959_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_modp_montymul_fu_442_b = zext_ln757_1_reg_1741;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_modp_montymul_fu_442_b = z_3_reg_1730;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_modp_montymul_fu_442_b = reg_464;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_modp_montymul_fu_442_b = z_fu_674_p2;
    end else begin
        grp_modp_montymul_fu_442_b = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1)))) begin
        grp_modp_montymul_fu_442_p = zext_ln1657_reg_1711;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_modp_montymul_fu_442_p = zext_ln1657_fu_575_p1;
    end else begin
        grp_modp_montymul_fu_442_p = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1)))) begin
        grp_modp_montymul_fu_442_p0i = zext_ln1657_2_reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_modp_montymul_fu_442_p0i = zext_ln1657_2_fu_617_p1;
    end else begin
        grp_modp_montymul_fu_442_p0i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla18_address0 = vla18_addr_9_reg_1917;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        vla18_address0 = zext_ln1469_1_fu_1531_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla18_address0 = zext_ln1599_fu_1323_p1;
    end else if (((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        vla18_address0 = vla18_addr_1_reg_1765;
    end else if (((icmp_ln1560_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        vla18_address0 = zext_ln1565_1_fu_1045_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vla18_address0 = zext_ln1524_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        vla18_address0 = zext_ln1673_fu_777_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla18_address0 = zext_ln1645_fu_488_p1;
    end else begin
        vla18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        vla18_address1 = zext_ln1468_1_fu_1499_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        vla18_address1 = zext_ln1598_fu_1291_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        vla18_address1 = vla18_addr_4_reg_1846;
    end else if (((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vla18_address1 = zext_ln1686_1_fu_1176_p1;
    end else if (((icmp_ln1487_fu_1107_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        vla18_address1 = zext_ln1490_1_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla18_address1 = vla18_addr_7_reg_1817;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vla18_address1 = zext_ln1564_1_fu_1013_p1;
    end else begin
        vla18_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln1560_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        vla18_ce0 = 1'b1;
    end else begin
        vla18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln1487_fu_1107_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        vla18_ce1 = 1'b1;
    end else begin
        vla18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        vla18_d0 = aw_1_fu_1593_p2;
    end else if (((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        vla18_d0 = cc_4_reg_340;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        vla18_d0 = 32'd2147473409;
    end else begin
        vla18_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        vla18_d1 = zext_ln1491_fu_1214_p1;
    end else if (((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vla18_d1 = cc_reg_364;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vla18_d1 = zext_ln1567_fu_1092_p1;
    end else begin
        vla18_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        vla18_we0 = 4'd15;
    end else begin
        vla18_we0 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        vla18_we1 = 4'd15;
    end else begin
        vla18_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1646_fu_506_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1665_fu_734_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1520_reg_1795 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln1560_fu_970_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln1487_fu_1107_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((normalize_signed_read_read_fu_146_p2 == 1'd0) | (icmp_ln1693_fu_1232_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln1591_reg_1890 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln1465_fu_1456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PRIMES_p_address0 = zext_ln1646_fu_501_p1;

assign PRIMES_s_address0 = zext_ln1646_reg_1655;

assign add_ln1468_1_fu_1484_p2 = (shl_ln9_fu_1476_p3 + xx);

assign add_ln1468_fu_1471_p2 = (zext_ln1468_fu_1467_p1 + trunc_ln1598_reg_1865);

assign add_ln1469_fu_1516_p2 = (zext_ln1469_fu_1512_p1 + tmp);

assign add_ln1490_fu_1130_p2 = (zext_ln1490_fu_1126_p1 + tmp);

assign add_ln1524_1_fu_813_p2 = (shl_ln2_fu_805_p3 + xx);

assign add_ln1524_2_fu_800_p2 = (add_ln1524_reg_1780 + trunc_ln1510_fu_790_p1);

assign add_ln1524_fu_785_p2 = ($signed(trunc_ln1673_reg_1759) + $signed(13'd8191));

assign add_ln1564_1_fu_998_p2 = (shl_ln7_fu_990_p3 + xx);

assign add_ln1564_fu_985_p2 = (zext_ln1564_fu_981_p1 + trunc_ln1673_reg_1759);

assign add_ln1565_fu_1030_p2 = (zext_ln1565_fu_1026_p1 + tmp);

assign add_ln1566_fu_1072_p2 = (zext_ln1566_1_fu_1064_p1 + zext_ln1566_2_fu_1068_p1);

assign add_ln1598_1_fu_1276_p2 = (shl_ln5_fu_1268_p3 + xx);

assign add_ln1598_2_fu_1263_p2 = ($signed(add_ln1598_reg_1870) + $signed(sext_ln1580_fu_1253_p1));

assign add_ln1598_fu_1247_p2 = ($signed(trunc_ln1598_fu_1243_p1) + $signed(13'd8191));

assign add_ln1599_fu_1308_p2 = ($signed(sext_ln1599_fu_1304_p1) + $signed(tmp));

assign add_ln1665_1_fu_1050_p2 = (idx_reg_308 + xstride_cast_reg_1641);

assign add_ln1673_1_fu_762_p2 = (shl_ln1_fu_754_p3 + xx);

assign add_ln1673_fu_749_p2 = (trunc_ln1673_fu_745_p1 + zext_ln1665_reg_1746);

assign add_ln1686_fu_1161_p2 = (zext_ln1686_fu_1157_p1 + tmp);

assign add_ln1693_1_fu_1536_p2 = (idx71_fu_132 + xstride_cast_reg_1641);

assign add_ln685_1_fu_884_p2 = (add_ln685_fu_878_p2 + w_3_fu_873_p2);

assign add_ln685_fu_878_p2 = (w_fu_839_p2 + zext_ln1521_fu_869_p1);

assign add_ln697_fu_959_p2 = (zext_ln697_fu_955_p1 + sub_ln697_fu_925_p2);

assign add_ln757_fu_711_p2 = (zext_ln757_fu_707_p1 + grp_modp_montymul_fu_450_ap_return);

assign and_ln1471_fu_1588_p2 = (xor_ln1471_fu_1582_p2 & select_ln1464_reg_1904);

assign and_ln1525_fu_860_p2 = (select_ln1525_fu_852_p3 & p_reg_1683);

assign and_ln1613_fu_1424_p2 = (select_ln1613_fu_1416_p3 & cc_3_fu_1402_p3);

assign and_ln685_1_fu_906_p2 = (select_ln685_1_fu_898_p3 & p_reg_1683);

assign and_ln685_fu_661_p2 = (select_ln685_fu_653_p3 & p_reg_1683);

assign and_ln697_fu_946_p2 = (select_ln697_fu_938_p3 & p_reg_1683);

assign and_ln757_fu_698_p2 = (select_ln757_fu_690_p3 & p_reg_1683);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign aw_1_fu_1593_p2 = (vla18_q1 ^ and_ln1471_fu_1588_p2);

assign bb_1_fu_1338_p1 = vla18_q0[0:0];

assign cc_2_fu_1370_p2 = (zext_ln1592_fu_1366_p1 - vla18_q1);

assign cc_3_fu_1402_p3 = ((tmp_6_fu_1394_p3[0:0] == 1'b1) ? 2'd3 : zext_ln1607_fu_1390_p1);

assign icmp_ln1465_fu_1456_p2 = ((u_20_reg_431 == xlen) ? 1'b1 : 1'b0);

assign icmp_ln1487_fu_1107_p2 = ((u_4_reg_377 == u_1_fu_128) ? 1'b1 : 1'b0);

assign icmp_ln1520_fu_833_p2 = ((u_13_fu_794_p2 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln1560_fu_970_p2 = ((u_17_reg_353 == u_1_fu_128) ? 1'b1 : 1'b0);

assign icmp_ln1591_fu_1328_p2 = ((u_fu_1257_p2 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln1646_fu_506_p2 = ((u_1_fu_128 < xlen) ? 1'b1 : 1'b0);

assign icmp_ln1665_fu_734_p2 = ((v_reg_297 == num) ? 1'b1 : 1'b0);

assign icmp_ln1693_fu_1232_p2 = ((u_2_fu_136 == num) ? 1'b1 : 1'b0);

assign lshr_ln1599_1_fu_1313_p4 = {{add_ln1599_fu_1308_p2[14:2]}};

assign lshr_ln1_fu_767_p4 = {{add_ln1673_1_fu_762_p2[14:2]}};

assign lshr_ln2_fu_818_p4 = {{add_ln1524_1_fu_813_p2[14:2]}};

assign lshr_ln3_fu_1166_p4 = {{add_ln1686_fu_1161_p2[14:2]}};

assign lshr_ln4_fu_1135_p4 = {{add_ln1490_fu_1130_p2[14:2]}};

assign lshr_ln5_fu_1281_p4 = {{add_ln1598_1_fu_1276_p2[14:2]}};

assign lshr_ln6_fu_1003_p4 = {{add_ln1564_1_fu_998_p2[14:2]}};

assign lshr_ln7_fu_1035_p4 = {{add_ln1565_fu_1030_p2[14:2]}};

assign lshr_ln8_fu_1489_p4 = {{add_ln1468_1_fu_1484_p2[14:2]}};

assign lshr_ln9_fu_1521_p4 = {{add_ln1469_fu_1516_p2[14:2]}};

assign lshr_ln_fu_478_p4 = {{tmp[14:2]}};

assign m_fu_1440_p3 = r_1_fu_1434_p2[32'd31];

assign mul_ln1490_fu_1195_p0 = mul_ln1490_fu_1195_p00;

assign mul_ln1490_fu_1195_p00 = vla18_q1;

assign mul_ln1490_fu_1195_p1 = zext_ln1487_reg_1770;

assign mul_ln1566_fu_1059_p0 = mul_ln1566_fu_1059_p00;

assign mul_ln1566_fu_1059_p00 = vla18_q0;

assign mul_ln1566_fu_1059_p1 = zext_ln1560_reg_1804;

assign mul_ln656_fu_539_p0 = sext_ln1657_fu_525_p1;

assign mul_ln656_fu_539_p1 = zext_ln656_fu_535_p1;

assign mul_ln657_fu_557_p0 = sext_ln1657_fu_525_p1;

assign mul_ln658_fu_579_p0 = sext_ln1657_reg_1697;

assign mul_ln659_fu_594_p0 = sext_ln1657_reg_1697;

assign normalize_signed_read_read_fu_146_p2 = normalize_signed;

assign p0i_fu_611_p0 = (31'd2 - mul_ln659_fu_594_p2);

assign p0i_fu_611_p1 = ($signed(31'd0) - $signed(y_3_fu_589_p2));

assign r_1_fu_1434_p2 = (sext_ln1613_fu_1430_p1 | r_reg_408);

assign select_ln1464_fu_1448_p3 = ((m_fu_1440_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln1525_fu_852_p3 = ((tmp_2_fu_844_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln1613_fu_1416_p3 = ((xor_ln1613_fu_1410_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln685_1_fu_898_p3 = ((tmp_3_fu_890_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln685_fu_653_p3 = ((tmp_1_fu_645_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln697_fu_938_p3 = ((tmp_4_fu_930_p3[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign select_ln757_fu_690_p3 = ((trunc_ln735_fu_686_p1[0:0] == 1'b1) ? 25'd33554431 : 25'd0);

assign sext_ln1521_fu_865_p1 = $signed(and_ln1525_fu_860_p2);

assign sext_ln1580_fu_1253_p1 = phi_ln1580_reg_388;

assign sext_ln1599_fu_1304_p1 = $signed(shl_ln1599_1_fu_1296_p3);

assign sext_ln1613_fu_1430_p1 = $signed(and_ln1613_fu_1424_p2);

assign sext_ln1657_fu_525_p0 = PRIMES_p_q0;

assign sext_ln1657_fu_525_p1 = sext_ln1657_fu_525_p0;

assign sext_ln685_1_fu_911_p1 = $signed(and_ln685_1_fu_906_p2);

assign sext_ln685_fu_666_p1 = $signed(and_ln685_fu_661_p2);

assign sext_ln697_fu_951_p1 = $signed(and_ln697_fu_946_p2);

assign sext_ln757_fu_703_p1 = $signed(and_ln757_fu_698_p2);

assign shl_ln10_fu_1504_p3 = {{u_20_reg_431}, {2'd0}};

assign shl_ln1599_1_fu_1296_p3 = {{u_fu_1257_p2}, {2'd0}};

assign shl_ln1_fu_754_p3 = {{add_ln1673_fu_749_p2}, {2'd0}};

assign shl_ln2_fu_805_p3 = {{add_ln1524_2_fu_800_p2}, {2'd0}};

assign shl_ln3_fu_1150_p3 = {{u_1_fu_128}, {2'd0}};

assign shl_ln4_fu_1118_p3 = {{u_4_reg_377}, {2'd0}};

assign shl_ln5_fu_1268_p3 = {{add_ln1598_2_fu_1263_p2}, {2'd0}};

assign shl_ln6_fu_1352_p3 = {{bb_reg_397}, {30'd0}};

assign shl_ln7_fu_990_p3 = {{add_ln1564_fu_985_p2}, {2'd0}};

assign shl_ln8_fu_1018_p3 = {{u_17_reg_353}, {2'd0}};

assign shl_ln9_fu_1476_p3 = {{add_ln1468_fu_1471_p2}, {2'd0}};

assign shl_ln_fu_627_p3 = {{sub_ln685_1_fu_622_p2}, {1'd0}};

assign sub_ln1469_fu_1550_p2 = (vla18_q1 - vla18_q0);

assign sub_ln1607_fu_1376_p2 = (32'd0 - cc_2_fu_1370_p2);

assign sub_ln685_1_fu_622_p2 = (24'd0 - trunc_ln1657_reg_1692);

assign sub_ln685_fu_639_p2 = (zext_ln685_fu_635_p1 - zext_ln1657_fu_575_p1);

assign sub_ln697_fu_925_p2 = (xp_reg_1775 - x_3_fu_919_p2);

assign tmp_1_fu_645_p3 = sub_ln685_fu_639_p2[32'd31];

assign tmp_2_fu_844_p3 = w_fu_839_p2[32'd31];

assign tmp_3_fu_890_p3 = add_ln685_1_fu_884_p2[32'd31];

assign tmp_4_fu_930_p3 = sub_ln697_fu_925_p2[32'd31];

assign tmp_5_fu_1382_p3 = sub_ln1607_fu_1376_p2[32'd31];

assign tmp_6_fu_1394_p3 = cc_2_fu_1370_p2[32'd31];

assign trunc_ln1466_fu_1566_p1 = w_2_fu_1560_p2[30:0];

assign trunc_ln1491_fu_1210_p1 = z_7_fu_1204_p2[30:0];

assign trunc_ln1510_fu_790_p1 = dec4_i_in_reg_320[12:0];

assign trunc_ln1567_fu_1088_p1 = z_8_fu_1082_p2[30:0];

assign trunc_ln1580_fu_1334_p1 = r_reg_408[0:0];

assign trunc_ln1598_fu_1243_p1 = idx71_fu_132[12:0];

assign trunc_ln1599_1_fu_1342_p4 = {{vla18_q0[31:1]}};

assign trunc_ln1657_fu_521_p0 = PRIMES_p_q0;

assign trunc_ln1657_fu_521_p1 = trunc_ln1657_fu_521_p0[23:0];

assign trunc_ln1673_fu_745_p1 = idx_reg_308[12:0];

assign trunc_ln735_fu_686_p1 = grp_modp_montymul_fu_450_ap_return[0:0];

assign u_13_fu_794_p2 = ($signed(dec4_i_in_reg_320) + $signed(64'd18446744073709551615));

assign u_15_fu_1181_p2 = (u_1_fu_128 + 9'd1);

assign u_16_fu_1112_p2 = (u_4_reg_377 + 9'd1);

assign u_18_fu_975_p2 = (u_17_reg_353 + 9'd1);

assign u_19_fu_1237_p2 = (u_2_fu_136 + 64'd1);

assign u_21_fu_1461_p2 = (u_20_reg_431 + 9'd1);

assign u_fu_1257_p2 = ($signed(phi_ln1580_reg_388) + $signed(10'd1023));

assign v_1_fu_739_p2 = (v_reg_297 + 64'd1);

assign w_2_fu_1560_p2 = (sub_ln1469_fu_1550_p2 - zext_ln1465_fu_1556_p1);

assign w_3_fu_873_p2 = (reg_464 - zext_ln1657_reg_1711);

assign w_fu_839_p2 = (vla18_q0 - zext_ln1657_reg_1711);

assign wp_fu_1360_p2 = (trunc_ln1599_1_fu_1342_p4 | shl_ln6_fu_1352_p3);

assign x_3_fu_919_p2 = (zext_ln685_2_fu_915_p1 + add_ln685_1_fu_884_p2);

assign xlen_cast_fu_474_p1 = xlen;

assign xor_ln1471_fu_1582_p2 = (zext_ln1471_fu_1578_p1 ^ vla18_q1);

assign xor_ln1613_fu_1410_p2 = (trunc_ln1580_fu_1334_p1 ^ 1'd1);

assign xstride_cast_fu_470_p1 = xstride;

assign y_1_fu_551_p0 = (31'd2 - mul_ln656_fu_539_p2);

assign y_1_fu_551_p1 = zext_ln656_fu_535_p1;

assign y_2_fu_569_p0 = (31'd2 - mul_ln657_fu_557_p2);

assign y_3_fu_589_p0 = (31'd2 - mul_ln658_fu_579_p2);

assign y_fu_529_p2 = (24'd2 - trunc_ln1657_fu_521_p1);

assign z_7_fu_1204_p2 = (mul_ln1490_fu_1195_p2 + zext_ln1490_3_fu_1200_p1);

assign z_8_fu_1082_p2 = (zext_ln1566_3_fu_1078_p1 + mul_ln1566_fu_1059_p2);

assign z_9_fu_717_p4 = {{add_ln757_fu_711_p2[31:1]}};

assign z_fu_674_p2 = (zext_ln685_1_fu_670_p1 + sub_ln685_fu_639_p2);

assign zext_ln1465_fu_1556_p1 = cc_6_reg_419;

assign zext_ln1468_1_fu_1499_p1 = lshr_ln8_fu_1489_p4;

assign zext_ln1468_fu_1467_p1 = u_20_reg_431;

assign zext_ln1469_1_fu_1531_p1 = lshr_ln9_fu_1521_p4;

assign zext_ln1469_fu_1512_p1 = shl_ln10_fu_1504_p3;

assign zext_ln1471_fu_1578_p1 = trunc_ln1466_fu_1566_p1;

assign zext_ln1487_fu_782_p1 = $unsigned(sext_ln1657_reg_1697);

assign zext_ln1490_1_fu_1145_p1 = lshr_ln4_fu_1135_p4;

assign zext_ln1490_3_fu_1200_p1 = cc_reg_364;

assign zext_ln1490_fu_1126_p1 = shl_ln4_fu_1118_p3;

assign zext_ln1491_fu_1214_p1 = trunc_ln1491_fu_1210_p1;

assign zext_ln1521_fu_869_p1 = $unsigned(sext_ln1521_fu_865_p1);

assign zext_ln1524_fu_828_p1 = lshr_ln2_fu_818_p4;

assign zext_ln1560_fu_966_p1 = grp_modp_montymul_fu_442_ap_return;

assign zext_ln1564_1_fu_1013_p1 = lshr_ln6_fu_1003_p4;

assign zext_ln1564_fu_981_p1 = u_17_reg_353;

assign zext_ln1565_1_fu_1045_p1 = lshr_ln7_fu_1035_p4;

assign zext_ln1565_fu_1026_p1 = shl_ln8_fu_1018_p3;

assign zext_ln1566_1_fu_1064_p1 = vla18_q1;

assign zext_ln1566_2_fu_1068_p1 = cc_4_reg_340;

assign zext_ln1566_3_fu_1078_p1 = add_ln1566_fu_1072_p2;

assign zext_ln1567_fu_1092_p1 = trunc_ln1567_fu_1088_p1;

assign zext_ln1592_fu_1366_p1 = wp_fu_1360_p2;

assign zext_ln1598_fu_1291_p1 = lshr_ln5_fu_1281_p4;

assign zext_ln1599_fu_1323_p1 = lshr_ln1599_1_fu_1313_p4;

assign zext_ln1607_fu_1390_p1 = tmp_5_fu_1382_p3;

assign zext_ln1645_fu_488_p1 = lshr_ln_fu_478_p4;

assign zext_ln1646_fu_501_p1 = u_1_fu_128;

assign zext_ln1657_1_fu_682_p1 = PRIMES_s_q0;

assign zext_ln1657_2_fu_617_p1 = p0i_fu_611_p2;

assign zext_ln1657_fu_575_p1 = $unsigned(sext_ln1657_reg_1697);

assign zext_ln1665_fu_731_p1 = u_1_fu_128;

assign zext_ln1673_fu_777_p1 = lshr_ln1_fu_767_p4;

assign zext_ln1686_1_fu_1176_p1 = lshr_ln3_fu_1166_p4;

assign zext_ln1686_fu_1157_p1 = shl_ln3_fu_1150_p3;

assign zext_ln656_fu_535_p1 = y_fu_529_p2;

assign zext_ln685_1_fu_670_p1 = $unsigned(sext_ln685_fu_666_p1);

assign zext_ln685_2_fu_915_p1 = $unsigned(sext_ln685_1_fu_911_p1);

assign zext_ln685_fu_635_p1 = shl_ln_fu_627_p3;

assign zext_ln697_fu_955_p1 = $unsigned(sext_ln697_fu_951_p1);

assign zext_ln757_1_fu_727_p1 = z_9_fu_717_p4;

assign zext_ln757_fu_707_p1 = $unsigned(sext_ln757_fu_703_p1);

always @ (posedge ap_clk) begin
    xstride_cast_reg_1641[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    xlen_cast_reg_1647[9] <= 1'b0;
    zext_ln1646_reg_1655[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln1657_reg_1711[31] <= 1'b0;
    zext_ln1657_2_reg_1719[31] <= 1'b0;
    zext_ln1657_1_reg_1736[31] <= 1'b0;
    zext_ln757_1_reg_1741[31] <= 1'b0;
    zext_ln1665_reg_1746[12:9] <= 4'b0000;
    zext_ln1487_reg_1770[62:31] <= 32'b00000000000000000000000000000000;
    zext_ln1560_reg_1804[62:32] <= 31'b0000000000000000000000000000000;
end

endmodule //keygen_zint_rebuild_CRT_1
