-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity keygen_zint_bezout_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce0 : OUT STD_LOGIC;
    vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    vla18_ce1 : OUT STD_LOGIC;
    vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of keygen_zint_bezout_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_D1 : STD_LOGIC_VECTOR (7 downto 0) := "11010001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_D0 : STD_LOGIC_VECTOR (7 downto 0) := "11010000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv9_144 : STD_LOGIC_VECTOR (8 downto 0) := "101000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_D10 : STD_LOGIC_VECTOR (12 downto 0) := "0110100010000";
    constant ap_const_lv13_1054 : STD_LOGIC_VECTOR (12 downto 0) := "1000001010100";
    constant ap_const_lv12_9CC : STD_LOGIC_VECTOR (11 downto 0) := "100111001100";
    constant ap_const_lv12_688 : STD_LOGIC_VECTOR (11 downto 0) := "011010001000";
    constant ap_const_lv64_1A2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000110100010";
    constant ap_const_lv64_273 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001001110011";
    constant ap_const_lv64_D1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011010001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_415 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010000010101";
    constant ap_const_lv64_4E6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010011100110";
    constant ap_const_lv64_5B7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010110110111";
    constant ap_const_lv64_5B6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010110110110";
    constant ap_const_lv64_687 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000011010000111";
    constant ap_const_lv14_32BC : STD_LOGIC_VECTOR (13 downto 0) := "11001010111100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv31_2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1398 : STD_LOGIC_VECTOR (12 downto 0) := "1001110011000";
    constant ap_const_lv13_16DC : STD_LOGIC_VECTOR (12 downto 0) := "1011011011100";
    constant ap_const_lv11_344 : STD_LOGIC_VECTOR (10 downto 0) := "01101000100";
    constant ap_const_lv8_CF : STD_LOGIC_VECTOR (7 downto 0) := "11001111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv13_1394 : STD_LOGIC_VECTOR (12 downto 0) := "1001110010100";
    constant ap_const_lv13_16D8 : STD_LOGIC_VECTOR (12 downto 0) := "1011011011000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv14_3FE2 : STD_LOGIC_VECTOR (13 downto 0) := "11111111100010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal vla18_addr_reg_2667 : STD_LOGIC_VECTOR (12 downto 0);
    signal vla18_addr_28_reg_2672 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln651_fu_702_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_reg_2677 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal y_7_fu_742_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_7_reg_2682 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_fu_748_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_reg_2687 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_1_fu_754_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln651_1_reg_2692 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_12_fu_794_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_12_reg_2697 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_2_fu_800_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln658_2_reg_2702 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_809_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_2710 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_ln658_1_fu_886_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln658_1_reg_2730 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond97_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_15_fu_891_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_15_reg_2735 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_fu_896_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln659_reg_2740 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_909_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_reg_2748 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal y_17_fu_981_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_17_reg_2768 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond96_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln659_1_fu_990_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln659_1_reg_2773 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln659_fu_1001_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln659_reg_2778 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal x0i_fu_1094_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal x0i_reg_2803 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond94_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1107_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_reg_2811 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal y0i_fu_1184_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y0i_reg_2831 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal exitcond93_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_1197_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_2839 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal a0_1_fu_1361_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal a1_1_fu_1379_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_1_fu_1397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b1_1_fu_1415_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_fu_1455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_5_fu_1461_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_hi_fu_1531_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_reg_2948 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln2066_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_hi_fu_1553_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_reg_2953 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_1_fu_1569_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal a_lo_3_fu_1829_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln2107_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pa_2_fu_1849_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_2_fu_1861_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_3_fu_1901_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_3_fu_1921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal qa_2_fu_1933_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_2_fu_1945_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_3_fu_1977_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal u_34_fu_1989_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_34_reg_3019 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln1753_1_fu_2003_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1753_1_reg_3024 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1749_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1757_fu_2049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1757_reg_3040 : STD_LOGIC_VECTOR (0 downto 0);
    signal nega_fu_2065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal nega_reg_3044 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1707_fu_2073_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1707_reg_3050 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1720_fu_2081_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1720_reg_3055 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal u_33_fu_2237_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_33_reg_3073 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal vla18_addr_52_reg_3078 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1716_fu_2231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal negb_fu_2276_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal negb_reg_3084 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1707_1_fu_2284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1707_1_reg_3090 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1720_1_fu_2292_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1720_1_reg_3095 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal u_35_fu_2353_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_35_reg_3108 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal vla18_addr_53_reg_3113 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1716_1_fu_2347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pa_3_fu_2411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_3_reg_3119 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_3_fu_2430_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_3_reg_3124 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_3_fu_2456_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_3_reg_3129 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_3_fu_2475_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_3_reg_3134 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal icmp_ln2193_fu_2553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_ap_start : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_done : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_idle : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_ap_ready : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_ce0 : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_ce1 : STD_LOGIC;
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_we1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_vla18_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_a : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_b : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_m : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_m0i : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_410 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln2043_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_reg_421 : STD_LOGIC_VECTOR (7 downto 0);
    signal b1_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_2_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_502 : STD_LOGIC_VECTOR (4 downto 0);
    signal qb_reg_513 : STD_LOGIC_VECTOR (63 downto 0);
    signal qa_reg_525 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_reg_537 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_reg_549 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_1_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_lo_1_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_hi_1_reg_579 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_hi_1_reg_588 : STD_LOGIC_VECTOR (63 downto 0);
    signal ccb_reg_597 : STD_LOGIC_VECTOR (32 downto 0);
    signal cca_reg_609 : STD_LOGIC_VECTOR (32 downto 0);
    signal u_reg_621 : STD_LOGIC_VECTOR (7 downto 0);
    signal cc_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_20_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal cc_12_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal u_23_reg_663 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zint_co_reduce_mod_1_fu_674_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal p_cast9_fu_837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast10_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast11_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast12_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast13_fu_1043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_cast14_fu_1067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_fu_1135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast16_fu_1159_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast17_fu_1225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast18_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln2069_fu_1323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2070_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1753_fu_2023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1754_fu_2044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1758_fu_2177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1759_fu_2206_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1719_fu_2271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1719_1_fu_2387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2194_fu_2587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index28_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_194_fu_866_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_index22_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_197_fu_966_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_207_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ptr7_sum_fu_1009_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond95_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_199_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_200_fu_1072_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_index16_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_203_fu_1164_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_index_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_206_fu_1254_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond92_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_fu_178 : STD_LOGIC_VECTOR (13 downto 0);
    signal num_3_fu_2482_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_3_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_7_fu_2592_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rc_1_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal rc_2_fu_2603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rc_fu_2539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln2037_fu_1274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1764_fu_2055_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1765_fu_2060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1758_1_fu_2157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1759_1_fu_2186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1721_fu_2334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1721_1_fu_2526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_706_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_fu_712_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_6_fu_724_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_6_fu_724_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_fu_730_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_7_fu_742_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_10_fu_758_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln656_3_fu_764_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_11_fu_776_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_11_fu_776_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln657_3_fu_782_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_12_fu_794_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast_fu_817_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_821_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_827_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast1_fu_842_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_193_fu_845_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_851_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_15_fu_891_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast2_fu_917_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_195_fu_921_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_927_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast3_fu_942_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_196_fu_945_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_951_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln659_1_fu_985_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_fu_1015_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast4_fu_1023_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_198_fu_1027_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_fu_1033_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal x0i_fu_1094_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast5_fu_1115_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_201_fu_1119_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_1125_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast6_fu_1140_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_202_fu_1143_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_1149_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal y0i_fu_1184_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast7_fu_1205_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_204_fu_1209_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_1215_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast8_fu_1230_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_205_fu_1233_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_fu_1239_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_1295_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2069_1_fu_1303_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2069_fu_1307_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln_fu_1313_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln2070_fu_1328_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln10_fu_1334_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln2071_fu_1349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2071_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2072_fu_1367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2072_fu_1373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2073_fu_1385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2073_fu_1391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2074_fu_1403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2074_fu_1409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2076_fu_1421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2076_fu_1427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1433_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2076_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2076_fu_1447_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2085_fu_1473_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln2086_fu_1485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2087_fu_1497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_2_fu_1491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln14_fu_1515_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal a1_2_fu_1479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2089_fu_1523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2089_1_fu_1527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal b0_2_fu_1509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln15_fu_1537_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal b1_2_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln2090_fu_1545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2090_1_fu_1549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rz_fu_1575_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2128_fu_1587_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2127_fu_1581_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2128_fu_1593_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2127_1_fu_1599_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln2107_fu_1559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln2140_fu_1613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln2141_fu_1623_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2142_fu_1629_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal rt_fu_1605_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2142_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oa_fu_1619_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2143_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2143_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2144_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cAB_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2149_fu_1675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2149_fu_1683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2150_fu_1695_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2150_fu_1703_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2151_fu_1715_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2152_fu_1727_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cBA_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_lo_2_fu_1689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2153_fu_1739_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2153_fu_1747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_hi_2_fu_1709_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2154_fu_1759_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2154_fu_1767_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pa_1_fu_1721_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2155_fu_1779_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal pb_1_fu_1733_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2156_fu_1791_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2161_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2161_1_fu_1809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2161_fu_1815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2161_fu_1823_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2162_fu_1835_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2162_fu_1843_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2163_fu_1855_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln12_fu_1867_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln2164_fu_1877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cA_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2164_fu_1881_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2164_fu_1887_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2164_fu_1895_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_lo_2_fu_1753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln2165_fu_1907_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln2165_fu_1915_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal qa_1_fu_1785_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2166_fu_1927_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal qb_1_fu_1797_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2167_fu_1939_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_hi_2_fu_1773_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln13_fu_1951_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln2168_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln2168_fu_1965_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2168_fu_1971_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln17_fu_1995_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1753_fu_2007_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln14_fu_2013_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1754_fu_2028_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln15_fu_2034_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1755_fu_2093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1755_fu_2089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1755_1_fu_2103_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1755_1_fu_2099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1749_fu_2109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1755_1_fu_2103_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1755_fu_2113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1755_fu_2093_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1756_fu_2125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1756_1_fu_2131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1749_1_fu_2137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1756_1_fu_2131_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1756_fu_2141_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1756_fu_2125_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal za_fu_2119_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1758_fu_2153_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1758_fu_2162_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln16_fu_2167_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zb_fu_2147_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1759_fu_2182_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1759_fu_2191_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln17_fu_2196_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln18_fu_2243_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1719_2_fu_2251_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1719_fu_2255_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln18_fu_2261_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1720_fu_2300_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln1720_fu_2304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1716_fu_2318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1720_2_fu_2313_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1720_fu_2309_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1717_fu_2328_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal aw_6_fu_2322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1719_1_fu_2359_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1719_3_fu_2367_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1719_1_fu_2371_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln1719_1_fu_2377_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln2178_fu_2392_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2178_fu_2398_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2178_fu_2405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2179_fu_2418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2179_fu_2424_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2180_fu_2437_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2180_fu_2443_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2180_fu_2450_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2181_fu_2463_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln2181_fu_2469_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1720_1_fu_2492_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal xor_ln1720_1_fu_2496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1716_1_fu_2510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1720_3_fu_2505_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1720_1_fu_2501_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1717_1_fu_2520_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal aw_8_fu_2514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln16_fu_2559_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2194_1_fu_2567_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln2194_fu_2571_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln11_fu_2577_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln2196_fu_2614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2196_fu_2620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2196_fu_2640_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2196_fu_2634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2196_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2196_1_fu_2644_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2196_1_fu_2654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component keygen_zint_co_reduce_mod_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        vla18_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce0 : OUT STD_LOGIC;
        vla18_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        vla18_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        vla18_ce1 : OUT STD_LOGIC;
        vla18_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        vla18_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        vla18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a : IN STD_LOGIC_VECTOR (8 downto 0);
        b : IN STD_LOGIC_VECTOR (12 downto 0);
        m : IN STD_LOGIC_VECTOR (11 downto 0);
        m0i : IN STD_LOGIC_VECTOR (30 downto 0);
        xa : IN STD_LOGIC_VECTOR (63 downto 0);
        xb : IN STD_LOGIC_VECTOR (63 downto 0);
        ya : IN STD_LOGIC_VECTOR (63 downto 0);
        yb : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component keygen_mul_31s_31s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component keygen_mul_64s_32ns_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_zint_co_reduce_mod_1_fu_674 : component keygen_zint_co_reduce_mod_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zint_co_reduce_mod_1_fu_674_ap_start,
        ap_done => grp_zint_co_reduce_mod_1_fu_674_ap_done,
        ap_idle => grp_zint_co_reduce_mod_1_fu_674_ap_idle,
        ap_ready => grp_zint_co_reduce_mod_1_fu_674_ap_ready,
        vla18_address0 => grp_zint_co_reduce_mod_1_fu_674_vla18_address0,
        vla18_ce0 => grp_zint_co_reduce_mod_1_fu_674_vla18_ce0,
        vla18_we0 => grp_zint_co_reduce_mod_1_fu_674_vla18_we0,
        vla18_d0 => grp_zint_co_reduce_mod_1_fu_674_vla18_d0,
        vla18_q0 => vla18_q0,
        vla18_address1 => grp_zint_co_reduce_mod_1_fu_674_vla18_address1,
        vla18_ce1 => grp_zint_co_reduce_mod_1_fu_674_vla18_ce1,
        vla18_we1 => grp_zint_co_reduce_mod_1_fu_674_vla18_we1,
        vla18_d1 => grp_zint_co_reduce_mod_1_fu_674_vla18_d1,
        vla18_q1 => vla18_q1,
        a => grp_zint_co_reduce_mod_1_fu_674_a,
        b => grp_zint_co_reduce_mod_1_fu_674_b,
        m => grp_zint_co_reduce_mod_1_fu_674_m,
        m0i => grp_zint_co_reduce_mod_1_fu_674_m0i,
        xa => pa_3_reg_3119,
        xb => pb_3_reg_3124,
        ya => qa_3_reg_3129,
        yb => qb_3_reg_3134);

    mul_31s_31s_31_1_1_U343 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_fu_702_p1,
        din1 => y_fu_706_p2,
        dout => mul_ln656_fu_712_p2);

    mul_31s_31s_31_1_1_U344 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_6_fu_724_p0,
        din1 => y_fu_706_p2,
        dout => y_6_fu_724_p2);

    mul_31s_31s_31_1_1_U345 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_fu_702_p1,
        din1 => y_6_fu_724_p2,
        dout => mul_ln657_fu_730_p2);

    mul_31s_31s_31_1_1_U346 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_7_fu_742_p0,
        din1 => y_6_fu_724_p2,
        dout => y_7_fu_742_p2);

    mul_31s_31s_31_1_1_U347 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_fu_702_p1,
        din1 => y_7_fu_742_p2,
        dout => mul_ln658_fu_748_p2);

    mul_31s_31s_31_1_1_U348 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_fu_754_p1,
        din1 => y_10_fu_758_p2,
        dout => mul_ln656_3_fu_764_p2);

    mul_31s_31s_31_1_1_U349 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_11_fu_776_p0,
        din1 => y_10_fu_758_p2,
        dout => y_11_fu_776_p2);

    mul_31s_31s_31_1_1_U350 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_fu_754_p1,
        din1 => y_11_fu_776_p2,
        dout => mul_ln657_3_fu_782_p2);

    mul_31s_31s_31_1_1_U351 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_12_fu_794_p0,
        din1 => y_11_fu_776_p2,
        dout => y_12_fu_794_p2);

    mul_31s_31s_31_1_1_U352 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_fu_754_p1,
        din1 => y_12_fu_794_p2,
        dout => mul_ln658_2_fu_800_p2);

    mul_31s_31s_31_1_1_U353 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => y_15_fu_891_p0,
        din1 => y_7_reg_2682,
        dout => y_15_fu_891_p2);

    mul_31s_31s_31_1_1_U354 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_reg_2677,
        din1 => y_15_fu_891_p2,
        dout => mul_ln659_fu_896_p2);

    mul_31s_31s_31_1_1_U355 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln658_1_reg_2730,
        din1 => y_12_reg_2697,
        dout => y_17_fu_981_p2);

    mul_31s_31s_31_1_1_U356 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => trunc_ln651_1_reg_2692,
        din1 => y_17_fu_981_p2,
        dout => mul_ln659_1_fu_985_p2);

    mul_31s_31s_31_1_1_U357 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln659_reg_2778,
        din1 => x0i_fu_1094_p1,
        dout => x0i_fu_1094_p2);

    mul_31s_31s_31_1_1_U358 : component keygen_mul_31s_31s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln659_1_reg_2773,
        din1 => y0i_fu_1184_p1,
        dout => y0i_fu_1184_p2);

    mul_64s_32ns_64_1_1_U359 : component keygen_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => pa_reg_549,
        din1 => mul_ln1755_fu_2093_p1,
        dout => mul_ln1755_fu_2093_p2);

    mul_64s_32ns_64_1_1_U360 : component keygen_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => pb_reg_537,
        din1 => mul_ln1755_1_fu_2103_p1,
        dout => mul_ln1755_1_fu_2103_p2);

    mul_64s_32ns_64_1_1_U361 : component keygen_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => qa_reg_525,
        din1 => mul_ln1756_fu_2125_p1,
        dout => mul_ln1756_fu_2125_p2);

    mul_64s_32ns_64_1_1_U362 : component keygen_mul_64s_32ns_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => qb_reg_513,
        din1 => mul_ln1756_1_fu_2131_p1,
        dout => mul_ln1756_1_fu_2131_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_return_preg <= and_ln2196_1_fu_2654_p2;
                end if; 
            end if;
        end if;
    end process;


    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
                    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zint_co_reduce_mod_1_fu_674_ap_ready = ap_const_logic_1)) then 
                    grp_zint_co_reduce_mod_1_fu_674_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                a0_reg_467 <= a0_1_fu_1361_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                a0_reg_467 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    a1_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                a1_reg_456 <= a1_1_fu_1379_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                a1_reg_456 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    a_hi_1_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                a_hi_1_reg_588 <= a_hi_3_fu_1901_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                a_hi_1_reg_588 <= a_hi_reg_2948;
            end if; 
        end if;
    end process;

    a_lo_1_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                a_lo_1_reg_570 <= a_lo_3_fu_1829_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                a_lo_1_reg_570 <= vla18_q1;
            end if; 
        end if;
    end process;

    b0_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                b0_reg_445 <= b0_1_fu_1397_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                b0_reg_445 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    b1_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                b1_reg_434 <= b1_1_fu_1415_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                b1_reg_434 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    b_hi_1_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                b_hi_1_reg_579 <= b_hi_3_fu_1977_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                b_hi_1_reg_579 <= b_hi_reg_2953;
            end if; 
        end if;
    end process;

    b_lo_1_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                b_lo_1_reg_561 <= b_lo_3_fu_1921_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                b_lo_1_reg_561 <= vla18_q0;
            end if; 
        end if;
    end process;

    c0_2_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                c0_2_reg_489 <= c0_fu_1455_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                c0_2_reg_489 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    c1_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                c1_reg_478 <= c0_2_reg_489;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                c1_reg_478 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    cc_12_reg_653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                cc_12_reg_653 <= aw_8_fu_2514_p2(31 downto 31);
            elsif (((icmp_ln1716_fu_2231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                cc_12_reg_653 <= ccb_reg_597(32 downto 32);
            end if; 
        end if;
    end process;

    cc_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                cc_reg_632 <= aw_6_fu_2322_p2(31 downto 31);
            elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                cc_reg_632 <= cca_reg_609(32 downto 32);
            end if; 
        end if;
    end process;

    cca_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                cca_reg_609 <= ap_const_lv33_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                cca_reg_609 <= za_fu_2119_p2(63 downto 31);
            end if; 
        end if;
    end process;

    ccb_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                ccb_reg_597 <= ap_const_lv33_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                ccb_reg_597 <= zb_fu_2147_p2(63 downto 31);
            end if; 
        end if;
    end process;

    empty_199_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond95_fu_1048_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                empty_199_fu_166 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond94_fu_1078_p2 = ap_const_lv1_0))) then 
                empty_199_fu_166 <= empty_200_fu_1072_p2;
            end if; 
        end if;
    end process;

    empty_207_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond96_fu_971_p2 = ap_const_lv1_1))) then 
                empty_207_fu_162 <= ap_const_lv8_0;
            elsif (((exitcond95_fu_1048_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                empty_207_fu_162 <= add_ptr7_sum_fu_1009_p2;
            end if; 
        end if;
    end process;

    i_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i_reg_502 <= i_1_fu_1569_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                i_reg_502 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_1_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                j_1_reg_421 <= j_5_fu_1461_p2;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j_1_reg_421 <= ap_const_lv8_D0;
            end if; 
        end if;
    end process;

    j_3_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j_3_fu_182 <= ap_const_lv8_1;
            elsif (((icmp_ln2193_fu_2553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                j_3_fu_182 <= j_7_fu_2592_p2;
            end if; 
        end if;
    end process;

    j_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                j_reg_410 <= j_1_reg_421;
            elsif (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j_reg_410 <= ap_const_lv8_D1;
            end if; 
        end if;
    end process;

    loop_index16_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond94_fu_1078_p2 = ap_const_lv1_1))) then 
                loop_index16_fu_170 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond93_fu_1169_p2 = ap_const_lv1_0))) then 
                loop_index16_fu_170 <= empty_203_fu_1164_p2;
            end if; 
        end if;
    end process;

    loop_index22_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond97_fu_871_p2 = ap_const_lv1_1))) then 
                loop_index22_fu_158 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond96_fu_971_p2 = ap_const_lv1_0))) then 
                loop_index22_fu_158 <= empty_197_fu_966_p2;
            end if; 
        end if;
    end process;

    loop_index28_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                loop_index28_fu_154 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond97_fu_871_p2 = ap_const_lv1_0))) then 
                loop_index28_fu_154 <= empty_194_fu_866_p2;
            end if; 
        end if;
    end process;

    loop_index_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond93_fu_1169_p2 = ap_const_lv1_1))) then 
                loop_index_fu_174 <= ap_const_lv8_0;
            elsif (((exitcond92_fu_1259_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                loop_index_fu_174 <= empty_206_fu_1254_p2;
            end if; 
        end if;
    end process;

    num_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond92_fu_1259_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                num_fu_178 <= ap_const_lv14_32BC;
            elsif (((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                num_fu_178 <= num_3_fu_2482_p2;
            end if; 
        end if;
    end process;

    pa_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                pa_reg_549 <= pa_2_fu_1849_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                pa_reg_549 <= ap_const_lv64_1;
            end if; 
        end if;
    end process;

    pb_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                pb_reg_537 <= pb_2_fu_1861_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                pb_reg_537 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    qa_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                qa_reg_525 <= qa_2_fu_1933_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                qa_reg_525 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    qb_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                qb_reg_513 <= qb_2_fu_1945_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                qb_reg_513 <= ap_const_lv64_1;
            end if; 
        end if;
    end process;

    rc_1_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                rc_1_fu_186 <= rc_fu_2539_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                rc_1_fu_186 <= rc_2_fu_2603_p2;
            end if; 
        end if;
    end process;

    u_20_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                u_20_reg_642 <= u_33_reg_3073;
            elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                u_20_reg_642 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    u_23_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                u_23_reg_663 <= u_35_reg_3108;
            elsif (((icmp_ln1716_fu_2231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                u_23_reg_663 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    u_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                u_reg_621 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                u_reg_621 <= u_34_reg_3019;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                a_hi_reg_2948 <= a_hi_fu_1531_p2;
                b_hi_reg_2953 <= b_hi_fu_1553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                icmp_ln1757_reg_3040 <= icmp_ln1757_fu_2049_p2;
                    zext_ln1753_1_reg_3024(9 downto 2) <= zext_ln1753_1_fu_2003_p1(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_ln658_2_reg_2702 <= mul_ln658_2_fu_800_p2;
                mul_ln658_reg_2687 <= mul_ln658_fu_748_p2;
                trunc_ln651_1_reg_2692 <= trunc_ln651_1_fu_754_p1;
                trunc_ln651_reg_2677 <= trunc_ln651_fu_702_p1;
                y_12_reg_2697 <= y_12_fu_794_p2;
                y_7_reg_2682 <= y_7_fu_742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond97_fu_871_p2 = ap_const_lv1_1))) then
                mul_ln659_reg_2740 <= mul_ln659_fu_896_p2;
                sub_ln658_1_reg_2730 <= sub_ln658_1_fu_886_p2;
                y_15_reg_2735 <= y_15_fu_891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                nega_reg_3044 <= cca_reg_609(32 downto 32);
                    select_ln1707_reg_3050(30 downto 0) <= select_ln1707_fu_2073_p3(30 downto 0);
                select_ln1720_reg_3055 <= select_ln1720_fu_2081_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1716_fu_2231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                negb_reg_3084 <= ccb_reg_597(32 downto 32);
                    select_ln1707_1_reg_3090(30 downto 0) <= select_ln1707_1_fu_2284_p3(30 downto 0);
                select_ln1720_1_reg_3095 <= select_ln1720_1_fu_2292_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                pa_3_reg_3119 <= pa_3_fu_2411_p2;
                pb_3_reg_3124 <= pb_3_fu_2430_p2;
                qa_3_reg_3129 <= qa_3_fu_2456_p2;
                qb_3_reg_3134 <= qb_3_fu_2475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond96_fu_971_p2 = ap_const_lv1_1))) then
                sub_ln659_1_reg_2773 <= sub_ln659_1_fu_990_p2;
                y_17_reg_2768 <= y_17_fu_981_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                sub_ln659_reg_2778 <= sub_ln659_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    tmp_10_reg_2839(9 downto 2) <= tmp_10_fu_1197_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    tmp_3_reg_2748(9 downto 2) <= tmp_3_fu_909_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    tmp_8_reg_2811(9 downto 2) <= tmp_8_fu_1107_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp_reg_2710(9 downto 2) <= tmp_fu_809_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                u_33_reg_3073 <= u_33_fu_2237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                u_34_reg_3019 <= u_34_fu_1989_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                u_35_reg_3108 <= u_35_fu_2353_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1716_fu_2231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    vla18_addr_52_reg_3078(10 downto 0) <= zext_ln1719_fu_2271_p1(13 - 1 downto 0)(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    vla18_addr_53_reg_3113(10 downto 0) <= zext_ln1719_1_fu_2387_p1(13 - 1 downto 0)(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond94_fu_1078_p2 = ap_const_lv1_1))) then
                x0i_reg_2803 <= x0i_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond93_fu_1169_p2 = ap_const_lv1_1))) then
                y0i_reg_2831 <= y0i_fu_1184_p2;
            end if;
        end if;
    end process;
    tmp_reg_2710(1 downto 0) <= "00";
    tmp_3_reg_2748(1 downto 0) <= "00";
    tmp_8_reg_2811(1 downto 0) <= "00";
    tmp_10_reg_2839(1 downto 0) <= "00";
    zext_ln1753_1_reg_3024(1 downto 0) <= "00";
    zext_ln1753_1_reg_3024(12 downto 10) <= "000";
    select_ln1707_reg_3050(31) <= '0';
    vla18_addr_52_reg_3078(12 downto 11) <= "00";
    select_ln1707_1_reg_3090(31) <= '0';
    vla18_addr_53_reg_3113(12 downto 11) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, exitcond97_fu_871_p2, ap_CS_fsm_state6, exitcond96_fu_971_p2, ap_CS_fsm_state9, exitcond94_fu_1078_p2, ap_CS_fsm_state11, exitcond93_fu_1169_p2, ap_CS_fsm_state18, icmp_ln2066_fu_1467_p2, ap_CS_fsm_state20, icmp_ln2107_fu_1563_p2, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state23, icmp_ln1716_fu_2231_p2, ap_CS_fsm_state25, icmp_ln1716_1_fu_2347_p2, ap_CS_fsm_state31, icmp_ln2193_fu_2553_p2, grp_zint_co_reduce_mod_1_fu_674_ap_done, ap_CS_fsm_state16, icmp_ln2043_fu_1284_p2, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state8, ap_CS_fsm_state13, exitcond95_fu_1048_p2, exitcond92_fu_1259_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond97_fu_871_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond96_fu_971_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((exitcond95_fu_1048_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond94_fu_1078_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond93_fu_1169_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((exitcond92_fu_1259_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln2043_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln2066_fu_1467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln2107_fu_1563_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln1716_fu_2231_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state27 => 
                if (((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln2193_fu_2553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a0_1_fu_1361_p2 <= (and_ln2071_fu_1355_p2 xor a0_reg_467);
    a0_2_fu_1491_p2 <= (xor_ln2086_fu_1485_p2 and a0_reg_467);
    a1_1_fu_1379_p2 <= (and_ln2072_fu_1373_p2 xor a1_reg_456);
    a1_2_fu_1479_p2 <= (and_ln2085_fu_1473_p2 or a1_1_fu_1379_p2);
    a_hi_2_fu_1709_p2 <= std_logic_vector(unsigned(a_hi_1_reg_588) - unsigned(and_ln2150_fu_1703_p2));
    a_hi_3_fu_1901_p2 <= (and_ln2164_fu_1895_p2 xor a_hi_2_fu_1709_p2);
    a_hi_fu_1531_p2 <= std_logic_vector(unsigned(zext_ln2089_fu_1523_p1) + unsigned(zext_ln2089_1_fu_1527_p1));
    a_lo_2_fu_1689_p2 <= std_logic_vector(unsigned(a_lo_1_reg_570) - unsigned(and_ln2149_fu_1683_p2));
    a_lo_3_fu_1829_p2 <= std_logic_vector(unsigned(and_ln2161_fu_1823_p2) + unsigned(a_lo_2_fu_1689_p2));
    add_ln1717_1_fu_2520_p2 <= std_logic_vector(unsigned(xor_ln1720_3_fu_2505_p2) + unsigned(zext_ln1720_1_fu_2501_p1));
    add_ln1717_fu_2328_p2 <= std_logic_vector(unsigned(xor_ln1720_2_fu_2313_p2) + unsigned(zext_ln1720_fu_2309_p1));
    add_ln1719_1_fu_2371_p2 <= std_logic_vector(unsigned(zext_ln1719_3_fu_2367_p1) + unsigned(ap_const_lv13_16DC));
    add_ln1719_fu_2255_p2 <= std_logic_vector(unsigned(zext_ln1719_2_fu_2251_p1) + unsigned(ap_const_lv13_1398));
    add_ln1753_fu_2007_p2 <= std_logic_vector(unsigned(zext_ln1753_1_fu_2003_p1) + unsigned(ap_const_lv13_1398));
    add_ln1754_fu_2028_p2 <= std_logic_vector(unsigned(zext_ln1753_1_fu_2003_p1) + unsigned(ap_const_lv13_16DC));
    add_ln1755_fu_2113_p2 <= std_logic_vector(signed(sext_ln1749_fu_2109_p1) + signed(mul_ln1755_1_fu_2103_p2));
    add_ln1756_fu_2141_p2 <= std_logic_vector(signed(sext_ln1749_1_fu_2137_p1) + signed(mul_ln1756_1_fu_2131_p2));
    add_ln1758_fu_2162_p2 <= std_logic_vector(unsigned(zext_ln1753_1_reg_3024) + unsigned(ap_const_lv13_1394));
    add_ln1759_fu_2191_p2 <= std_logic_vector(unsigned(zext_ln1753_1_reg_3024) + unsigned(ap_const_lv13_16D8));
    add_ln2037_fu_1274_p2 <= std_logic_vector(unsigned(vla18_q1) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln2069_fu_1307_p2 <= std_logic_vector(unsigned(zext_ln2069_1_fu_1303_p1) + unsigned(ap_const_lv13_1394));
    add_ln2070_fu_1328_p2 <= std_logic_vector(unsigned(zext_ln2069_1_fu_1303_p1) + unsigned(ap_const_lv13_16D8));
    add_ln2076_fu_1427_p2 <= std_logic_vector(unsigned(or_ln2076_fu_1421_p2) + unsigned(ap_const_lv32_7FFFFFFF));
    add_ln2194_fu_2571_p2 <= std_logic_vector(unsigned(zext_ln2194_1_fu_2567_p1) + unsigned(ap_const_lv13_1398));
    add_ptr7_sum_fu_1009_p2 <= std_logic_vector(unsigned(empty_207_fu_162) + unsigned(ap_const_lv8_1));
    and_ln2071_fu_1355_p2 <= (xor_ln2071_fu_1349_p2 and c0_2_reg_489);
    and_ln2072_fu_1373_p2 <= (xor_ln2072_fu_1367_p2 and c1_reg_478);
    and_ln2073_fu_1391_p2 <= (xor_ln2073_fu_1385_p2 and c0_2_reg_489);
    and_ln2074_fu_1409_p2 <= (xor_ln2074_fu_1403_p2 and c1_reg_478);
    and_ln2085_fu_1473_p2 <= (c0_2_reg_489 and a0_1_fu_1361_p2);
    and_ln2087_fu_1497_p2 <= (c0_2_reg_489 and b0_1_fu_1397_p2);
    and_ln2128_fu_1593_p2 <= (xor_ln2128_fu_1587_p2 and xor_ln2127_fu_1581_p2);
    and_ln2142_fu_1633_p2 <= (trunc_ln2142_fu_1629_p1 and rt_fu_1605_p3);
    and_ln2143_fu_1645_p2 <= (trunc_ln2142_fu_1629_p1 and oa_fu_1619_p1);
    and_ln2149_fu_1683_p2 <= (select_ln2149_fu_1675_p3 and b_lo_1_reg_561);
    and_ln2150_fu_1703_p2 <= (select_ln2150_fu_1695_p3 and b_hi_1_reg_579);
    and_ln2151_fu_1715_p2 <= (select_ln2150_fu_1695_p3 and qa_reg_525);
    and_ln2152_fu_1727_p2 <= (select_ln2150_fu_1695_p3 and qb_reg_513);
    and_ln2153_fu_1747_p2 <= (select_ln2153_fu_1739_p3 and a_lo_2_fu_1689_p2);
    and_ln2154_fu_1767_p2 <= (select_ln2154_fu_1759_p3 and a_hi_2_fu_1709_p2);
    and_ln2155_fu_1779_p2 <= (select_ln2154_fu_1759_p3 and pa_1_fu_1721_p2);
    and_ln2156_fu_1791_p2 <= (select_ln2154_fu_1759_p3 and pb_1_fu_1733_p2);
    and_ln2161_1_fu_1809_p2 <= (xor_ln2161_fu_1803_p2 and oa_fu_1619_p1);
    and_ln2161_fu_1823_p2 <= (select_ln2161_fu_1815_p3 and a_lo_2_fu_1689_p2);
    and_ln2162_fu_1843_p2 <= (select_ln2162_fu_1835_p3 and pa_1_fu_1721_p2);
    and_ln2163_fu_1855_p2 <= (select_ln2162_fu_1835_p3 and pb_1_fu_1733_p2);
    and_ln2164_fu_1895_p2 <= (xor_ln2164_fu_1881_p2 and select_ln2164_fu_1887_p3);
    and_ln2165_fu_1915_p2 <= (select_ln2165_fu_1907_p3 and b_lo_2_fu_1753_p2);
    and_ln2166_fu_1927_p2 <= (select_ln2164_fu_1887_p3 and qa_1_fu_1785_p2);
    and_ln2167_fu_1939_p2 <= (select_ln2164_fu_1887_p3 and qb_1_fu_1797_p2);
    and_ln2168_fu_1971_p2 <= (xor_ln2168_fu_1965_p2 and select_ln2162_fu_1835_p3);
    and_ln2178_fu_2405_p2 <= (shl_ln2178_fu_2392_p2 and select_ln2178_fu_2398_p3);
    and_ln2179_fu_2424_p2 <= (shl_ln2179_fu_2418_p2 and select_ln2178_fu_2398_p3);
    and_ln2180_fu_2450_p2 <= (shl_ln2180_fu_2437_p2 and select_ln2180_fu_2443_p3);
    and_ln2181_fu_2469_p2 <= (shl_ln2181_fu_2463_p2 and select_ln2180_fu_2443_p3);
    and_ln2196_1_fu_2654_p2 <= (trunc_ln2196_1_fu_2644_p1 and and_ln2196_fu_2648_p2);
    and_ln2196_fu_2648_p2 <= (xor_ln2196_fu_2634_p2 and trunc_ln2196_fu_2640_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_zint_co_reduce_mod_1_fu_674_ap_done)
    begin
        if ((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_zint_co_reduce_mod_1_fu_674_ap_done)
    begin
        if ((grp_zint_co_reduce_mod_1_fu_674_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state33, and_ln2196_1_fu_2654_p2, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_return <= and_ln2196_1_fu_2654_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    aw_6_fu_2322_p2 <= std_logic_vector(unsigned(xor_ln1720_fu_2304_p2) + unsigned(zext_ln1716_fu_2318_p1));
    aw_8_fu_2514_p2 <= std_logic_vector(unsigned(xor_ln1720_1_fu_2496_p2) + unsigned(zext_ln1716_1_fu_2510_p1));
    b0_1_fu_1397_p2 <= (b0_reg_445 xor and_ln2073_fu_1391_p2);
    b0_2_fu_1509_p2 <= (xor_ln2086_fu_1485_p2 and b0_reg_445);
    b1_1_fu_1415_p2 <= (b1_reg_434 xor and_ln2074_fu_1409_p2);
    b1_2_fu_1503_p2 <= (b1_1_fu_1415_p2 or and_ln2087_fu_1497_p2);
    b_hi_2_fu_1773_p2 <= std_logic_vector(unsigned(b_hi_1_reg_579) - unsigned(and_ln2154_fu_1767_p2));
    b_hi_3_fu_1977_p2 <= (b_hi_2_fu_1773_p2 xor and_ln2168_fu_1971_p2);
    b_hi_fu_1553_p2 <= std_logic_vector(unsigned(zext_ln2090_fu_1545_p1) + unsigned(zext_ln2090_1_fu_1549_p1));
    b_lo_2_fu_1753_p2 <= std_logic_vector(unsigned(b_lo_1_reg_561) - unsigned(and_ln2153_fu_1747_p2));
    b_lo_3_fu_1921_p2 <= std_logic_vector(unsigned(and_ln2165_fu_1915_p2) + unsigned(b_lo_2_fu_1753_p2));
    c0_fu_1455_p2 <= (select_ln2076_fu_1447_p3 and c0_2_reg_489);
    cAB_fu_1639_p2 <= (oa_fu_1619_p1 and and_ln2142_fu_1633_p2);
    cA_fu_1669_p2 <= (xor_ln2144_fu_1663_p2 or and_ln2142_fu_1633_p2);
    cBA_fu_1657_p2 <= (xor_ln2143_fu_1651_p2 and and_ln2143_fu_1645_p2);
    empty_193_fu_845_p2 <= std_logic_vector(unsigned(p_cast1_fu_842_p1) + unsigned(ap_const_lv13_1398));
    empty_194_fu_866_p2 <= std_logic_vector(unsigned(loop_index28_fu_154) + unsigned(ap_const_lv8_1));
    empty_195_fu_921_p2 <= std_logic_vector(unsigned(p_cast2_fu_917_p1) + unsigned(ap_const_lv12_9CC));
    empty_196_fu_945_p2 <= std_logic_vector(unsigned(p_cast3_fu_942_p1) + unsigned(ap_const_lv13_16DC));
    empty_197_fu_966_p2 <= std_logic_vector(unsigned(loop_index22_fu_158) + unsigned(ap_const_lv8_1));
    empty_198_fu_1027_p2 <= std_logic_vector(unsigned(p_cast4_fu_1023_p1) + unsigned(ap_const_lv11_344));
    empty_200_fu_1072_p2 <= std_logic_vector(unsigned(empty_199_fu_166) + unsigned(ap_const_lv8_1));
    empty_201_fu_1119_p2 <= std_logic_vector(unsigned(p_cast5_fu_1115_p1) + unsigned(ap_const_lv12_9CC));
    empty_202_fu_1143_p2 <= std_logic_vector(unsigned(p_cast6_fu_1140_p1) + unsigned(ap_const_lv13_D10));
    empty_203_fu_1164_p2 <= std_logic_vector(unsigned(loop_index16_fu_170) + unsigned(ap_const_lv8_1));
    empty_204_fu_1209_p2 <= std_logic_vector(unsigned(p_cast7_fu_1205_p1) + unsigned(ap_const_lv12_688));
    empty_205_fu_1233_p2 <= std_logic_vector(unsigned(p_cast8_fu_1230_p1) + unsigned(ap_const_lv13_1054));
    empty_206_fu_1254_p2 <= std_logic_vector(unsigned(loop_index_fu_174) + unsigned(ap_const_lv8_1));
    empty_fu_821_p2 <= std_logic_vector(unsigned(p_cast_fu_817_p1) + unsigned(ap_const_lv12_688));
    exitcond92_fu_1259_p2 <= "1" when (loop_index_fu_174 = ap_const_lv8_D0) else "0";
    exitcond93_fu_1169_p2 <= "1" when (loop_index16_fu_170 = ap_const_lv8_D0) else "0";
    exitcond94_fu_1078_p2 <= "1" when (empty_199_fu_166 = ap_const_lv8_D0) else "0";
    exitcond95_fu_1048_p2 <= "1" when (empty_207_fu_162 = ap_const_lv8_CF) else "0";
    exitcond96_fu_971_p2 <= "1" when (loop_index22_fu_158 = ap_const_lv8_D0) else "0";
    exitcond97_fu_871_p2 <= "1" when (loop_index28_fu_154 = ap_const_lv8_D0) else "0";

    grp_zint_co_reduce_mod_1_fu_674_a_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_zint_co_reduce_mod_1_fu_674_a <= ap_const_lv9_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_zint_co_reduce_mod_1_fu_674_a <= ap_const_lv9_144;
        else 
            grp_zint_co_reduce_mod_1_fu_674_a <= "XXXXXXXXX";
        end if; 
    end process;

    grp_zint_co_reduce_mod_1_fu_674_ap_start <= grp_zint_co_reduce_mod_1_fu_674_ap_start_reg;

    grp_zint_co_reduce_mod_1_fu_674_b_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_zint_co_reduce_mod_1_fu_674_b <= ap_const_lv13_1054;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_zint_co_reduce_mod_1_fu_674_b <= ap_const_lv13_D10;
        else 
            grp_zint_co_reduce_mod_1_fu_674_b <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_zint_co_reduce_mod_1_fu_674_m_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_zint_co_reduce_mod_1_fu_674_m <= ap_const_lv12_688;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_zint_co_reduce_mod_1_fu_674_m <= ap_const_lv12_9CC;
        else 
            grp_zint_co_reduce_mod_1_fu_674_m <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_zint_co_reduce_mod_1_fu_674_m0i_assign_proc : process(x0i_reg_2803, y0i_reg_2831, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= x0i_reg_2803;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= y0i_reg_2831;
        else 
            grp_zint_co_reduce_mod_1_fu_674_m0i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_1569_p2 <= std_logic_vector(unsigned(i_reg_502) + unsigned(ap_const_lv5_1));
    icmp_ln1716_1_fu_2347_p2 <= "1" when (u_23_reg_663 = ap_const_lv8_D1) else "0";
    icmp_ln1716_fu_2231_p2 <= "1" when (u_20_reg_642 = ap_const_lv8_D1) else "0";
    icmp_ln1749_fu_1983_p2 <= "1" when (u_reg_621 = ap_const_lv8_D1) else "0";
    icmp_ln1757_fu_2049_p2 <= "1" when (u_reg_621 = ap_const_lv8_0) else "0";
    icmp_ln2043_fu_1284_p2 <= "1" when (unsigned(num_fu_178) > unsigned(ap_const_lv14_1D)) else "0";
    icmp_ln2066_fu_1467_p2 <= "1" when (j_1_reg_421 = ap_const_lv8_0) else "0";
    icmp_ln2107_fu_1563_p2 <= "1" when (i_reg_502 = ap_const_lv5_1F) else "0";
    icmp_ln2193_fu_2553_p2 <= "1" when (j_3_fu_182 = ap_const_lv8_D1) else "0";
    j_5_fu_1461_p2 <= std_logic_vector(unsigned(j_1_reg_421) + unsigned(ap_const_lv8_FF));
    j_7_fu_2592_p2 <= std_logic_vector(unsigned(j_3_fu_182) + unsigned(ap_const_lv8_1));
    lshr_ln10_fu_1334_p4 <= add_ln2070_fu_1328_p2(12 downto 2);
    lshr_ln11_fu_2577_p4 <= add_ln2194_fu_2571_p2(12 downto 2);
    lshr_ln12_fu_1867_p4 <= a_hi_2_fu_1709_p2(63 downto 1);
    lshr_ln13_fu_1951_p4 <= b_hi_2_fu_1773_p2(63 downto 1);
    lshr_ln14_fu_2013_p4 <= add_ln1753_fu_2007_p2(12 downto 2);
    lshr_ln15_fu_2034_p4 <= add_ln1754_fu_2028_p2(12 downto 2);
    lshr_ln16_fu_2167_p4 <= add_ln1758_fu_2162_p2(12 downto 2);
    lshr_ln1719_1_fu_2377_p4 <= add_ln1719_1_fu_2371_p2(12 downto 2);
    lshr_ln17_fu_2196_p4 <= add_ln1759_fu_2191_p2(12 downto 2);
    lshr_ln18_fu_2261_p4 <= add_ln1719_fu_2255_p2(12 downto 2);
    lshr_ln2140_fu_1613_p2 <= std_logic_vector(shift_right(unsigned(a_lo_1_reg_570),to_integer(unsigned('0' & zext_ln2107_fu_1559_p1(31-1 downto 0)))));
    lshr_ln2141_fu_1623_p2 <= std_logic_vector(shift_right(unsigned(b_lo_1_reg_561),to_integer(unsigned('0' & zext_ln2107_fu_1559_p1(31-1 downto 0)))));
    lshr_ln_fu_1313_p4 <= add_ln2069_fu_1307_p2(12 downto 2);
    mul_ln1755_1_fu_2103_p1 <= zext_ln1755_1_fu_2099_p1(32 - 1 downto 0);
    mul_ln1755_fu_2093_p1 <= zext_ln1755_fu_2089_p1(32 - 1 downto 0);
    mul_ln1756_1_fu_2131_p1 <= zext_ln1755_1_fu_2099_p1(32 - 1 downto 0);
    mul_ln1756_fu_2125_p1 <= zext_ln1755_fu_2089_p1(32 - 1 downto 0);
    nega_fu_2065_p3 <= cca_reg_609(32 downto 32);
    negb_fu_2276_p3 <= ccb_reg_597(32 downto 32);
    num_3_fu_2482_p2 <= std_logic_vector(unsigned(num_fu_178) + unsigned(ap_const_lv14_3FE2));
    oa_fu_1619_p1 <= lshr_ln2140_fu_1613_p2(1 - 1 downto 0);
    or_ln2076_fu_1421_p2 <= (vla18_q1 or vla18_q0);
    or_ln2196_fu_2620_p2 <= (sub_ln2196_fu_2614_p2 or rc_1_fu_186);
    p_cast10_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_851_p4),64));
    p_cast11_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_927_p4),64));
    p_cast12_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_951_p4),64));
    p_cast13_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1033_p4),64));
    p_cast14_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_199_fu_166),64));
    p_cast15_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1125_p4),64));
    p_cast16_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1149_p4),64));
    p_cast17_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1215_p4),64));
    p_cast18_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1239_p4),64));
    p_cast1_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_2710),13));
    p_cast2_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_909_p3),12));
    p_cast3_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2748),13));
    p_cast4_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1015_p3),11));
    p_cast5_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1107_p3),12));
    p_cast6_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_2811),13));
    p_cast7_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1197_p3),12));
    p_cast8_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_2839),13));
    p_cast9_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_827_p4),64));
    p_cast_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_809_p3),12));
    pa_1_fu_1721_p2 <= std_logic_vector(signed(pa_reg_549) - signed(and_ln2151_fu_1715_p2));
    pa_2_fu_1849_p2 <= std_logic_vector(unsigned(and_ln2162_fu_1843_p2) + unsigned(pa_1_fu_1721_p2));
    pa_3_fu_2411_p2 <= std_logic_vector(signed(pa_reg_549) - signed(and_ln2178_fu_2405_p2));
    pb_1_fu_1733_p2 <= std_logic_vector(signed(pb_reg_537) - signed(and_ln2152_fu_1727_p2));
    pb_2_fu_1861_p2 <= std_logic_vector(unsigned(and_ln2163_fu_1855_p2) + unsigned(pb_1_fu_1733_p2));
    pb_3_fu_2430_p2 <= std_logic_vector(signed(pb_reg_537) - signed(and_ln2179_fu_2424_p2));
    qa_1_fu_1785_p2 <= std_logic_vector(signed(qa_reg_525) - signed(and_ln2155_fu_1779_p2));
    qa_2_fu_1933_p2 <= std_logic_vector(unsigned(and_ln2166_fu_1927_p2) + unsigned(qa_1_fu_1785_p2));
    qa_3_fu_2456_p2 <= std_logic_vector(signed(qa_reg_525) - signed(and_ln2180_fu_2450_p2));
    qb_1_fu_1797_p2 <= std_logic_vector(signed(qb_reg_513) - signed(and_ln2156_fu_1791_p2));
    qb_2_fu_1945_p2 <= std_logic_vector(unsigned(and_ln2167_fu_1939_p2) + unsigned(qb_1_fu_1797_p2));
    qb_3_fu_2475_p2 <= std_logic_vector(signed(qb_reg_513) - signed(and_ln2181_fu_2469_p2));
    rc_2_fu_2603_p2 <= (vla18_q0 or rc_1_fu_186);
    rc_fu_2539_p2 <= (vla18_q1 xor ap_const_lv32_1);
    rt_fu_1605_p3 <= xor_ln2127_1_fu_1599_p2(63 downto 63);
    rz_fu_1575_p2 <= std_logic_vector(unsigned(b_hi_1_reg_579) - unsigned(a_hi_1_reg_588));
    select_ln1707_1_fu_2284_p3 <= 
        ap_const_lv32_7FFFFFFF when (negb_fu_2276_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1707_fu_2073_p3 <= 
        ap_const_lv32_7FFFFFFF when (nega_fu_2065_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1720_1_fu_2292_p3 <= 
        ap_const_lv31_7FFFFFFF when (negb_fu_2276_p3(0) = '1') else 
        ap_const_lv31_0;
    select_ln1720_fu_2081_p3 <= 
        ap_const_lv31_7FFFFFFF when (nega_fu_2065_p3(0) = '1') else 
        ap_const_lv31_0;
    select_ln2076_fu_1447_p3 <= 
        ap_const_lv32_FFFFFFFF when (xor_ln2076_fu_1441_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2149_fu_1675_p3 <= 
        ap_const_lv32_FFFFFFFF when (cAB_fu_1639_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2150_fu_1695_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cAB_fu_1639_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2153_fu_1739_p3 <= 
        ap_const_lv32_FFFFFFFF when (cBA_fu_1657_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2154_fu_1759_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cBA_fu_1657_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2161_fu_1815_p3 <= 
        ap_const_lv32_FFFFFFFF when (and_ln2161_1_fu_1809_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2162_fu_1835_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (and_ln2161_1_fu_1809_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2164_fu_1887_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (cA_fu_1669_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln2165_fu_1907_p3 <= 
        ap_const_lv32_FFFFFFFF when (cA_fu_1669_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln2178_fu_2398_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (nega_reg_3044(0) = '1') else 
        ap_const_lv64_0;
    select_ln2180_fu_2443_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (negb_reg_3084(0) = '1') else 
        ap_const_lv64_0;
        sext_ln1749_1_fu_2137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ccb_reg_597),64));

        sext_ln1749_fu_2109_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cca_reg_609),64));

    shl_ln14_fu_1515_p3 <= (a0_2_fu_1491_p2 & ap_const_lv31_0);
    shl_ln15_fu_1537_p3 <= (b0_2_fu_1509_p2 & ap_const_lv31_0);
    shl_ln16_fu_2559_p3 <= (j_3_fu_182 & ap_const_lv2_0);
    shl_ln1719_1_fu_2359_p3 <= (u_23_reg_663 & ap_const_lv2_0);
    shl_ln17_fu_1995_p3 <= (u_reg_621 & ap_const_lv2_0);
    shl_ln18_fu_2243_p3 <= (u_20_reg_642 & ap_const_lv2_0);
    shl_ln2178_fu_2392_p2 <= std_logic_vector(shift_left(unsigned(pa_reg_549),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2179_fu_2418_p2 <= std_logic_vector(shift_left(unsigned(pb_reg_537),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2180_fu_2437_p2 <= std_logic_vector(shift_left(unsigned(qa_reg_525),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln2181_fu_2463_p2 <= std_logic_vector(shift_left(unsigned(qb_reg_513),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    shl_ln_fu_1295_p3 <= (j_reg_410 & ap_const_lv2_0);
    sub_ln2196_fu_2614_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(rc_1_fu_186));
    sub_ln658_1_fu_886_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_2_reg_2702));
    sub_ln659_1_fu_990_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_1_fu_985_p2));
    sub_ln659_fu_1001_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln659_reg_2740));
    tmp_10_fu_1197_p3 <= (loop_index_fu_174 & ap_const_lv2_0);
    tmp_11_fu_1215_p4 <= empty_204_fu_1209_p2(11 downto 2);
    tmp_12_fu_1239_p4 <= empty_205_fu_1233_p2(12 downto 2);
    tmp_16_fu_1433_p3 <= add_ln2076_fu_1427_p2(31 downto 31);
    tmp_17_fu_2626_p3 <= or_ln2196_fu_2620_p2(31 downto 31);
    tmp_1_fu_827_p4 <= empty_fu_821_p2(11 downto 2);
    tmp_2_fu_851_p4 <= empty_193_fu_845_p2(12 downto 2);
    tmp_3_fu_909_p3 <= (loop_index22_fu_158 & ap_const_lv2_0);
    tmp_4_fu_927_p4 <= empty_195_fu_921_p2(11 downto 2);
    tmp_5_fu_951_p4 <= empty_196_fu_945_p2(12 downto 2);
    tmp_6_fu_1015_p3 <= (add_ptr7_sum_fu_1009_p2 & ap_const_lv2_0);
    tmp_7_fu_1033_p4 <= empty_198_fu_1027_p2(10 downto 2);
    tmp_8_fu_1107_p3 <= (loop_index16_fu_170 & ap_const_lv2_0);
    tmp_9_fu_1125_p4 <= empty_201_fu_1119_p2(11 downto 2);
    tmp_fu_809_p3 <= (loop_index28_fu_154 & ap_const_lv2_0);
    tmp_s_fu_1149_p4 <= empty_202_fu_1143_p2(12 downto 2);
    trunc_ln1720_1_fu_2492_p1 <= vla18_q0(31 - 1 downto 0);
    trunc_ln1720_fu_2300_p1 <= vla18_q0(31 - 1 downto 0);
    trunc_ln1758_fu_2153_p1 <= za_fu_2119_p2(31 - 1 downto 0);
    trunc_ln1759_fu_2182_p1 <= zb_fu_2147_p2(31 - 1 downto 0);
    trunc_ln1764_fu_2055_p1 <= cca_reg_609(32 - 1 downto 0);
    trunc_ln1765_fu_2060_p1 <= ccb_reg_597(32 - 1 downto 0);
    trunc_ln2142_fu_1629_p1 <= lshr_ln2141_fu_1623_p2(1 - 1 downto 0);
    trunc_ln2196_1_fu_2644_p1 <= vla18_q0(1 - 1 downto 0);
    trunc_ln2196_fu_2640_p1 <= vla18_q1(1 - 1 downto 0);
    trunc_ln651_1_fu_754_p1 <= vla18_q0(31 - 1 downto 0);
    trunc_ln651_fu_702_p1 <= vla18_q1(31 - 1 downto 0);
    u_33_fu_2237_p2 <= std_logic_vector(unsigned(u_20_reg_642) + unsigned(ap_const_lv8_1));
    u_34_fu_1989_p2 <= std_logic_vector(unsigned(u_reg_621) + unsigned(ap_const_lv8_1));
    u_35_fu_2353_p2 <= std_logic_vector(unsigned(u_23_reg_663) + unsigned(ap_const_lv8_1));
    vla18_addr_28_reg_2672 <= ap_const_lv64_273(13 - 1 downto 0);
    vla18_addr_reg_2667 <= ap_const_lv64_1A2(13 - 1 downto 0);

    vla18_address0_assign_proc : process(ap_CS_fsm_state1, vla18_addr_28_reg_2672, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state25, icmp_ln1716_1_fu_2347_p2, ap_CS_fsm_state31, icmp_ln2193_fu_2553_p2, grp_zint_co_reduce_mod_1_fu_674_vla18_address0, ap_CS_fsm_state27, ap_CS_fsm_state29, p_cast9_fu_837_p1, p_cast11_fu_937_p1, p_cast14_fu_1067_p1, p_cast16_fu_1159_p1, p_cast18_fu_1249_p1, ap_CS_fsm_state13, zext_ln2070_fu_1344_p1, zext_ln1754_fu_2044_p1, zext_ln1759_fu_2206_p1, zext_ln1719_fu_2271_p1, zext_ln1719_1_fu_2387_p1, zext_ln2194_fu_2587_p1)
    begin
        if (((icmp_ln2193_fu_2553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            vla18_address0 <= vla18_addr_28_reg_2672;
        elsif (((icmp_ln2193_fu_2553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            vla18_address0 <= zext_ln2194_fu_2587_p1(13 - 1 downto 0);
        elsif (((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            vla18_address0 <= zext_ln1719_1_fu_2387_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            vla18_address0 <= zext_ln1719_fu_2271_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            vla18_address0 <= zext_ln1759_fu_2206_p1(13 - 1 downto 0);
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address0 <= ap_const_lv64_687(13 - 1 downto 0);
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address0 <= zext_ln1754_fu_2044_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            vla18_address0 <= ap_const_lv64_5B7(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            vla18_address0 <= zext_ln2070_fu_1344_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            vla18_address0 <= ap_const_lv64_415(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            vla18_address0 <= p_cast18_fu_1249_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            vla18_address0 <= p_cast16_fu_1159_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            vla18_address0 <= p_cast14_fu_1067_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            vla18_address0 <= ap_const_lv64_D1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            vla18_address0 <= p_cast11_fu_937_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            vla18_address0 <= p_cast9_fu_837_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            vla18_address0 <= ap_const_lv64_273(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_address0 <= grp_zint_co_reduce_mod_1_fu_674_vla18_address0;
        else 
            vla18_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_address1_assign_proc : process(ap_CS_fsm_state1, vla18_addr_reg_2667, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, vla18_addr_52_reg_3078, ap_CS_fsm_state24, vla18_addr_53_reg_3113, ap_CS_fsm_state26, ap_CS_fsm_state31, grp_zint_co_reduce_mod_1_fu_674_vla18_address1, ap_CS_fsm_state16, ap_CS_fsm_state27, ap_CS_fsm_state29, p_cast10_fu_861_p1, p_cast12_fu_961_p1, p_cast13_fu_1043_p1, ap_CS_fsm_state8, p_cast15_fu_1135_p1, p_cast17_fu_1225_p1, zext_ln2069_fu_1323_p1, zext_ln1753_fu_2023_p1, zext_ln1758_fu_2177_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            vla18_address1 <= vla18_addr_reg_2667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            vla18_address1 <= vla18_addr_53_reg_3113;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla18_address1 <= vla18_addr_52_reg_3078;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            vla18_address1 <= zext_ln1758_fu_2177_p1(13 - 1 downto 0);
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address1 <= ap_const_lv64_5B6(13 - 1 downto 0);
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_address1 <= zext_ln1753_fu_2023_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            vla18_address1 <= zext_ln2069_fu_1323_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            vla18_address1 <= ap_const_lv64_4E6(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            vla18_address1 <= ap_const_lv64_415(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            vla18_address1 <= p_cast17_fu_1225_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            vla18_address1 <= p_cast15_fu_1135_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            vla18_address1 <= p_cast13_fu_1043_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            vla18_address1 <= p_cast12_fu_961_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vla18_address1 <= p_cast10_fu_861_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            vla18_address1 <= ap_const_lv64_1A2(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_address1 <= grp_zint_co_reduce_mod_1_fu_674_vla18_address1;
        else 
            vla18_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state25, icmp_ln1716_1_fu_2347_p2, ap_CS_fsm_state31, icmp_ln2193_fu_2553_p2, grp_zint_co_reduce_mod_1_fu_674_vla18_ce0, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln2193_fu_2553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln2193_fu_2553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((icmp_ln1716_1_fu_2347_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            vla18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_ce0 <= grp_zint_co_reduce_mod_1_fu_674_vla18_ce0;
        else 
            vla18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state31, grp_zint_co_reduce_mod_1_fu_674_vla18_ce1, ap_CS_fsm_state16, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            vla18_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_ce1 <= grp_zint_co_reduce_mod_1_fu_674_vla18_ce1;
        else 
            vla18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    vla18_d0_assign_proc : process(vla18_q1, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, grp_zint_co_reduce_mod_1_fu_674_vla18_d0, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state13, add_ln2037_fu_1274_p2, trunc_ln1765_fu_2060_p1, zext_ln1759_1_fu_2186_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            vla18_d0 <= zext_ln1759_1_fu_2186_p1;
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_d0 <= trunc_ln1765_fu_2060_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            vla18_d0 <= add_ln2037_fu_1274_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            vla18_d0 <= vla18_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            vla18_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            vla18_d0 <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_d0 <= grp_zint_co_reduce_mod_1_fu_674_vla18_d0;
        else 
            vla18_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_d1_assign_proc : process(vla18_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, grp_zint_co_reduce_mod_1_fu_674_vla18_d1, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state8, trunc_ln1764_fu_2055_p1, zext_ln1758_1_fu_2157_p1, zext_ln1721_fu_2334_p1, zext_ln1721_1_fu_2526_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            vla18_d1 <= zext_ln1721_1_fu_2526_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            vla18_d1 <= zext_ln1721_fu_2334_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            vla18_d1 <= zext_ln1758_1_fu_2157_p1;
        elsif (((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            vla18_d1 <= trunc_ln1764_fu_2055_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            vla18_d1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            vla18_d1 <= vla18_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_d1 <= grp_zint_co_reduce_mod_1_fu_674_vla18_d1;
        else 
            vla18_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    vla18_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, icmp_ln1757_reg_3040, ap_CS_fsm_state22, grp_zint_co_reduce_mod_1_fu_674_vla18_we0, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln1757_reg_3040 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            vla18_we0 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_we0 <= grp_zint_co_reduce_mod_1_fu_674_vla18_we0;
        else 
            vla18_we0 <= ap_const_lv4_0;
        end if; 
    end process;


    vla18_we1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state21, icmp_ln1749_fu_1983_p2, icmp_ln1757_reg_3040, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state26, grp_zint_co_reduce_mod_1_fu_674_vla18_we1, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln1757_reg_3040 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln1749_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21)))) then 
            vla18_we1 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            vla18_we1 <= grp_zint_co_reduce_mod_1_fu_674_vla18_we1;
        else 
            vla18_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    x0i_fu_1094_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_15_reg_2735));
    xor_ln1720_1_fu_2496_p2 <= (vla18_q0 xor select_ln1707_1_reg_3090);
    xor_ln1720_2_fu_2313_p2 <= (trunc_ln1720_fu_2300_p1 xor select_ln1720_reg_3055);
    xor_ln1720_3_fu_2505_p2 <= (trunc_ln1720_1_fu_2492_p1 xor select_ln1720_1_reg_3095);
    xor_ln1720_fu_2304_p2 <= (vla18_q0 xor select_ln1707_reg_3050);
    xor_ln2071_fu_1349_p2 <= (vla18_q1 xor a0_reg_467);
    xor_ln2072_fu_1367_p2 <= (vla18_q1 xor a1_reg_456);
    xor_ln2073_fu_1385_p2 <= (vla18_q0 xor b0_reg_445);
    xor_ln2074_fu_1403_p2 <= (vla18_q0 xor b1_reg_434);
    xor_ln2076_fu_1441_p2 <= (tmp_16_fu_1433_p3 xor ap_const_lv1_1);
    xor_ln2086_fu_1485_p2 <= (c0_2_reg_489 xor ap_const_lv32_FFFFFFFF);
    xor_ln2127_1_fu_1599_p2 <= (rz_fu_1575_p2 xor and_ln2128_fu_1593_p2);
    xor_ln2127_fu_1581_p2 <= (b_hi_1_reg_579 xor a_hi_1_reg_588);
    xor_ln2128_fu_1587_p2 <= (rz_fu_1575_p2 xor a_hi_1_reg_588);
    xor_ln2143_fu_1651_p2 <= (rt_fu_1605_p3 xor ap_const_lv1_1);
    xor_ln2144_fu_1663_p2 <= (oa_fu_1619_p1 xor ap_const_lv1_1);
    xor_ln2161_fu_1803_p2 <= (ap_const_lv1_1 xor and_ln2142_fu_1633_p2);
    xor_ln2164_fu_1881_p2 <= (zext_ln2164_fu_1877_p1 xor a_hi_2_fu_1709_p2);
    xor_ln2168_fu_1965_p2 <= (zext_ln2168_fu_1961_p1 xor b_hi_2_fu_1773_p2);
    xor_ln2196_fu_2634_p2 <= (tmp_17_fu_2626_p3 xor ap_const_lv1_1);
    y0i_fu_1184_p1 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(y_17_reg_2768));
    y_10_fu_758_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(trunc_ln651_1_fu_754_p1));
    y_11_fu_776_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_3_fu_764_p2));
    y_12_fu_794_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_3_fu_782_p2));
    y_15_fu_891_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln658_reg_2687));
    y_6_fu_724_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln656_fu_712_p2));
    y_7_fu_742_p0 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(mul_ln657_fu_730_p2));
    y_fu_706_p2 <= std_logic_vector(unsigned(ap_const_lv31_2) - unsigned(trunc_ln651_fu_702_p1));
    za_fu_2119_p2 <= std_logic_vector(unsigned(add_ln1755_fu_2113_p2) + unsigned(mul_ln1755_fu_2093_p2));
    zb_fu_2147_p2 <= std_logic_vector(unsigned(add_ln1756_fu_2141_p2) + unsigned(mul_ln1756_fu_2125_p2));
    zext_ln1716_1_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_12_reg_653),32));
    zext_ln1716_fu_2318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_632),32));
    zext_ln1719_1_fu_2387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1719_1_fu_2377_p4),64));
    zext_ln1719_2_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln18_fu_2243_p3),13));
    zext_ln1719_3_fu_2367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1719_1_fu_2359_p3),13));
    zext_ln1719_fu_2271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln18_fu_2261_p4),64));
    zext_ln1720_1_fu_2501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_12_reg_653),31));
    zext_ln1720_fu_2309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cc_reg_632),31));
    zext_ln1721_1_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1717_1_fu_2520_p2),32));
    zext_ln1721_fu_2334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1717_fu_2328_p2),32));
    zext_ln1753_1_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln17_fu_1995_p3),13));
    zext_ln1753_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln14_fu_2013_p4),64));
    zext_ln1754_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln15_fu_2034_p4),64));
    zext_ln1755_1_fu_2099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vla18_q0),64));
    zext_ln1755_fu_2089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vla18_q1),64));
    zext_ln1758_1_fu_2157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1758_fu_2153_p1),32));
    zext_ln1758_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln16_fu_2167_p4),64));
    zext_ln1759_1_fu_2186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1759_fu_2182_p1),32));
    zext_ln1759_fu_2206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln17_fu_2196_p4),64));
    zext_ln2069_1_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1295_p3),13));
    zext_ln2069_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1313_p4),64));
    zext_ln2070_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln10_fu_1334_p4),64));
    zext_ln2089_1_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a1_2_fu_1479_p2),64));
    zext_ln2089_fu_1523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln14_fu_1515_p3),64));
    zext_ln2090_1_fu_1549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b1_2_fu_1503_p2),64));
    zext_ln2090_fu_1545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_1537_p3),64));
    zext_ln2107_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_502),32));
    zext_ln2164_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln12_fu_1867_p4),64));
    zext_ln2168_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_fu_1951_p4),64));
    zext_ln2194_1_fu_2567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln16_fu_2559_p3),13));
    zext_ln2194_fu_2587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln11_fu_2577_p4),64));
end behav;
